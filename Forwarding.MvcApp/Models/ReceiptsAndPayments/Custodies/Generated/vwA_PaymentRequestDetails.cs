using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.ReceiptsAndPayments.Custodies.Generated
{
    [Serializable]
    public partial class CVarvwA_PaymentRequestDetails
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal Int64 mID;
        internal Int64 mPaymentRequestID;
        internal Int32 mChargeTypeID;
        internal String mChargeTypeName;
        internal Int64 mOperationID;
        internal String mOperationCode;
        internal Decimal mEstmatedCost;
        internal Decimal mActualCost;
        internal String mDescription;
        internal Boolean mIsDocumented;
        internal String mHouseName;
        internal Boolean mIsSettlementOnly;
        internal Int64 mPayableID;
        internal Int32 mSupplierID;
        internal String mSupplierName;
        internal String mCoupon;
        internal String mVesselName;
        internal String mActualArrivalString;
        #endregion

        #region "Methods"
        public Int64 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        public Int64 PaymentRequestID
        {
            get { return mPaymentRequestID; }
            set { mPaymentRequestID = value; }
        }
        public Int32 ChargeTypeID
        {
            get { return mChargeTypeID; }
            set { mChargeTypeID = value; }
        }
        public String ChargeTypeName
        {
            get { return mChargeTypeName; }
            set { mChargeTypeName = value; }
        }
        public Int64 OperationID
        {
            get { return mOperationID; }
            set { mOperationID = value; }
        }
        public String OperationCode
        {
            get { return mOperationCode; }
            set { mOperationCode = value; }
        }
        public Decimal EstmatedCost
        {
            get { return mEstmatedCost; }
            set { mEstmatedCost = value; }
        }
        public Decimal ActualCost
        {
            get { return mActualCost; }
            set { mActualCost = value; }
        }
        public String Description
        {
            get { return mDescription; }
            set { mDescription = value; }
        }
        public Boolean IsDocumented
        {
            get { return mIsDocumented; }
            set { mIsDocumented = value; }
        }
        public String HouseName
        {
            get { return mHouseName; }
            set { mHouseName = value; }
        }
        public Boolean IsSettlementOnly
        {
            get { return mIsSettlementOnly; }
            set { mIsSettlementOnly = value; }
        }
        public Int64 PayableID
        {
            get { return mPayableID; }
            set { mPayableID = value; }
        }
        public Int32 SupplierID
        {
            get { return mSupplierID; }
            set { mSupplierID = value; }
        }
        public String SupplierName
        {
            get { return mSupplierName; }
            set { mSupplierName = value; }
        }
        public String Coupon
        {
            get { return mCoupon; }
            set { mCoupon = value; }
        }
        public String VesselName
        {
            get { return mVesselName; }
            set { mVesselName = value; }
        }
        public String ActualArrivalString
        {
            get { return mActualArrivalString; }
            set { mActualArrivalString = value; }
        }
        #endregion
    }

    public partial class CvwA_PaymentRequestDetails
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwA_PaymentRequestDetails> lstCVarvwA_PaymentRequestDetails = new List<CVarvwA_PaymentRequestDetails>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwA_PaymentRequestDetails.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListvwA_PaymentRequestDetails";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwA_PaymentRequestDetails ObjCVarvwA_PaymentRequestDetails = new CVarvwA_PaymentRequestDetails();
                        ObjCVarvwA_PaymentRequestDetails.mID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mPaymentRequestID = Convert.ToInt64(dr["PaymentRequestID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mChargeTypeID = Convert.ToInt32(dr["ChargeTypeID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mChargeTypeName = Convert.ToString(dr["ChargeTypeName"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mOperationID = Convert.ToInt64(dr["OperationID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mEstmatedCost = Convert.ToDecimal(dr["EstmatedCost"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mActualCost = Convert.ToDecimal(dr["ActualCost"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mDescription = Convert.ToString(dr["Description"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mIsDocumented = Convert.ToBoolean(dr["IsDocumented"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mHouseName = Convert.ToString(dr["HouseName"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mIsSettlementOnly = Convert.ToBoolean(dr["IsSettlementOnly"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mPayableID = Convert.ToInt64(dr["PayableID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mSupplierID = Convert.ToInt32(dr["SupplierID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mSupplierName = Convert.ToString(dr["SupplierName"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mCoupon = Convert.ToString(dr["Coupon"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mVesselName = Convert.ToString(dr["VesselName"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mActualArrivalString = Convert.ToString(dr["ActualArrivalString"].ToString());
                        lstCVarvwA_PaymentRequestDetails.Add(ObjCVarvwA_PaymentRequestDetails);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwA_PaymentRequestDetails.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwA_PaymentRequestDetails";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwA_PaymentRequestDetails ObjCVarvwA_PaymentRequestDetails = new CVarvwA_PaymentRequestDetails();
                        ObjCVarvwA_PaymentRequestDetails.mID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mPaymentRequestID = Convert.ToInt64(dr["PaymentRequestID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mChargeTypeID = Convert.ToInt32(dr["ChargeTypeID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mChargeTypeName = Convert.ToString(dr["ChargeTypeName"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mOperationID = Convert.ToInt64(dr["OperationID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mEstmatedCost = Convert.ToDecimal(dr["EstmatedCost"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mActualCost = Convert.ToDecimal(dr["ActualCost"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mDescription = Convert.ToString(dr["Description"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mIsDocumented = Convert.ToBoolean(dr["IsDocumented"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mHouseName = Convert.ToString(dr["HouseName"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mIsSettlementOnly = Convert.ToBoolean(dr["IsSettlementOnly"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mPayableID = Convert.ToInt64(dr["PayableID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mSupplierID = Convert.ToInt32(dr["SupplierID"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mSupplierName = Convert.ToString(dr["SupplierName"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mCoupon = Convert.ToString(dr["Coupon"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mVesselName = Convert.ToString(dr["VesselName"].ToString());
                        ObjCVarvwA_PaymentRequestDetails.mActualArrivalString = Convert.ToString(dr["ActualArrivalString"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwA_PaymentRequestDetails.Add(ObjCVarvwA_PaymentRequestDetails);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }


}
