using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.ContainerFreightStation.Reports
{
    [Serializable]
    public partial class CVarvwWH_CFS_WarehouseStatistics
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal String mOperationNumber;
        internal String mMasterBL;
        internal String mContainerNumber;
        internal String mContainerType;
        internal String mBookingParty;
        internal String mHouseNumber;
        internal String mConsignee;
        internal Int32 mBranchID;
        internal String mBranchName;
        internal Int32 mShipmentType;
        internal Int32 mPOL;
        internal String mPOLCode;
        internal String mPOLName;
        internal Int32 mPOD;
        internal String mPODCode;
        internal String mPODName;
        internal Int32 mCommodityID;
        internal String mCommodityName;
        internal Int32 mVesselID;
        internal String mVesselName;
        internal String mVoyageOrTruckNumber;
        internal Decimal mGrossWeight;
        internal Decimal mNetWeight;
        internal Decimal mVolume;
        internal String mPackages;
        internal String mDescriptionOfGoods;
        internal Int32 mWarehouseID;
        internal String mWarehouseName;
        internal String mStorageLocation;
        internal DateTime mEntryDate;
        internal DateTime mStorageEndDate;
        internal String mReleaseNumber;
        internal String mCouponNumber;
        internal String mCertificationNumber;
        internal String mReleaseRemarks;
        internal String mReleasedBy;
        internal DateTime mReleasingDate;
        internal Int64 mOperationID;
        internal Int64 mContainerID;
        internal Int64 mHouseBillID;
        internal Int32 mConsigneeID;
        internal Int32 mBookingPartyID;
        internal Int64 mInventoryID;
        internal Int64 mReleaseOrderID;
        internal String mCustomsSealNumber;
        internal String mCustomsCertificateNumber;
        internal Decimal mCustomsFeesAmount;
        internal Decimal mCustomsFeesVAT;
        internal Decimal mCustomsFeesTotal;
        #endregion

        #region "Methods"
        public String OperationNumber
        {
            get { return mOperationNumber; }
            set { mOperationNumber = value; }
        }
        public String MasterBL
        {
            get { return mMasterBL; }
            set { mMasterBL = value; }
        }
        public String ContainerNumber
        {
            get { return mContainerNumber; }
            set { mContainerNumber = value; }
        }
        public String ContainerType
        {
            get { return mContainerType; }
            set { mContainerType = value; }
        }
        public String BookingParty
        {
            get { return mBookingParty; }
            set { mBookingParty = value; }
        }
        public String HouseNumber
        {
            get { return mHouseNumber; }
            set { mHouseNumber = value; }
        }
        public String Consignee
        {
            get { return mConsignee; }
            set { mConsignee = value; }
        }
        public Int32 BranchID
        {
            get { return mBranchID; }
            set { mBranchID = value; }
        }
        public String BranchName
        {
            get { return mBranchName; }
            set { mBranchName = value; }
        }
        public Int32 ShipmentType
        {
            get { return mShipmentType; }
            set { mShipmentType = value; }
        }
        public Int32 POL
        {
            get { return mPOL; }
            set { mPOL = value; }
        }
        public String POLCode
        {
            get { return mPOLCode; }
            set { mPOLCode = value; }
        }
        public String POLName
        {
            get { return mPOLName; }
            set { mPOLName = value; }
        }
        public Int32 POD
        {
            get { return mPOD; }
            set { mPOD = value; }
        }
        public String PODCode
        {
            get { return mPODCode; }
            set { mPODCode = value; }
        }
        public String PODName
        {
            get { return mPODName; }
            set { mPODName = value; }
        }
        public Int32 CommodityID
        {
            get { return mCommodityID; }
            set { mCommodityID = value; }
        }
        public String CommodityName
        {
            get { return mCommodityName; }
            set { mCommodityName = value; }
        }
        public Int32 VesselID
        {
            get { return mVesselID; }
            set { mVesselID = value; }
        }
        public String VesselName
        {
            get { return mVesselName; }
            set { mVesselName = value; }
        }
        public String VoyageOrTruckNumber
        {
            get { return mVoyageOrTruckNumber; }
            set { mVoyageOrTruckNumber = value; }
        }
        public Decimal GrossWeight
        {
            get { return mGrossWeight; }
            set { mGrossWeight = value; }
        }
        public Decimal NetWeight
        {
            get { return mNetWeight; }
            set { mNetWeight = value; }
        }
        public Decimal Volume
        {
            get { return mVolume; }
            set { mVolume = value; }
        }
        public String Packages
        {
            get { return mPackages; }
            set { mPackages = value; }
        }
        public String DescriptionOfGoods
        {
            get { return mDescriptionOfGoods; }
            set { mDescriptionOfGoods = value; }
        }
        public Int32 WarehouseID
        {
            get { return mWarehouseID; }
            set { mWarehouseID = value; }
        }
        public String WarehouseName
        {
            get { return mWarehouseName; }
            set { mWarehouseName = value; }
        }
        public String StorageLocation
        {
            get { return mStorageLocation; }
            set { mStorageLocation = value; }
        }
        public DateTime EntryDate
        {
            get { return mEntryDate; }
            set { mEntryDate = value; }
        }
        public DateTime StorageEndDate
        {
            get { return mStorageEndDate; }
            set { mStorageEndDate = value; }
        }
        public String ReleaseNumber
        {
            get { return mReleaseNumber; }
            set { mReleaseNumber = value; }
        }
        public String CouponNumber
        {
            get { return mCouponNumber; }
            set { mCouponNumber = value; }
        }
        public String CertificationNumber
        {
            get { return mCertificationNumber; }
            set { mCertificationNumber = value; }
        }
        public String ReleaseRemarks
        {
            get { return mReleaseRemarks; }
            set { mReleaseRemarks = value; }
        }
        public String ReleasedBy
        {
            get { return mReleasedBy; }
            set { mReleasedBy = value; }
        }
        public DateTime ReleasingDate
        {
            get { return mReleasingDate; }
            set { mReleasingDate = value; }
        }
        public Int64 OperationID
        {
            get { return mOperationID; }
            set { mOperationID = value; }
        }
        public Int64 ContainerID
        {
            get { return mContainerID; }
            set { mContainerID = value; }
        }
        public Int64 HouseBillID
        {
            get { return mHouseBillID; }
            set { mHouseBillID = value; }
        }
        public Int32 ConsigneeID
        {
            get { return mConsigneeID; }
            set { mConsigneeID = value; }
        }
        public Int32 BookingPartyID
        {
            get { return mBookingPartyID; }
            set { mBookingPartyID = value; }
        }
        public Int64 InventoryID
        {
            get { return mInventoryID; }
            set { mInventoryID = value; }
        }
        public Int64 ReleaseOrderID
        {
            get { return mReleaseOrderID; }
            set { mReleaseOrderID = value; }
        }
        public String CustomsSealNumber
        {
            get { return mCustomsSealNumber; }
            set { mCustomsSealNumber = value; }
        }
        public String CustomsCertificateNumber
        {
            get { return mCustomsCertificateNumber; }
            set { mCustomsCertificateNumber = value; }
        }
        public Decimal CustomsFeesAmount
        {
            get { return mCustomsFeesAmount; }
            set { mCustomsFeesAmount = value; }
        }
        public Decimal CustomsFeesVAT
        {
            get { return mCustomsFeesAmount; }
            set { mCustomsFeesVAT = value; }
        }
        public Decimal CustomsFeesTotal
        {
            get { return mCustomsFeesTotal; }
            set { mCustomsFeesTotal = value; }
        }
        #endregion
    }

    public partial class CvwWH_CFS_WarehouseStatistics
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwWH_CFS_WarehouseStatistics> lstCVarvwWH_CFS_WarehouseStatistics = new List<CVarvwWH_CFS_WarehouseStatistics>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwWH_CFS_WarehouseStatistics.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListvwWH_CFS_WarehouseStatistics";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwWH_CFS_WarehouseStatistics ObjCVarvwWH_CFS_WarehouseStatistics = new CVarvwWH_CFS_WarehouseStatistics();
                        ObjCVarvwWH_CFS_WarehouseStatistics.mOperationNumber = Convert.ToString(dr["OperationNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mMasterBL = Convert.ToString(dr["MasterBL"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mContainerNumber = Convert.ToString(dr["ContainerNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mContainerType = Convert.ToString(dr["ContainerType"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mBookingParty = Convert.ToString(dr["BookingParty"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mHouseNumber = Convert.ToString(dr["HouseNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mConsignee = Convert.ToString(dr["Consignee"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mBranchID = Convert.ToInt32(dr["BranchID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mBranchName = Convert.ToString(dr["BranchName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCommodityID = Convert.ToInt32(dr["CommodityID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCommodityName = Convert.ToString(dr["CommodityName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mVesselID = Convert.ToInt32(dr["VesselID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mVesselName = Convert.ToString(dr["VesselName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mVoyageOrTruckNumber = Convert.ToString(dr["VoyageOrTruckNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mGrossWeight = Convert.ToDecimal(dr["GrossWeight"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mNetWeight = Convert.ToDecimal(dr["NetWeight"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mVolume = Convert.ToDecimal(dr["Volume"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPackages = Convert.ToString(dr["Packages"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mDescriptionOfGoods = Convert.ToString(dr["DescriptionOfGoods"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mWarehouseID = Convert.ToInt32(dr["WarehouseID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mWarehouseName = Convert.ToString(dr["WarehouseName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mStorageLocation = Convert.ToString(dr["StorageLocation"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mEntryDate = Convert.ToDateTime(dr["EntryDate"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mStorageEndDate = Convert.ToDateTime(dr["StorageEndDate"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleaseNumber = Convert.ToString(dr["ReleaseNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCouponNumber = Convert.ToString(dr["CouponNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCertificationNumber = Convert.ToString(dr["CertificationNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleaseRemarks = Convert.ToString(dr["ReleaseRemarks"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleasedBy = Convert.ToString(dr["ReleasedBy"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleasingDate = Convert.ToDateTime(dr["ReleasingDate"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mOperationID = Convert.ToInt64(dr["OperationID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mContainerID = Convert.ToInt64(dr["ContainerID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mHouseBillID = Convert.ToInt64(dr["HouseBillID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mConsigneeID = Convert.ToInt32(dr["ConsigneeID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mBookingPartyID = Convert.ToInt32(dr["BookingPartyID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mInventoryID = Convert.ToInt64(dr["InventoryID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleaseOrderID = Convert.ToInt64(dr["ReleaseOrderID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsSealNumber = Convert.ToString(dr["CustomsSealNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsCertificateNumber = Convert.ToString(dr["CustomsCertificateNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsFeesAmount = Convert.ToDecimal(dr["CustomsFeesAmount"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsFeesVAT = Convert.ToDecimal(dr["CustomsFeesVAT"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsFeesTotal = Convert.ToDecimal(dr["CustomsFeesTotal"].ToString());

                        lstCVarvwWH_CFS_WarehouseStatistics.Add(ObjCVarvwWH_CFS_WarehouseStatistics);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwWH_CFS_WarehouseStatistics.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwWH_CFS_WarehouseStatistics";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwWH_CFS_WarehouseStatistics ObjCVarvwWH_CFS_WarehouseStatistics = new CVarvwWH_CFS_WarehouseStatistics();
                        ObjCVarvwWH_CFS_WarehouseStatistics.mOperationNumber = Convert.ToString(dr["OperationNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mMasterBL = Convert.ToString(dr["MasterBL"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mContainerNumber = Convert.ToString(dr["ContainerNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mContainerType = Convert.ToString(dr["ContainerType"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mBookingParty = Convert.ToString(dr["BookingParty"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mHouseNumber = Convert.ToString(dr["HouseNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mConsignee = Convert.ToString(dr["Consignee"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mBranchID = Convert.ToInt32(dr["BranchID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mBranchName = Convert.ToString(dr["BranchName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCommodityID = Convert.ToInt32(dr["CommodityID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCommodityName = Convert.ToString(dr["CommodityName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mVesselID = Convert.ToInt32(dr["VesselID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mVesselName = Convert.ToString(dr["VesselName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mVoyageOrTruckNumber = Convert.ToString(dr["VoyageOrTruckNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mGrossWeight = Convert.ToDecimal(dr["GrossWeight"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mNetWeight = Convert.ToDecimal(dr["NetWeight"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mVolume = Convert.ToDecimal(dr["Volume"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mPackages = Convert.ToString(dr["Packages"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mDescriptionOfGoods = Convert.ToString(dr["DescriptionOfGoods"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mWarehouseID = Convert.ToInt32(dr["WarehouseID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mWarehouseName = Convert.ToString(dr["WarehouseName"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mStorageLocation = Convert.ToString(dr["StorageLocation"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mEntryDate = Convert.ToDateTime(dr["EntryDate"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mStorageEndDate = Convert.ToDateTime(dr["StorageEndDate"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleaseNumber = Convert.ToString(dr["ReleaseNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCouponNumber = Convert.ToString(dr["CouponNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCertificationNumber = Convert.ToString(dr["CertificationNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleaseRemarks = Convert.ToString(dr["ReleaseRemarks"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleasedBy = Convert.ToString(dr["ReleasedBy"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleasingDate = Convert.ToDateTime(dr["ReleasingDate"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mOperationID = Convert.ToInt64(dr["OperationID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mContainerID = Convert.ToInt64(dr["ContainerID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mHouseBillID = Convert.ToInt64(dr["HouseBillID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mConsigneeID = Convert.ToInt32(dr["ConsigneeID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mBookingPartyID = Convert.ToInt32(dr["BookingPartyID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mInventoryID = Convert.ToInt64(dr["InventoryID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mReleaseOrderID = Convert.ToInt64(dr["ReleaseOrderID"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsSealNumber = Convert.ToString(dr["CustomsSealNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsCertificateNumber = Convert.ToString(dr["CustomsCertificateNumber"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsFeesAmount = Convert.ToDecimal(dr["CustomsFeesAmount"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsFeesVAT = Convert.ToDecimal(dr["CustomsFeesVAT"].ToString());
                        ObjCVarvwWH_CFS_WarehouseStatistics.mCustomsFeesTotal = Convert.ToDecimal(dr["CustomsFeesTotal"].ToString());

                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwWH_CFS_WarehouseStatistics.Add(ObjCVarvwWH_CFS_WarehouseStatistics);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }
}
