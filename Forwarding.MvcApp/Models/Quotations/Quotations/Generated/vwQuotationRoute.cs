using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.Quotations.Quotations.Generated
{
    [Serializable]
    public class CPKvwQuotationRoute
    {
        #region "variables"
        private Int64 mID;
        #endregion

        #region "Methods"
        public Int64 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        #endregion
    }
    [Serializable]
    public partial class CVarvwQuotationRoute : CPKvwQuotationRoute
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal String mCode;
        internal Int32 mCodeSerial;
        internal Int32 mRoutingTypeID;
        internal Int64 mQuotationID;
        internal String mQuotationCode;
        internal Int32 mBranchID;
        internal String mQuotationNotes;
        internal String mBranchName;
        internal Int32 mDirectionType;
        internal String mDirectionIconName;
        internal String mDirectionIconStyle;
        internal Int32 mTransportType;
        internal String mTransportIconName;
        internal String mTransportIconStyle;
        internal Int32 mShipmentType;
        internal String mShipmentTypeName;
        internal Int32 mPOLCountryID;
        internal Int32 mPOL;
        internal Int32 mPODCountryID;
        internal Int32 mPOD;
        internal String mPickupAddress;
        internal String mDeliveryAddress;
        internal Int32 mMoveTypeID;
        internal String mMoveTypeName;
        internal DateTime mETAPOLDate;
        internal DateTime mExpirationDate;
        internal Int32 mShippingLineID;
        internal Int32 mAirlineID;
        internal Int32 mTruckerID;
        internal Int32 mTransientTime;
        internal Int32 mValidity;
        internal Int32 mFreeTime;
        internal Int32 mFreeTimePOD;
        internal String mNotes;
        internal Int32 mCreatorUserID;
        internal String mCreatorName;
        internal DateTime mCreationDate;
        internal Int32 mModificatorUserID;
        internal DateTime mModificationDate;
        internal Int32 mCommodityID;
        internal String mCommodityName;
        internal String mRoutingName;
        internal Int32 mViewOrder;
        internal String mPOLCountryCode;
        internal String mPOLCountryName;
        internal String mPOLCode;
        internal String mPOLName;
        internal String mPOLAddress;
        internal String mPODCountryCode;
        internal String mPODCountryName;
        internal String mPODCode;
        internal String mPODName;
        internal String mPODAddress;
        internal Int32 mQuotationStageID;
        internal String mQuotationStageName;
        internal String mLineName;
        internal String mShippingLineCode;
        internal String mShippingLineName;
        internal String mAirlineCode;
        internal String mAirlineName;
        internal Int32 mTruckerCode;
        internal String mTruckerName;
        internal Int32 mSalesmanID;
        internal String mSalesmanName;
        internal Int32 mIncotermID;
        internal String mIncotermName;
        internal Int32 mIsExpired;
        internal Int32 mIsQuotationHeaderExpired;
        internal String mRepDirectionTypeShown;
        internal String mRepTransportTypeShown;
        internal Int32 mClientID;
        internal String mClientName;
        internal Int32 mAgentID;
        internal String mAgentName;
        internal String mQuoteOperations;
        internal Decimal mNumberOfPackages;
        internal Decimal mVolume;
        internal Decimal mVolumetricWeight;
        internal Decimal mGrossWeight;
        internal Decimal mChargeableWeight;
        internal String mDenialReason;
        internal Boolean mIsRevised;
        internal Boolean mIsChargesConfirmed;
        internal Int32 mPOrC;
        internal Int32 mEquipmentModelID;
        internal String mEquipmentModelCode;
        internal String mEquipmentModelName;
        internal Int32 mRevisorUserID;
        internal String mRevisorUserName;
        internal String mRevisorName;
        internal Int32 mChargesConfirmingUserID;
        internal String mChargesConfirmingUserName;
        internal String mChargesConfirmingName;
        internal String mPOrCName;
        internal String mPOrCCode;
        internal String mContainerTypes;
        internal String mPackageTypes;
        internal Boolean mIsWarehousing;
        internal Int32 mMainCriteriaID;
        internal String mMainCriteriaName;
        internal Int32 mSubCriteriaID;
        internal String mSubCriteriaName;
        internal Boolean mIsFleet;
        internal Decimal mCost;
        internal Decimal mSale;
        internal Decimal mSaleFromCharges;
        internal Decimal mCostFromCharges;
        internal Int32 mDivisionID;
        internal String mDivisionName;
        internal Int32 mEquipmentTypeID;
        internal String mEquipmentTypeName;
        internal Int32 mNumberOfChairs;
        internal String mFreightRateFormat;
        internal Boolean mIs48HourAlarmSent;
        internal Int32 mZeroCostChargesCount;
        internal Int32 mChargesCount;
        internal Int32 mSalesLeadID;
        internal String mSalesLeadName;
        internal Boolean mIsAddedToCustomer;
        internal Int32 mSalesLeadCustomerID;
        internal String mSalesLeadCustomerName;
        internal Int32 mClearancePortID;
        internal String mClearancePortCode;
        internal String mClearancePortName;
        internal Int32 mClientPlantID;
        internal String mClientPlantCode;
        internal String mClientPlantName;
        internal Int32 mPOLID_Transport;
        internal String mPOLID_TransportCode;
        internal String mPOLID_TransportName;
        internal Int32 mPickupPlaceID;
        internal String mPickupPlaceCode;
        internal String mPickupPlaceName;
        internal String mModificatorUserName;
        internal String mApprovalUserName;
        #endregion

        #region "Methods"
        public String Code
        {
            get { return mCode; }
            set { mCode = value; }
        }
        public Int32 CodeSerial
        {
            get { return mCodeSerial; }
            set { mCodeSerial = value; }
        }
        public Int32 RoutingTypeID
        {
            get { return mRoutingTypeID; }
            set { mRoutingTypeID = value; }
        }
        public Int64 QuotationID
        {
            get { return mQuotationID; }
            set { mQuotationID = value; }
        }
        public String QuotationCode
        {
            get { return mQuotationCode; }
            set { mQuotationCode = value; }
        }
        public Int32 BranchID
        {
            get { return mBranchID; }
            set { mBranchID = value; }
        }
        public String QuotationNotes
        {
            get { return mQuotationNotes; }
            set { mQuotationNotes = value; }
        }
        public String BranchName
        {
            get { return mBranchName; }
            set { mBranchName = value; }
        }
        public Int32 DirectionType
        {
            get { return mDirectionType; }
            set { mDirectionType = value; }
        }
        public String DirectionIconName
        {
            get { return mDirectionIconName; }
            set { mDirectionIconName = value; }
        }
        public String DirectionIconStyle
        {
            get { return mDirectionIconStyle; }
            set { mDirectionIconStyle = value; }
        }
        public Int32 TransportType
        {
            get { return mTransportType; }
            set { mTransportType = value; }
        }
        public String TransportIconName
        {
            get { return mTransportIconName; }
            set { mTransportIconName = value; }
        }
        public String TransportIconStyle
        {
            get { return mTransportIconStyle; }
            set { mTransportIconStyle = value; }
        }
        public Int32 ShipmentType
        {
            get { return mShipmentType; }
            set { mShipmentType = value; }
        }
        public String ShipmentTypeName
        {
            get { return mShipmentTypeName; }
            set { mShipmentTypeName = value; }
        }
        public Int32 POLCountryID
        {
            get { return mPOLCountryID; }
            set { mPOLCountryID = value; }
        }
        public Int32 POL
        {
            get { return mPOL; }
            set { mPOL = value; }
        }
        public Int32 PODCountryID
        {
            get { return mPODCountryID; }
            set { mPODCountryID = value; }
        }
        public Int32 POD
        {
            get { return mPOD; }
            set { mPOD = value; }
        }
        public String PickupAddress
        {
            get { return mPickupAddress; }
            set { mPickupAddress = value; }
        }
        public String DeliveryAddress
        {
            get { return mDeliveryAddress; }
            set { mDeliveryAddress = value; }
        }
        public Int32 MoveTypeID
        {
            get { return mMoveTypeID; }
            set { mMoveTypeID = value; }
        }
        public String MoveTypeName
        {
            get { return mMoveTypeName; }
            set { mMoveTypeName = value; }
        }
        public DateTime ETAPOLDate
        {
            get { return mETAPOLDate; }
            set { mETAPOLDate = value; }
        }
        public DateTime ExpirationDate
        {
            get { return mExpirationDate; }
            set { mExpirationDate = value; }
        }
        public Int32 ShippingLineID
        {
            get { return mShippingLineID; }
            set { mShippingLineID = value; }
        }
        public Int32 AirlineID
        {
            get { return mAirlineID; }
            set { mAirlineID = value; }
        }
        public Int32 TruckerID
        {
            get { return mTruckerID; }
            set { mTruckerID = value; }
        }
        public Int32 TransientTime
        {
            get { return mTransientTime; }
            set { mTransientTime = value; }
        }
        public Int32 Validity
        {
            get { return mValidity; }
            set { mValidity = value; }
        }
        public Int32 FreeTime
        {
            get { return mFreeTime; }
            set { mFreeTime = value; }
        }
        public Int32 FreeTimePOD
        {
            get { return mFreeTimePOD; }
            set { mFreeTimePOD = value; }
        }
        public String Notes
        {
            get { return mNotes; }
            set { mNotes = value; }
        }
        public Int32 CreatorUserID
        {
            get { return mCreatorUserID; }
            set { mCreatorUserID = value; }
        }
        public String CreatorName
        {
            get { return mCreatorName; }
            set { mCreatorName = value; }
        }
        public DateTime CreationDate
        {
            get { return mCreationDate; }
            set { mCreationDate = value; }
        }
        public Int32 ModificatorUserID
        {
            get { return mModificatorUserID; }
            set { mModificatorUserID = value; }
        }
        public DateTime ModificationDate
        {
            get { return mModificationDate; }
            set { mModificationDate = value; }
        }
        public Int32 CommodityID
        {
            get { return mCommodityID; }
            set { mCommodityID = value; }
        }
        public String CommodityName
        {
            get { return mCommodityName; }
            set { mCommodityName = value; }
        }
        public String RoutingName
        {
            get { return mRoutingName; }
            set { mRoutingName = value; }
        }
        public Int32 ViewOrder
        {
            get { return mViewOrder; }
            set { mViewOrder = value; }
        }
        public String POLCountryCode
        {
            get { return mPOLCountryCode; }
            set { mPOLCountryCode = value; }
        }
        public String POLCountryName
        {
            get { return mPOLCountryName; }
            set { mPOLCountryName = value; }
        }
        public String POLCode
        {
            get { return mPOLCode; }
            set { mPOLCode = value; }
        }
        public String POLName
        {
            get { return mPOLName; }
            set { mPOLName = value; }
        }
        public String POLAddress
        {
            get { return mPOLAddress; }
            set { mPOLAddress = value; }
        }
        public String PODCountryCode
        {
            get { return mPODCountryCode; }
            set { mPODCountryCode = value; }
        }
        public String PODCountryName
        {
            get { return mPODCountryName; }
            set { mPODCountryName = value; }
        }
        public String PODCode
        {
            get { return mPODCode; }
            set { mPODCode = value; }
        }
        public String PODName
        {
            get { return mPODName; }
            set { mPODName = value; }
        }
        public String PODAddress
        {
            get { return mPODAddress; }
            set { mPODAddress = value; }
        }
        public Int32 QuotationStageID
        {
            get { return mQuotationStageID; }
            set { mQuotationStageID = value; }
        }
        public String QuotationStageName
        {
            get { return mQuotationStageName; }
            set { mQuotationStageName = value; }
        }
        public String LineName
        {
            get { return mLineName; }
            set { mLineName = value; }
        }
        public String ShippingLineCode
        {
            get { return mShippingLineCode; }
            set { mShippingLineCode = value; }
        }
        public String ShippingLineName
        {
            get { return mShippingLineName; }
            set { mShippingLineName = value; }
        }
        public String AirlineCode
        {
            get { return mAirlineCode; }
            set { mAirlineCode = value; }
        }
        public String AirlineName
        {
            get { return mAirlineName; }
            set { mAirlineName = value; }
        }
        public Int32 TruckerCode
        {
            get { return mTruckerCode; }
            set { mTruckerCode = value; }
        }
        public String TruckerName
        {
            get { return mTruckerName; }
            set { mTruckerName = value; }
        }
        public Int32 SalesmanID
        {
            get { return mSalesmanID; }
            set { mSalesmanID = value; }
        }
        public String SalesmanName
        {
            get { return mSalesmanName; }
            set { mSalesmanName = value; }
        }
        public Int32 IncotermID
        {
            get { return mIncotermID; }
            set { mIncotermID = value; }
        }
        public String IncotermName
        {
            get { return mIncotermName; }
            set { mIncotermName = value; }
        }
        public Int32 IsExpired
        {
            get { return mIsExpired; }
            set { mIsExpired = value; }
        }
        public Int32 IsQuotationHeaderExpired
        {
            get { return mIsQuotationHeaderExpired; }
            set { mIsQuotationHeaderExpired = value; }
        }
        public String RepDirectionTypeShown
        {
            get { return mRepDirectionTypeShown; }
            set { mRepDirectionTypeShown = value; }
        }
        public String RepTransportTypeShown
        {
            get { return mRepTransportTypeShown; }
            set { mRepTransportTypeShown = value; }
        }
        public Int32 ClientID
        {
            get { return mClientID; }
            set { mClientID = value; }
        }
        public String ClientName
        {
            get { return mClientName; }
            set { mClientName = value; }
        }
        public Int32 AgentID
        {
            get { return mAgentID; }
            set { mAgentID = value; }
        }
        public String AgentName
        {
            get { return mAgentName; }
            set { mAgentName = value; }
        }
        public String QuoteOperations
        {
            get { return mQuoteOperations; }
            set { mQuoteOperations = value; }
        }
        public Decimal NumberOfPackages
        {
            get { return mNumberOfPackages; }
            set { mNumberOfPackages = value; }
        }
        public Decimal Volume
        {
            get { return mVolume; }
            set { mVolume = value; }
        }
        public Decimal VolumetricWeight
        {
            get { return mVolumetricWeight; }
            set { mVolumetricWeight = value; }
        }
        public Decimal GrossWeight
        {
            get { return mGrossWeight; }
            set { mGrossWeight = value; }
        }
        public Decimal ChargeableWeight
        {
            get { return mChargeableWeight; }
            set { mChargeableWeight = value; }
        }
        public String DenialReason
        {
            get { return mDenialReason; }
            set { mDenialReason = value; }
        }
        public Boolean IsRevised
        {
            get { return mIsRevised; }
            set { mIsRevised = value; }
        }
        public Boolean IsChargesConfirmed
        {
            get { return mIsChargesConfirmed; }
            set { mIsChargesConfirmed = value; }
        }
        public Int32 POrC
        {
            get { return mPOrC; }
            set { mPOrC = value; }
        }
        public Int32 EquipmentModelID
        {
            get { return mEquipmentModelID; }
            set { mEquipmentModelID = value; }
        }
        public String EquipmentModelCode
        {
            get { return mEquipmentModelCode; }
            set { mEquipmentModelCode = value; }
        }
        public String EquipmentModelName
        {
            get { return mEquipmentModelName; }
            set { mEquipmentModelName = value; }
        }
        public Int32 RevisorUserID
        {
            get { return mRevisorUserID; }
            set { mRevisorUserID = value; }
        }
        public String RevisorUserName
        {
            get { return mRevisorUserName; }
            set { mRevisorUserName = value; }
        }
        public String RevisorName
        {
            get { return mRevisorName; }
            set { mRevisorName = value; }
        }
        public Int32 ChargesConfirmingUserID
        {
            get { return mChargesConfirmingUserID; }
            set { mChargesConfirmingUserID = value; }
        }
        public String ChargesConfirmingUserName
        {
            get { return mChargesConfirmingUserName; }
            set { mChargesConfirmingUserName = value; }
        }
        public String ChargesConfirmingName
        {
            get { return mChargesConfirmingName; }
            set { mChargesConfirmingName = value; }
        }
        public String POrCName
        {
            get { return mPOrCName; }
            set { mPOrCName = value; }
        }
        public String POrCCode
        {
            get { return mPOrCCode; }
            set { mPOrCCode = value; }
        }
        public String ContainerTypes
        {
            get { return mContainerTypes; }
            set { mContainerTypes = value; }
        }
        public String PackageTypes
        {
            get { return mPackageTypes; }
            set { mPackageTypes = value; }
        }
        public Boolean IsWarehousing
        {
            get { return mIsWarehousing; }
            set { mIsWarehousing = value; }
        }
        public Int32 MainCriteriaID
        {
            get { return mMainCriteriaID; }
            set { mMainCriteriaID = value; }
        }
        public String MainCriteriaName
        {
            get { return mMainCriteriaName; }
            set { mMainCriteriaName = value; }
        }
        public Int32 SubCriteriaID
        {
            get { return mSubCriteriaID; }
            set { mSubCriteriaID = value; }
        }
        public String SubCriteriaName
        {
            get { return mSubCriteriaName; }
            set { mSubCriteriaName = value; }
        }
        public Boolean IsFleet
        {
            get { return mIsFleet; }
            set { mIsFleet = value; }
        }
        public Decimal Cost
        {
            get { return mCost; }
            set { mCost = value; }
        }
        public Decimal Sale
        {
            get { return mSale; }
            set { mSale = value; }
        }
        public Decimal SaleFromCharges
        {
            get { return mSaleFromCharges; }
            set { mSaleFromCharges = value; }
        }
        public Decimal CostFromCharges
        {
            get { return mCostFromCharges; }
            set { mCostFromCharges = value; }
        }
        public Int32 DivisionID
        {
            get { return mDivisionID; }
            set { mDivisionID = value; }
        }
        public String DivisionName
        {
            get { return mDivisionName; }
            set { mDivisionName = value; }
        }
        public Int32 EquipmentTypeID
        {
            get { return mEquipmentTypeID; }
            set { mEquipmentTypeID = value; }
        }
        public String EquipmentTypeName
        {
            get { return mEquipmentTypeName; }
            set { mEquipmentTypeName = value; }
        }
        public Int32 NumberOfChairs
        {
            get { return mNumberOfChairs; }
            set { mNumberOfChairs = value; }
        }
        public String FreightRateFormat
        {
            get { return mFreightRateFormat; }
            set { mFreightRateFormat = value; }
        }
        public Boolean Is48HourAlarmSent
        {
            get { return mIs48HourAlarmSent; }
            set { mIs48HourAlarmSent = value; }
        }
        public Int32 ZeroCostChargesCount
        {
            get { return mZeroCostChargesCount; }
            set { mZeroCostChargesCount = value; }
        }
        public Int32 ChargesCount
        {
            get { return mChargesCount; }
            set { mChargesCount = value; }
        }
        public Int32 SalesLeadID
        {
            get { return mSalesLeadID; }
            set { mSalesLeadID = value; }
        }
        public String SalesLeadName
        {
            get { return mSalesLeadName; }
            set { mSalesLeadName = value; }
        }
        public Boolean IsAddedToCustomer
        {
            get { return mIsAddedToCustomer; }
            set { mIsAddedToCustomer = value; }
        }
        public Int32 SalesLeadCustomerID
        {
            get { return mSalesLeadCustomerID; }
            set { mSalesLeadCustomerID = value; }
        }
        public String SalesLeadCustomerName
        {
            get { return mSalesLeadCustomerName; }
            set { mSalesLeadCustomerName = value; }
        }
        public Int32 ClearancePortID
        {
            get { return mClearancePortID; }
            set { mClearancePortID = value; }
        }
        public String ClearancePortCode
        {
            get { return mClearancePortCode; }
            set { mClearancePortCode = value; }
        }
        public String ClearancePortName
        {
            get { return mClearancePortName; }
            set { mClearancePortName = value; }
        }
        public Int32 ClientPlantID
        {
            get { return mClientPlantID; }
            set { mClientPlantID = value; }
        }
        public String ClientPlantCode
        {
            get { return mClientPlantCode; }
            set { mClientPlantCode = value; }
        }
        public String ClientPlantName
        {
            get { return mClientPlantName; }
            set { mClientPlantName = value; }
        }
        public Int32 POLID_Transport
        {
            get { return mPOLID_Transport; }
            set { mPOLID_Transport = value; }
        }
        public String POLID_TransportCode
        {
            get { return mPOLID_TransportCode; }
            set { mPOLID_TransportCode = value; }
        }
        public String POLID_TransportName
        {
            get { return mPOLID_TransportName; }
            set { mPOLID_TransportName = value; }
        }
        public Int32 PickupPlaceID
        {
            get { return mPickupPlaceID; }
            set { mPickupPlaceID = value; }
        }
        public String PickupPlaceCode
        {
            get { return mPickupPlaceCode; }
            set { mPickupPlaceCode = value; }
        }
        public String PickupPlaceName
        {
            get { return mPickupPlaceName; }
            set { mPickupPlaceName = value; }
        }
        public String ModificatorUserName
        {
            get { return mModificatorUserName; }
            set { mModificatorUserName = value; }
        }
        public String ApprovalUserName
        {
            get { return mApprovalUserName; }
            set { mApprovalUserName = value; }
        }
        #endregion

        #region Functions
        public Boolean GetIsChange()
        {
            return mIsChanges;
        }
        public void SetIsChange(Boolean IsChange)
        {
            mIsChanges = IsChange;
        }
        #endregion
    }

    public partial class CvwQuotationRoute
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwQuotationRoute> lstCVarvwQuotationRoute = new List<CVarvwQuotationRoute>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwQuotationRoute.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListvwQuotationRoute";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwQuotationRoute ObjCVarvwQuotationRoute = new CVarvwQuotationRoute();
                        ObjCVarvwQuotationRoute.ID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwQuotationRoute.mCode = Convert.ToString(dr["Code"].ToString());
                        ObjCVarvwQuotationRoute.mCodeSerial = Convert.ToInt32(dr["CodeSerial"].ToString());
                        ObjCVarvwQuotationRoute.mRoutingTypeID = Convert.ToInt32(dr["RoutingTypeID"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationID = Convert.ToInt64(dr["QuotationID"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationCode = Convert.ToString(dr["QuotationCode"].ToString());
                        ObjCVarvwQuotationRoute.mBranchID = Convert.ToInt32(dr["BranchID"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationNotes = Convert.ToString(dr["QuotationNotes"].ToString());
                        ObjCVarvwQuotationRoute.mBranchName = Convert.ToString(dr["BranchName"].ToString());
                        ObjCVarvwQuotationRoute.mDirectionType = Convert.ToInt32(dr["DirectionType"].ToString());
                        ObjCVarvwQuotationRoute.mDirectionIconName = Convert.ToString(dr["DirectionIconName"].ToString());
                        ObjCVarvwQuotationRoute.mDirectionIconStyle = Convert.ToString(dr["DirectionIconStyle"].ToString());
                        ObjCVarvwQuotationRoute.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwQuotationRoute.mTransportIconName = Convert.ToString(dr["TransportIconName"].ToString());
                        ObjCVarvwQuotationRoute.mTransportIconStyle = Convert.ToString(dr["TransportIconStyle"].ToString());
                        ObjCVarvwQuotationRoute.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwQuotationRoute.mShipmentTypeName = Convert.ToString(dr["ShipmentTypeName"].ToString());
                        ObjCVarvwQuotationRoute.mPOLCountryID = Convert.ToInt32(dr["POLCountryID"].ToString());
                        ObjCVarvwQuotationRoute.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwQuotationRoute.mPODCountryID = Convert.ToInt32(dr["PODCountryID"].ToString());
                        ObjCVarvwQuotationRoute.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwQuotationRoute.mPickupAddress = Convert.ToString(dr["PickupAddress"].ToString());
                        ObjCVarvwQuotationRoute.mDeliveryAddress = Convert.ToString(dr["DeliveryAddress"].ToString());
                        ObjCVarvwQuotationRoute.mMoveTypeID = Convert.ToInt32(dr["MoveTypeID"].ToString());
                        ObjCVarvwQuotationRoute.mMoveTypeName = Convert.ToString(dr["MoveTypeName"].ToString());
                        ObjCVarvwQuotationRoute.mETAPOLDate = Convert.ToDateTime(dr["ETAPOLDate"].ToString());
                        ObjCVarvwQuotationRoute.mExpirationDate = Convert.ToDateTime(dr["ExpirationDate"].ToString());
                        ObjCVarvwQuotationRoute.mShippingLineID = Convert.ToInt32(dr["ShippingLineID"].ToString());
                        ObjCVarvwQuotationRoute.mAirlineID = Convert.ToInt32(dr["AirlineID"].ToString());
                        ObjCVarvwQuotationRoute.mTruckerID = Convert.ToInt32(dr["TruckerID"].ToString());
                        ObjCVarvwQuotationRoute.mTransientTime = Convert.ToInt32(dr["TransientTime"].ToString());
                        ObjCVarvwQuotationRoute.mValidity = Convert.ToInt32(dr["Validity"].ToString());
                        ObjCVarvwQuotationRoute.mFreeTime = Convert.ToInt32(dr["FreeTime"].ToString());
                        ObjCVarvwQuotationRoute.mFreeTimePOD = Convert.ToInt32(dr["FreeTimePOD"].ToString());
                        ObjCVarvwQuotationRoute.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwQuotationRoute.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwQuotationRoute.mCreatorName = Convert.ToString(dr["CreatorName"].ToString());
                        ObjCVarvwQuotationRoute.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwQuotationRoute.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwQuotationRoute.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarvwQuotationRoute.mCommodityID = Convert.ToInt32(dr["CommodityID"].ToString());
                        ObjCVarvwQuotationRoute.mCommodityName = Convert.ToString(dr["CommodityName"].ToString());
                        ObjCVarvwQuotationRoute.mRoutingName = Convert.ToString(dr["RoutingName"].ToString());
                        ObjCVarvwQuotationRoute.mViewOrder = Convert.ToInt32(dr["ViewOrder"].ToString());
                        ObjCVarvwQuotationRoute.mPOLCountryCode = Convert.ToString(dr["POLCountryCode"].ToString());
                        ObjCVarvwQuotationRoute.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwQuotationRoute.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwQuotationRoute.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwQuotationRoute.mPOLAddress = Convert.ToString(dr["POLAddress"].ToString());
                        ObjCVarvwQuotationRoute.mPODCountryCode = Convert.ToString(dr["PODCountryCode"].ToString());
                        ObjCVarvwQuotationRoute.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwQuotationRoute.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwQuotationRoute.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwQuotationRoute.mPODAddress = Convert.ToString(dr["PODAddress"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationStageID = Convert.ToInt32(dr["QuotationStageID"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationStageName = Convert.ToString(dr["QuotationStageName"].ToString());
                        ObjCVarvwQuotationRoute.mLineName = Convert.ToString(dr["LineName"].ToString());
                        ObjCVarvwQuotationRoute.mShippingLineCode = Convert.ToString(dr["ShippingLineCode"].ToString());
                        ObjCVarvwQuotationRoute.mShippingLineName = Convert.ToString(dr["ShippingLineName"].ToString());
                        ObjCVarvwQuotationRoute.mAirlineCode = Convert.ToString(dr["AirlineCode"].ToString());
                        ObjCVarvwQuotationRoute.mAirlineName = Convert.ToString(dr["AirlineName"].ToString());
                        ObjCVarvwQuotationRoute.mTruckerCode = Convert.ToInt32(dr["TruckerCode"].ToString());
                        ObjCVarvwQuotationRoute.mTruckerName = Convert.ToString(dr["TruckerName"].ToString());
                        ObjCVarvwQuotationRoute.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarvwQuotationRoute.mSalesmanName = Convert.ToString(dr["SalesmanName"].ToString());
                        ObjCVarvwQuotationRoute.mIncotermID = Convert.ToInt32(dr["IncotermID"].ToString());
                        ObjCVarvwQuotationRoute.mIncotermName = Convert.ToString(dr["IncotermName"].ToString());
                        ObjCVarvwQuotationRoute.mIsExpired = Convert.ToInt32(dr["IsExpired"].ToString());
                        ObjCVarvwQuotationRoute.mIsQuotationHeaderExpired = Convert.ToInt32(dr["IsQuotationHeaderExpired"].ToString());
                        ObjCVarvwQuotationRoute.mRepDirectionTypeShown = Convert.ToString(dr["RepDirectionTypeShown"].ToString());
                        ObjCVarvwQuotationRoute.mRepTransportTypeShown = Convert.ToString(dr["RepTransportTypeShown"].ToString());
                        ObjCVarvwQuotationRoute.mClientID = Convert.ToInt32(dr["ClientID"].ToString());
                        ObjCVarvwQuotationRoute.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwQuotationRoute.mAgentID = Convert.ToInt32(dr["AgentID"].ToString());
                        ObjCVarvwQuotationRoute.mAgentName = Convert.ToString(dr["AgentName"].ToString());
                        ObjCVarvwQuotationRoute.mQuoteOperations = Convert.ToString(dr["QuoteOperations"].ToString());
                        ObjCVarvwQuotationRoute.mNumberOfPackages = Convert.ToDecimal(dr["NumberOfPackages"].ToString());
                        ObjCVarvwQuotationRoute.mVolume = Convert.ToDecimal(dr["Volume"].ToString());
                        ObjCVarvwQuotationRoute.mVolumetricWeight = Convert.ToDecimal(dr["VolumetricWeight"].ToString());
                        ObjCVarvwQuotationRoute.mGrossWeight = Convert.ToDecimal(dr["GrossWeight"].ToString());
                        ObjCVarvwQuotationRoute.mChargeableWeight = Convert.ToDecimal(dr["ChargeableWeight"].ToString());
                        ObjCVarvwQuotationRoute.mDenialReason = Convert.ToString(dr["DenialReason"].ToString());
                        ObjCVarvwQuotationRoute.mIsRevised = Convert.ToBoolean(dr["IsRevised"].ToString());
                        ObjCVarvwQuotationRoute.mIsChargesConfirmed = Convert.ToBoolean(dr["IsChargesConfirmed"].ToString());
                        ObjCVarvwQuotationRoute.mPOrC = Convert.ToInt32(dr["POrC"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentModelID = Convert.ToInt32(dr["EquipmentModelID"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentModelCode = Convert.ToString(dr["EquipmentModelCode"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentModelName = Convert.ToString(dr["EquipmentModelName"].ToString());
                        ObjCVarvwQuotationRoute.mRevisorUserID = Convert.ToInt32(dr["RevisorUserID"].ToString());
                        ObjCVarvwQuotationRoute.mRevisorUserName = Convert.ToString(dr["RevisorUserName"].ToString());
                        ObjCVarvwQuotationRoute.mRevisorName = Convert.ToString(dr["RevisorName"].ToString());
                        ObjCVarvwQuotationRoute.mChargesConfirmingUserID = Convert.ToInt32(dr["ChargesConfirmingUserID"].ToString());
                        ObjCVarvwQuotationRoute.mChargesConfirmingUserName = Convert.ToString(dr["ChargesConfirmingUserName"].ToString());
                        ObjCVarvwQuotationRoute.mChargesConfirmingName = Convert.ToString(dr["ChargesConfirmingName"].ToString());
                        ObjCVarvwQuotationRoute.mPOrCName = Convert.ToString(dr["POrCName"].ToString());
                        ObjCVarvwQuotationRoute.mPOrCCode = Convert.ToString(dr["POrCCode"].ToString());
                        ObjCVarvwQuotationRoute.mContainerTypes = Convert.ToString(dr["ContainerTypes"].ToString());
                        ObjCVarvwQuotationRoute.mPackageTypes = Convert.ToString(dr["PackageTypes"].ToString());
                        ObjCVarvwQuotationRoute.mIsWarehousing = Convert.ToBoolean(dr["IsWarehousing"].ToString());
                        ObjCVarvwQuotationRoute.mMainCriteriaID = Convert.ToInt32(dr["MainCriteriaID"].ToString());
                        ObjCVarvwQuotationRoute.mMainCriteriaName = Convert.ToString(dr["MainCriteriaName"].ToString());
                        ObjCVarvwQuotationRoute.mSubCriteriaID = Convert.ToInt32(dr["SubCriteriaID"].ToString());
                        ObjCVarvwQuotationRoute.mSubCriteriaName = Convert.ToString(dr["SubCriteriaName"].ToString());
                        ObjCVarvwQuotationRoute.mIsFleet = Convert.ToBoolean(dr["IsFleet"].ToString());
                        ObjCVarvwQuotationRoute.mCost = Convert.ToDecimal(dr["Cost"].ToString());
                        ObjCVarvwQuotationRoute.mSale = Convert.ToDecimal(dr["Sale"].ToString());
                        ObjCVarvwQuotationRoute.mSaleFromCharges = Convert.ToDecimal(dr["SaleFromCharges"].ToString());
                        ObjCVarvwQuotationRoute.mCostFromCharges = Convert.ToDecimal(dr["CostFromCharges"].ToString());
                        ObjCVarvwQuotationRoute.mDivisionID = Convert.ToInt32(dr["DivisionID"].ToString());
                        ObjCVarvwQuotationRoute.mDivisionName = Convert.ToString(dr["DivisionName"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentTypeID = Convert.ToInt32(dr["EquipmentTypeID"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentTypeName = Convert.ToString(dr["EquipmentTypeName"].ToString());
                        ObjCVarvwQuotationRoute.mNumberOfChairs = Convert.ToInt32(dr["NumberOfChairs"].ToString());
                        ObjCVarvwQuotationRoute.mFreightRateFormat = Convert.ToString(dr["FreightRateFormat"].ToString());
                        ObjCVarvwQuotationRoute.mIs48HourAlarmSent = Convert.ToBoolean(dr["Is48HourAlarmSent"].ToString());
                        ObjCVarvwQuotationRoute.mZeroCostChargesCount = Convert.ToInt32(dr["ZeroCostChargesCount"].ToString());
                        ObjCVarvwQuotationRoute.mChargesCount = Convert.ToInt32(dr["ChargesCount"].ToString());
                        ObjCVarvwQuotationRoute.mSalesLeadID = Convert.ToInt32(dr["SalesLeadID"].ToString());
                        ObjCVarvwQuotationRoute.mSalesLeadName = Convert.ToString(dr["SalesLeadName"].ToString());
                        ObjCVarvwQuotationRoute.mIsAddedToCustomer = Convert.ToBoolean(dr["IsAddedToCustomer"].ToString());
                        ObjCVarvwQuotationRoute.mSalesLeadCustomerID = Convert.ToInt32(dr["SalesLeadCustomerID"].ToString());
                        ObjCVarvwQuotationRoute.mSalesLeadCustomerName = Convert.ToString(dr["SalesLeadCustomerName"].ToString());
                        ObjCVarvwQuotationRoute.mClearancePortID = Convert.ToInt32(dr["ClearancePortID"].ToString());
                        ObjCVarvwQuotationRoute.mClearancePortCode = Convert.ToString(dr["ClearancePortCode"].ToString());
                        ObjCVarvwQuotationRoute.mClearancePortName = Convert.ToString(dr["ClearancePortName"].ToString());
                        ObjCVarvwQuotationRoute.mClientPlantID = Convert.ToInt32(dr["ClientPlantID"].ToString());
                        ObjCVarvwQuotationRoute.mClientPlantCode = Convert.ToString(dr["ClientPlantCode"].ToString());
                        ObjCVarvwQuotationRoute.mClientPlantName = Convert.ToString(dr["ClientPlantName"].ToString());
                        ObjCVarvwQuotationRoute.mPOLID_Transport = Convert.ToInt32(dr["POLID_Transport"].ToString());
                        ObjCVarvwQuotationRoute.mPOLID_TransportCode = Convert.ToString(dr["POLID_TransportCode"].ToString());
                        ObjCVarvwQuotationRoute.mPOLID_TransportName = Convert.ToString(dr["POLID_TransportName"].ToString());
                        ObjCVarvwQuotationRoute.mPickupPlaceID = Convert.ToInt32(dr["PickupPlaceID"].ToString());
                        ObjCVarvwQuotationRoute.mPickupPlaceCode = Convert.ToString(dr["PickupPlaceCode"].ToString());
                        ObjCVarvwQuotationRoute.mPickupPlaceName = Convert.ToString(dr["PickupPlaceName"].ToString());
                        ObjCVarvwQuotationRoute.mModificatorUserName = Convert.ToString(dr["ModificatorUserName"].ToString());
                        ObjCVarvwQuotationRoute.mApprovalUserName = Convert.ToString(dr["ApprovalUserName"].ToString());
                        lstCVarvwQuotationRoute.Add(ObjCVarvwQuotationRoute);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwQuotationRoute.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwQuotationRoute";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwQuotationRoute ObjCVarvwQuotationRoute = new CVarvwQuotationRoute();
                        ObjCVarvwQuotationRoute.ID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwQuotationRoute.mCode = Convert.ToString(dr["Code"].ToString());
                        ObjCVarvwQuotationRoute.mCodeSerial = Convert.ToInt32(dr["CodeSerial"].ToString());
                        ObjCVarvwQuotationRoute.mRoutingTypeID = Convert.ToInt32(dr["RoutingTypeID"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationID = Convert.ToInt64(dr["QuotationID"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationCode = Convert.ToString(dr["QuotationCode"].ToString());
                        ObjCVarvwQuotationRoute.mBranchID = Convert.ToInt32(dr["BranchID"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationNotes = Convert.ToString(dr["QuotationNotes"].ToString());
                        ObjCVarvwQuotationRoute.mBranchName = Convert.ToString(dr["BranchName"].ToString());
                        ObjCVarvwQuotationRoute.mDirectionType = Convert.ToInt32(dr["DirectionType"].ToString());
                        ObjCVarvwQuotationRoute.mDirectionIconName = Convert.ToString(dr["DirectionIconName"].ToString());
                        ObjCVarvwQuotationRoute.mDirectionIconStyle = Convert.ToString(dr["DirectionIconStyle"].ToString());
                        ObjCVarvwQuotationRoute.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwQuotationRoute.mTransportIconName = Convert.ToString(dr["TransportIconName"].ToString());
                        ObjCVarvwQuotationRoute.mTransportIconStyle = Convert.ToString(dr["TransportIconStyle"].ToString());
                        ObjCVarvwQuotationRoute.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwQuotationRoute.mShipmentTypeName = Convert.ToString(dr["ShipmentTypeName"].ToString());
                        ObjCVarvwQuotationRoute.mPOLCountryID = Convert.ToInt32(dr["POLCountryID"].ToString());
                        ObjCVarvwQuotationRoute.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwQuotationRoute.mPODCountryID = Convert.ToInt32(dr["PODCountryID"].ToString());
                        ObjCVarvwQuotationRoute.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwQuotationRoute.mPickupAddress = Convert.ToString(dr["PickupAddress"].ToString());
                        ObjCVarvwQuotationRoute.mDeliveryAddress = Convert.ToString(dr["DeliveryAddress"].ToString());
                        ObjCVarvwQuotationRoute.mMoveTypeID = Convert.ToInt32(dr["MoveTypeID"].ToString());
                        ObjCVarvwQuotationRoute.mMoveTypeName = Convert.ToString(dr["MoveTypeName"].ToString());
                        ObjCVarvwQuotationRoute.mETAPOLDate = Convert.ToDateTime(dr["ETAPOLDate"].ToString());
                        ObjCVarvwQuotationRoute.mExpirationDate = Convert.ToDateTime(dr["ExpirationDate"].ToString());
                        ObjCVarvwQuotationRoute.mShippingLineID = Convert.ToInt32(dr["ShippingLineID"].ToString());
                        ObjCVarvwQuotationRoute.mAirlineID = Convert.ToInt32(dr["AirlineID"].ToString());
                        ObjCVarvwQuotationRoute.mTruckerID = Convert.ToInt32(dr["TruckerID"].ToString());
                        ObjCVarvwQuotationRoute.mTransientTime = Convert.ToInt32(dr["TransientTime"].ToString());
                        ObjCVarvwQuotationRoute.mValidity = Convert.ToInt32(dr["Validity"].ToString());
                        ObjCVarvwQuotationRoute.mFreeTime = Convert.ToInt32(dr["FreeTime"].ToString());
                        ObjCVarvwQuotationRoute.mFreeTimePOD = Convert.ToInt32(dr["FreeTimePOD"].ToString());
                        ObjCVarvwQuotationRoute.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwQuotationRoute.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwQuotationRoute.mCreatorName = Convert.ToString(dr["CreatorName"].ToString());
                        ObjCVarvwQuotationRoute.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwQuotationRoute.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwQuotationRoute.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarvwQuotationRoute.mCommodityID = Convert.ToInt32(dr["CommodityID"].ToString());
                        ObjCVarvwQuotationRoute.mCommodityName = Convert.ToString(dr["CommodityName"].ToString());
                        ObjCVarvwQuotationRoute.mRoutingName = Convert.ToString(dr["RoutingName"].ToString());
                        ObjCVarvwQuotationRoute.mViewOrder = Convert.ToInt32(dr["ViewOrder"].ToString());
                        ObjCVarvwQuotationRoute.mPOLCountryCode = Convert.ToString(dr["POLCountryCode"].ToString());
                        ObjCVarvwQuotationRoute.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwQuotationRoute.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwQuotationRoute.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwQuotationRoute.mPOLAddress = Convert.ToString(dr["POLAddress"].ToString());
                        ObjCVarvwQuotationRoute.mPODCountryCode = Convert.ToString(dr["PODCountryCode"].ToString());
                        ObjCVarvwQuotationRoute.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwQuotationRoute.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwQuotationRoute.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwQuotationRoute.mPODAddress = Convert.ToString(dr["PODAddress"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationStageID = Convert.ToInt32(dr["QuotationStageID"].ToString());
                        ObjCVarvwQuotationRoute.mQuotationStageName = Convert.ToString(dr["QuotationStageName"].ToString());
                        ObjCVarvwQuotationRoute.mLineName = Convert.ToString(dr["LineName"].ToString());
                        ObjCVarvwQuotationRoute.mShippingLineCode = Convert.ToString(dr["ShippingLineCode"].ToString());
                        ObjCVarvwQuotationRoute.mShippingLineName = Convert.ToString(dr["ShippingLineName"].ToString());
                        ObjCVarvwQuotationRoute.mAirlineCode = Convert.ToString(dr["AirlineCode"].ToString());
                        ObjCVarvwQuotationRoute.mAirlineName = Convert.ToString(dr["AirlineName"].ToString());
                        ObjCVarvwQuotationRoute.mTruckerCode = Convert.ToInt32(dr["TruckerCode"].ToString());
                        ObjCVarvwQuotationRoute.mTruckerName = Convert.ToString(dr["TruckerName"].ToString());
                        ObjCVarvwQuotationRoute.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarvwQuotationRoute.mSalesmanName = Convert.ToString(dr["SalesmanName"].ToString());
                        ObjCVarvwQuotationRoute.mIncotermID = Convert.ToInt32(dr["IncotermID"].ToString());
                        ObjCVarvwQuotationRoute.mIncotermName = Convert.ToString(dr["IncotermName"].ToString());
                        ObjCVarvwQuotationRoute.mIsExpired = Convert.ToInt32(dr["IsExpired"].ToString());
                        ObjCVarvwQuotationRoute.mIsQuotationHeaderExpired = Convert.ToInt32(dr["IsQuotationHeaderExpired"].ToString());
                        ObjCVarvwQuotationRoute.mRepDirectionTypeShown = Convert.ToString(dr["RepDirectionTypeShown"].ToString());
                        ObjCVarvwQuotationRoute.mRepTransportTypeShown = Convert.ToString(dr["RepTransportTypeShown"].ToString());
                        ObjCVarvwQuotationRoute.mClientID = Convert.ToInt32(dr["ClientID"].ToString());
                        ObjCVarvwQuotationRoute.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwQuotationRoute.mAgentID = Convert.ToInt32(dr["AgentID"].ToString());
                        ObjCVarvwQuotationRoute.mAgentName = Convert.ToString(dr["AgentName"].ToString());
                        ObjCVarvwQuotationRoute.mQuoteOperations = Convert.ToString(dr["QuoteOperations"].ToString());
                        ObjCVarvwQuotationRoute.mNumberOfPackages = Convert.ToDecimal(dr["NumberOfPackages"].ToString());
                        ObjCVarvwQuotationRoute.mVolume = Convert.ToDecimal(dr["Volume"].ToString());
                        ObjCVarvwQuotationRoute.mVolumetricWeight = Convert.ToDecimal(dr["VolumetricWeight"].ToString());
                        ObjCVarvwQuotationRoute.mGrossWeight = Convert.ToDecimal(dr["GrossWeight"].ToString());
                        ObjCVarvwQuotationRoute.mChargeableWeight = Convert.ToDecimal(dr["ChargeableWeight"].ToString());
                        ObjCVarvwQuotationRoute.mDenialReason = Convert.ToString(dr["DenialReason"].ToString());
                        ObjCVarvwQuotationRoute.mIsRevised = Convert.ToBoolean(dr["IsRevised"].ToString());
                        ObjCVarvwQuotationRoute.mIsChargesConfirmed = Convert.ToBoolean(dr["IsChargesConfirmed"].ToString());
                        ObjCVarvwQuotationRoute.mPOrC = Convert.ToInt32(dr["POrC"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentModelID = Convert.ToInt32(dr["EquipmentModelID"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentModelCode = Convert.ToString(dr["EquipmentModelCode"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentModelName = Convert.ToString(dr["EquipmentModelName"].ToString());
                        ObjCVarvwQuotationRoute.mRevisorUserID = Convert.ToInt32(dr["RevisorUserID"].ToString());
                        ObjCVarvwQuotationRoute.mRevisorUserName = Convert.ToString(dr["RevisorUserName"].ToString());
                        ObjCVarvwQuotationRoute.mRevisorName = Convert.ToString(dr["RevisorName"].ToString());
                        ObjCVarvwQuotationRoute.mChargesConfirmingUserID = Convert.ToInt32(dr["ChargesConfirmingUserID"].ToString());
                        ObjCVarvwQuotationRoute.mChargesConfirmingUserName = Convert.ToString(dr["ChargesConfirmingUserName"].ToString());
                        ObjCVarvwQuotationRoute.mChargesConfirmingName = Convert.ToString(dr["ChargesConfirmingName"].ToString());
                        ObjCVarvwQuotationRoute.mPOrCName = Convert.ToString(dr["POrCName"].ToString());
                        ObjCVarvwQuotationRoute.mPOrCCode = Convert.ToString(dr["POrCCode"].ToString());
                        ObjCVarvwQuotationRoute.mContainerTypes = Convert.ToString(dr["ContainerTypes"].ToString());
                        ObjCVarvwQuotationRoute.mPackageTypes = Convert.ToString(dr["PackageTypes"].ToString());
                        ObjCVarvwQuotationRoute.mIsWarehousing = Convert.ToBoolean(dr["IsWarehousing"].ToString());
                        ObjCVarvwQuotationRoute.mMainCriteriaID = Convert.ToInt32(dr["MainCriteriaID"].ToString());
                        ObjCVarvwQuotationRoute.mMainCriteriaName = Convert.ToString(dr["MainCriteriaName"].ToString());
                        ObjCVarvwQuotationRoute.mSubCriteriaID = Convert.ToInt32(dr["SubCriteriaID"].ToString());
                        ObjCVarvwQuotationRoute.mSubCriteriaName = Convert.ToString(dr["SubCriteriaName"].ToString());
                        ObjCVarvwQuotationRoute.mIsFleet = Convert.ToBoolean(dr["IsFleet"].ToString());
                        ObjCVarvwQuotationRoute.mCost = Convert.ToDecimal(dr["Cost"].ToString());
                        ObjCVarvwQuotationRoute.mSale = Convert.ToDecimal(dr["Sale"].ToString());
                        ObjCVarvwQuotationRoute.mSaleFromCharges = Convert.ToDecimal(dr["SaleFromCharges"].ToString());
                        ObjCVarvwQuotationRoute.mCostFromCharges = Convert.ToDecimal(dr["CostFromCharges"].ToString());
                        ObjCVarvwQuotationRoute.mDivisionID = Convert.ToInt32(dr["DivisionID"].ToString());
                        ObjCVarvwQuotationRoute.mDivisionName = Convert.ToString(dr["DivisionName"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentTypeID = Convert.ToInt32(dr["EquipmentTypeID"].ToString());
                        ObjCVarvwQuotationRoute.mEquipmentTypeName = Convert.ToString(dr["EquipmentTypeName"].ToString());
                        ObjCVarvwQuotationRoute.mNumberOfChairs = Convert.ToInt32(dr["NumberOfChairs"].ToString());
                        ObjCVarvwQuotationRoute.mFreightRateFormat = Convert.ToString(dr["FreightRateFormat"].ToString());
                        ObjCVarvwQuotationRoute.mIs48HourAlarmSent = Convert.ToBoolean(dr["Is48HourAlarmSent"].ToString());
                        ObjCVarvwQuotationRoute.mZeroCostChargesCount = Convert.ToInt32(dr["ZeroCostChargesCount"].ToString());
                        ObjCVarvwQuotationRoute.mChargesCount = Convert.ToInt32(dr["ChargesCount"].ToString());
                        ObjCVarvwQuotationRoute.mSalesLeadID = Convert.ToInt32(dr["SalesLeadID"].ToString());
                        ObjCVarvwQuotationRoute.mSalesLeadName = Convert.ToString(dr["SalesLeadName"].ToString());
                        ObjCVarvwQuotationRoute.mIsAddedToCustomer = Convert.ToBoolean(dr["IsAddedToCustomer"].ToString());
                        ObjCVarvwQuotationRoute.mSalesLeadCustomerID = Convert.ToInt32(dr["SalesLeadCustomerID"].ToString());
                        ObjCVarvwQuotationRoute.mSalesLeadCustomerName = Convert.ToString(dr["SalesLeadCustomerName"].ToString());
                        ObjCVarvwQuotationRoute.mClearancePortID = Convert.ToInt32(dr["ClearancePortID"].ToString());
                        ObjCVarvwQuotationRoute.mClearancePortCode = Convert.ToString(dr["ClearancePortCode"].ToString());
                        ObjCVarvwQuotationRoute.mClearancePortName = Convert.ToString(dr["ClearancePortName"].ToString());
                        ObjCVarvwQuotationRoute.mClientPlantID = Convert.ToInt32(dr["ClientPlantID"].ToString());
                        ObjCVarvwQuotationRoute.mClientPlantCode = Convert.ToString(dr["ClientPlantCode"].ToString());
                        ObjCVarvwQuotationRoute.mClientPlantName = Convert.ToString(dr["ClientPlantName"].ToString());
                        ObjCVarvwQuotationRoute.mPOLID_Transport = Convert.ToInt32(dr["POLID_Transport"].ToString());
                        ObjCVarvwQuotationRoute.mPOLID_TransportCode = Convert.ToString(dr["POLID_TransportCode"].ToString());
                        ObjCVarvwQuotationRoute.mPOLID_TransportName = Convert.ToString(dr["POLID_TransportName"].ToString());
                        ObjCVarvwQuotationRoute.mPickupPlaceID = Convert.ToInt32(dr["PickupPlaceID"].ToString());
                        ObjCVarvwQuotationRoute.mPickupPlaceCode = Convert.ToString(dr["PickupPlaceCode"].ToString());
                        ObjCVarvwQuotationRoute.mPickupPlaceName = Convert.ToString(dr["PickupPlaceName"].ToString());
                        ObjCVarvwQuotationRoute.mModificatorUserName = Convert.ToString(dr["ModificatorUserName"].ToString());
                        ObjCVarvwQuotationRoute.mApprovalUserName = Convert.ToString(dr["ApprovalUserName"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwQuotationRoute.Add(ObjCVarvwQuotationRoute);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }
}
