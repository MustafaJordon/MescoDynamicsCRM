using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.Quotations.Quotations.Generated
{
    [Serializable]
    public partial class CVarvwQuotations
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal Int64 mID;
        internal String mCode;
        internal Int32 mCodeSerial;
        internal Int32 mBranchID;
        internal Int32 mSalesmanID;
        internal Int32 mDirectionType;
        internal String mDirectionIconName;
        internal String mDirectionIconStyle;
        internal Int32 mTransportType;
        internal String mTransportIconName;
        internal String mTransportIconStyle;
        internal Int32 mShipmentType;
        internal Int32 mShipperID;
        internal Int64 mShipperAddressID;
        internal Int64 mShipperContactID;
        internal Int32 mAgentID;
        internal Int64 mAgentAddressID;
        internal Int64 mAgentContactID;
        internal Int32 mConsigneeID;
        internal Int64 mConsigneeAddressID;
        internal Int64 mConsigneeContactID;
        internal Int32 mIncotermID;
        internal Int32 mSalesLeadID;
        internal Int32 mSalesLeadContactID;
        internal String mSalesLeadName;
        internal Int32 mTransientTime;
        internal Int32 mValidity;
        internal Int32 mFreeTime;
        internal DateTime mOpenDate;
        internal DateTime mCloseDate;
        internal DateTime mExpirationDate;
        internal Boolean mIncludePickup;
        internal Int32 mPickupCityID;
        internal Int32 mPickupAddressID;
        internal Int32 mShippingLineID;
        internal Int32 mPOLCountryID;
        internal Int32 mPOL;
        internal Int32 mPODCountryID;
        internal Int32 mPOD;
        internal Int32 mAirlineID;
        internal Int32 mTruckerID;
        internal Boolean mIncludeDelivery;
        internal String mDeliveryZipCode;
        internal Int32 mDeliveryCityID;
        internal Int32 mDeliveryCountryID;
        internal Decimal mGrossWeight;
        internal Decimal mVolume;
        internal Decimal mChargeableWeight;
        internal Int32 mNumberOfPackages;
        internal Boolean mIsDangerousGoods;
        internal String mDescriptionOfGoods;
        internal String mNotes;
        internal Int32 mQuotationStageID;
        internal Int32 mCreatorUserID;
        internal String mCreatorName;
        internal DateTime mCreationDate;
        internal Int32 mModificatorUserID;
        internal DateTime mModificationDate;
        internal Int32 mLockingUserID;
        internal DateTime mTimeLocked;
        internal String mBranchName;
        internal String mBranchLocalName;
        internal String mOpenedBy;
        internal String mSalesman;
        internal String mShipperName;
        internal String mConsigneeName;
        internal String mAgentName;
        internal String mAgentEmail;
        internal String mAgentContactName;
        internal String mAgentContactEmail;
        internal String mIncotermCode;
        internal String mIncotermName;
        internal String mPOLCountryCode;
        internal String mPOLCountryName;
        internal String mPOLCode;
        internal String mPOLName;
        internal String mPODCountryCode;
        internal String mPODCountryName;
        internal String mPODCode;
        internal String mPODName;
        internal String mShippingLineCode;
        internal String mShippingLineName;
        internal String mAirlineCode;
        internal String mAirlineName;
        internal Int32 mTruckerCode;
        internal String mTruckerName;
        internal String mPickupCityCode;
        internal String mPickupCityName;
        internal String mDeliveryCityCode;
        internal String mDeliveryCityName;
        internal String mCountryCode;
        internal String mDeliveryCountryName;
        internal Boolean mIsWarehousing;
        internal Int32 mMainCriteriaID;
        internal String mMainCriteriaMainName;
        internal Int32 mSubCriteriaID;
        internal String mSubCriteriaSubName;
        internal String mQuotationStageCode;
        internal String mQuotationStageName;
        internal Int32 mTemplateID;
        internal String mQuotationSubject;
        internal String mQuotationTermsAndConditions;
        internal String mTemplateName;
        internal String mTemplateSubject;
        internal String mTemplateTermsAndConditions;
        internal Int32 mTemplateID_Clearance;
        internal String mQuotationSubject_Clearance;
        internal String mQuotationTermsAndConditions_Clearance;
        internal String mTemplateName_Clearance;
        internal String mTemplateSubject_Clearance;
        internal String mTemplateTermsAndConditions_Clearance;
        internal Int32 mTemplateID_Transport;
        internal String mQuotationSubject_Transport;
        internal String mQuotationTermsAndConditions_Transport;
        internal String mTemplateName_Transport;
        internal String mTemplateSubject_Transport;
        internal String mTemplateTermsAndConditions_Transport;
        internal String mRepDirectionTypeShown;
        internal Int32 mClientID;
        internal String mClientName;
        internal String mClientEmail;
        internal String mClientContactName;
        internal String mClientContactEmail;
        internal String mRepTransportTypeShown;
        internal String mRepLineName;
        internal Boolean mIsFleet;
        internal Int32 mZeroCostChargesCount;
        internal Int32 mChargesCount;
        internal String mShipmentTypeName;
        internal String mTransportTypeName;
        #endregion

        #region "Methods"
        public Int64 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        public String Code
        {
            get { return mCode; }
            set { mCode = value; }
        }
        public Int32 CodeSerial
        {
            get { return mCodeSerial; }
            set { mCodeSerial = value; }
        }
        public Int32 BranchID
        {
            get { return mBranchID; }
            set { mBranchID = value; }
        }
        public Int32 SalesmanID
        {
            get { return mSalesmanID; }
            set { mSalesmanID = value; }
        }
        public Int32 DirectionType
        {
            get { return mDirectionType; }
            set { mDirectionType = value; }
        }
        public String DirectionIconName
        {
            get { return mDirectionIconName; }
            set { mDirectionIconName = value; }
        }
        public String DirectionIconStyle
        {
            get { return mDirectionIconStyle; }
            set { mDirectionIconStyle = value; }
        }
        public Int32 TransportType
        {
            get { return mTransportType; }
            set { mTransportType = value; }
        }
        public String TransportIconName
        {
            get { return mTransportIconName; }
            set { mTransportIconName = value; }
        }
        public String TransportIconStyle
        {
            get { return mTransportIconStyle; }
            set { mTransportIconStyle = value; }
        }
        public Int32 ShipmentType
        {
            get { return mShipmentType; }
            set { mShipmentType = value; }
        }
        public Int32 ShipperID
        {
            get { return mShipperID; }
            set { mShipperID = value; }
        }
        public Int64 ShipperAddressID
        {
            get { return mShipperAddressID; }
            set { mShipperAddressID = value; }
        }
        public Int64 ShipperContactID
        {
            get { return mShipperContactID; }
            set { mShipperContactID = value; }
        }
        public Int32 AgentID
        {
            get { return mAgentID; }
            set { mAgentID = value; }
        }
        public Int64 AgentAddressID
        {
            get { return mAgentAddressID; }
            set { mAgentAddressID = value; }
        }
        public Int64 AgentContactID
        {
            get { return mAgentContactID; }
            set { mAgentContactID = value; }
        }
        public Int32 ConsigneeID
        {
            get { return mConsigneeID; }
            set { mConsigneeID = value; }
        }
        public Int64 ConsigneeAddressID
        {
            get { return mConsigneeAddressID; }
            set { mConsigneeAddressID = value; }
        }
        public Int64 ConsigneeContactID
        {
            get { return mConsigneeContactID; }
            set { mConsigneeContactID = value; }
        }
        public Int32 IncotermID
        {
            get { return mIncotermID; }
            set { mIncotermID = value; }
        }
        public Int32 SalesLeadID
        {
            get { return mSalesLeadID; }
            set { mSalesLeadID = value; }
        }
        public Int32 SalesLeadContactID
        {
            get { return mSalesLeadContactID; }
            set { mSalesLeadContactID = value; }
        }
        public String SalesLeadName
        {
            get { return mSalesLeadName; }
            set { mSalesLeadName = value; }
        }
        public Int32 TransientTime
        {
            get { return mTransientTime; }
            set { mTransientTime = value; }
        }
        public Int32 Validity
        {
            get { return mValidity; }
            set { mValidity = value; }
        }
        public Int32 FreeTime
        {
            get { return mFreeTime; }
            set { mFreeTime = value; }
        }
        public DateTime OpenDate
        {
            get { return mOpenDate; }
            set { mOpenDate = value; }
        }
        public DateTime CloseDate
        {
            get { return mCloseDate; }
            set { mCloseDate = value; }
        }
        public DateTime ExpirationDate
        {
            get { return mExpirationDate; }
            set { mExpirationDate = value; }
        }
        public Boolean IncludePickup
        {
            get { return mIncludePickup; }
            set { mIncludePickup = value; }
        }
        public Int32 PickupCityID
        {
            get { return mPickupCityID; }
            set { mPickupCityID = value; }
        }
        public Int32 PickupAddressID
        {
            get { return mPickupAddressID; }
            set { mPickupAddressID = value; }
        }
        public Int32 ShippingLineID
        {
            get { return mShippingLineID; }
            set { mShippingLineID = value; }
        }
        public Int32 POLCountryID
        {
            get { return mPOLCountryID; }
            set { mPOLCountryID = value; }
        }
        public Int32 POL
        {
            get { return mPOL; }
            set { mPOL = value; }
        }
        public Int32 PODCountryID
        {
            get { return mPODCountryID; }
            set { mPODCountryID = value; }
        }
        public Int32 POD
        {
            get { return mPOD; }
            set { mPOD = value; }
        }
        public Int32 AirlineID
        {
            get { return mAirlineID; }
            set { mAirlineID = value; }
        }
        public Int32 TruckerID
        {
            get { return mTruckerID; }
            set { mTruckerID = value; }
        }
        public Boolean IncludeDelivery
        {
            get { return mIncludeDelivery; }
            set { mIncludeDelivery = value; }
        }
        public String DeliveryZipCode
        {
            get { return mDeliveryZipCode; }
            set { mDeliveryZipCode = value; }
        }
        public Int32 DeliveryCityID
        {
            get { return mDeliveryCityID; }
            set { mDeliveryCityID = value; }
        }
        public Int32 DeliveryCountryID
        {
            get { return mDeliveryCountryID; }
            set { mDeliveryCountryID = value; }
        }
        public Decimal GrossWeight
        {
            get { return mGrossWeight; }
            set { mGrossWeight = value; }
        }
        public Decimal Volume
        {
            get { return mVolume; }
            set { mVolume = value; }
        }
        public Decimal ChargeableWeight
        {
            get { return mChargeableWeight; }
            set { mChargeableWeight = value; }
        }
        public Int32 NumberOfPackages
        {
            get { return mNumberOfPackages; }
            set { mNumberOfPackages = value; }
        }
        public Boolean IsDangerousGoods
        {
            get { return mIsDangerousGoods; }
            set { mIsDangerousGoods = value; }
        }
        public String DescriptionOfGoods
        {
            get { return mDescriptionOfGoods; }
            set { mDescriptionOfGoods = value; }
        }
        public String Notes
        {
            get { return mNotes; }
            set { mNotes = value; }
        }
        public Int32 QuotationStageID
        {
            get { return mQuotationStageID; }
            set { mQuotationStageID = value; }
        }
        public Int32 CreatorUserID
        {
            get { return mCreatorUserID; }
            set { mCreatorUserID = value; }
        }
        public String CreatorName
        {
            get { return mCreatorName; }
            set { mCreatorName = value; }
        }
        public DateTime CreationDate
        {
            get { return mCreationDate; }
            set { mCreationDate = value; }
        }
        public Int32 ModificatorUserID
        {
            get { return mModificatorUserID; }
            set { mModificatorUserID = value; }
        }
        public DateTime ModificationDate
        {
            get { return mModificationDate; }
            set { mModificationDate = value; }
        }
        public Int32 LockingUserID
        {
            get { return mLockingUserID; }
            set { mLockingUserID = value; }
        }
        public DateTime TimeLocked
        {
            get { return mTimeLocked; }
            set { mTimeLocked = value; }
        }
        public String BranchName
        {
            get { return mBranchName; }
            set { mBranchName = value; }
        }
        public String BranchLocalName
        {
            get { return mBranchLocalName; }
            set { mBranchLocalName = value; }
        }
        public String OpenedBy
        {
            get { return mOpenedBy; }
            set { mOpenedBy = value; }
        }
        public String Salesman
        {
            get { return mSalesman; }
            set { mSalesman = value; }
        }
        public String ShipperName
        {
            get { return mShipperName; }
            set { mShipperName = value; }
        }
        public String ConsigneeName
        {
            get { return mConsigneeName; }
            set { mConsigneeName = value; }
        }
        public String AgentName
        {
            get { return mAgentName; }
            set { mAgentName = value; }
        }
        public String AgentEmail
        {
            get { return mAgentEmail; }
            set { mAgentEmail = value; }
        }
        public String AgentContactName
        {
            get { return mAgentContactName; }
            set { mAgentContactName = value; }
        }
        public String AgentContactEmail
        {
            get { return mAgentContactEmail; }
            set { mAgentContactEmail = value; }
        }
        public String IncotermCode
        {
            get { return mIncotermCode; }
            set { mIncotermCode = value; }
        }
        public String IncotermName
        {
            get { return mIncotermName; }
            set { mIncotermName = value; }
        }
        public String POLCountryCode
        {
            get { return mPOLCountryCode; }
            set { mPOLCountryCode = value; }
        }
        public String POLCountryName
        {
            get { return mPOLCountryName; }
            set { mPOLCountryName = value; }
        }
        public String POLCode
        {
            get { return mPOLCode; }
            set { mPOLCode = value; }
        }
        public String POLName
        {
            get { return mPOLName; }
            set { mPOLName = value; }
        }
        public String PODCountryCode
        {
            get { return mPODCountryCode; }
            set { mPODCountryCode = value; }
        }
        public String PODCountryName
        {
            get { return mPODCountryName; }
            set { mPODCountryName = value; }
        }
        public String PODCode
        {
            get { return mPODCode; }
            set { mPODCode = value; }
        }
        public String PODName
        {
            get { return mPODName; }
            set { mPODName = value; }
        }
        public String ShippingLineCode
        {
            get { return mShippingLineCode; }
            set { mShippingLineCode = value; }
        }
        public String ShippingLineName
        {
            get { return mShippingLineName; }
            set { mShippingLineName = value; }
        }
        public String AirlineCode
        {
            get { return mAirlineCode; }
            set { mAirlineCode = value; }
        }
        public String AirlineName
        {
            get { return mAirlineName; }
            set { mAirlineName = value; }
        }
        public Int32 TruckerCode
        {
            get { return mTruckerCode; }
            set { mTruckerCode = value; }
        }
        public String TruckerName
        {
            get { return mTruckerName; }
            set { mTruckerName = value; }
        }
        public String PickupCityCode
        {
            get { return mPickupCityCode; }
            set { mPickupCityCode = value; }
        }
        public String PickupCityName
        {
            get { return mPickupCityName; }
            set { mPickupCityName = value; }
        }
        public String DeliveryCityCode
        {
            get { return mDeliveryCityCode; }
            set { mDeliveryCityCode = value; }
        }
        public String DeliveryCityName
        {
            get { return mDeliveryCityName; }
            set { mDeliveryCityName = value; }
        }
        public String CountryCode
        {
            get { return mCountryCode; }
            set { mCountryCode = value; }
        }
        public String DeliveryCountryName
        {
            get { return mDeliveryCountryName; }
            set { mDeliveryCountryName = value; }
        }
        public Boolean IsWarehousing
        {
            get { return mIsWarehousing; }
            set { mIsWarehousing = value; }
        }
        public Int32 MainCriteriaID
        {
            get { return mMainCriteriaID; }
            set { mMainCriteriaID = value; }
        }
        public String MainCriteriaMainName
        {
            get { return mMainCriteriaMainName; }
            set { mMainCriteriaMainName = value; }
        }
        public Int32 SubCriteriaID
        {
            get { return mSubCriteriaID; }
            set { mSubCriteriaID = value; }
        }
        public String SubCriteriaSubName
        {
            get { return mSubCriteriaSubName; }
            set { mSubCriteriaSubName = value; }
        }
        public String QuotationStageCode
        {
            get { return mQuotationStageCode; }
            set { mQuotationStageCode = value; }
        }
        public String QuotationStageName
        {
            get { return mQuotationStageName; }
            set { mQuotationStageName = value; }
        }
        public Int32 TemplateID
        {
            get { return mTemplateID; }
            set { mTemplateID = value; }
        }
        public String QuotationSubject
        {
            get { return mQuotationSubject; }
            set { mQuotationSubject = value; }
        }
        public String QuotationTermsAndConditions
        {
            get { return mQuotationTermsAndConditions; }
            set { mQuotationTermsAndConditions = value; }
        }
        public String TemplateName
        {
            get { return mTemplateName; }
            set { mTemplateName = value; }
        }
        public String TemplateSubject
        {
            get { return mTemplateSubject; }
            set { mTemplateSubject = value; }
        }
        public String TemplateTermsAndConditions
        {
            get { return mTemplateTermsAndConditions; }
            set { mTemplateTermsAndConditions = value; }
        }
        public Int32 TemplateID_Clearance
        {
            get { return mTemplateID_Clearance; }
            set { mTemplateID_Clearance = value; }
        }
        public String QuotationSubject_Clearance
        {
            get { return mQuotationSubject_Clearance; }
            set { mQuotationSubject_Clearance = value; }
        }
        public String QuotationTermsAndConditions_Clearance
        {
            get { return mQuotationTermsAndConditions_Clearance; }
            set { mQuotationTermsAndConditions_Clearance = value; }
        }
        public String TemplateName_Clearance
        {
            get { return mTemplateName_Clearance; }
            set { mTemplateName_Clearance = value; }
        }
        public String TemplateSubject_Clearance
        {
            get { return mTemplateSubject_Clearance; }
            set { mTemplateSubject_Clearance = value; }
        }
        public String TemplateTermsAndConditions_Clearance
        {
            get { return mTemplateTermsAndConditions_Clearance; }
            set { mTemplateTermsAndConditions_Clearance = value; }
        }
        public Int32 TemplateID_Transport
        {
            get { return mTemplateID_Transport; }
            set { mTemplateID_Transport = value; }
        }
        public String QuotationSubject_Transport
        {
            get { return mQuotationSubject_Transport; }
            set { mQuotationSubject_Transport = value; }
        }
        public String QuotationTermsAndConditions_Transport
        {
            get { return mQuotationTermsAndConditions_Transport; }
            set { mQuotationTermsAndConditions_Transport = value; }
        }
        public String TemplateName_Transport
        {
            get { return mTemplateName_Transport; }
            set { mTemplateName_Transport = value; }
        }
        public String TemplateSubject_Transport
        {
            get { return mTemplateSubject_Transport; }
            set { mTemplateSubject_Transport = value; }
        }
        public String TemplateTermsAndConditions_Transport
        {
            get { return mTemplateTermsAndConditions_Transport; }
            set { mTemplateTermsAndConditions_Transport = value; }
        }
        public String RepDirectionTypeShown
        {
            get { return mRepDirectionTypeShown; }
            set { mRepDirectionTypeShown = value; }
        }
        public Int32 ClientID
        {
            get { return mClientID; }
            set { mClientID = value; }
        }
        public String ClientName
        {
            get { return mClientName; }
            set { mClientName = value; }
        }
        public String ClientEmail
        {
            get { return mClientEmail; }
            set { mClientEmail = value; }
        }
        public String ClientContactName
        {
            get { return mClientContactName; }
            set { mClientContactName = value; }
        }
        public String ClientContactEmail
        {
            get { return mClientContactEmail; }
            set { mClientContactEmail = value; }
        }
        public String RepTransportTypeShown
        {
            get { return mRepTransportTypeShown; }
            set { mRepTransportTypeShown = value; }
        }
        public String RepLineName
        {
            get { return mRepLineName; }
            set { mRepLineName = value; }
        }
        public Boolean IsFleet
        {
            get { return mIsFleet; }
            set { mIsFleet = value; }
        }
        public Int32 ZeroCostChargesCount
        {
            get { return mZeroCostChargesCount; }
            set { mZeroCostChargesCount = value; }
        }
        public Int32 ChargesCount
        {
            get { return mChargesCount; }
            set { mChargesCount = value; }
        }
        public String ShipmentTypeName
        {
            get { return mShipmentTypeName; }
            set { mShipmentTypeName = value; }
        }
        public String TransportTypeName
        {
            get { return mTransportTypeName; }
            set { mTransportTypeName = value; }
        }
        #endregion
    }

    public partial class CvwQuotations
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwQuotations> lstCVarvwQuotations = new List<CVarvwQuotations>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwQuotations.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListvwQuotations";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwQuotations ObjCVarvwQuotations = new CVarvwQuotations();
                        ObjCVarvwQuotations.mID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwQuotations.mCode = Convert.ToString(dr["Code"].ToString());
                        ObjCVarvwQuotations.mCodeSerial = Convert.ToInt32(dr["CodeSerial"].ToString());
                        ObjCVarvwQuotations.mBranchID = Convert.ToInt32(dr["BranchID"].ToString());
                        ObjCVarvwQuotations.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarvwQuotations.mDirectionType = Convert.ToInt32(dr["DirectionType"].ToString());
                        ObjCVarvwQuotations.mDirectionIconName = Convert.ToString(dr["DirectionIconName"].ToString());
                        ObjCVarvwQuotations.mDirectionIconStyle = Convert.ToString(dr["DirectionIconStyle"].ToString());
                        ObjCVarvwQuotations.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwQuotations.mTransportIconName = Convert.ToString(dr["TransportIconName"].ToString());
                        ObjCVarvwQuotations.mTransportIconStyle = Convert.ToString(dr["TransportIconStyle"].ToString());
                        ObjCVarvwQuotations.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwQuotations.mShipperID = Convert.ToInt32(dr["ShipperID"].ToString());
                        ObjCVarvwQuotations.mShipperAddressID = Convert.ToInt64(dr["ShipperAddressID"].ToString());
                        ObjCVarvwQuotations.mShipperContactID = Convert.ToInt64(dr["ShipperContactID"].ToString());
                        ObjCVarvwQuotations.mAgentID = Convert.ToInt32(dr["AgentID"].ToString());
                        ObjCVarvwQuotations.mAgentAddressID = Convert.ToInt64(dr["AgentAddressID"].ToString());
                        ObjCVarvwQuotations.mAgentContactID = Convert.ToInt64(dr["AgentContactID"].ToString());
                        ObjCVarvwQuotations.mConsigneeID = Convert.ToInt32(dr["ConsigneeID"].ToString());
                        ObjCVarvwQuotations.mConsigneeAddressID = Convert.ToInt64(dr["ConsigneeAddressID"].ToString());
                        ObjCVarvwQuotations.mConsigneeContactID = Convert.ToInt64(dr["ConsigneeContactID"].ToString());
                        ObjCVarvwQuotations.mIncotermID = Convert.ToInt32(dr["IncotermID"].ToString());
                        ObjCVarvwQuotations.mSalesLeadID = Convert.ToInt32(dr["SalesLeadID"].ToString());
                        ObjCVarvwQuotations.mSalesLeadContactID = Convert.ToInt32(dr["SalesLeadContactID"].ToString());
                        ObjCVarvwQuotations.mSalesLeadName = Convert.ToString(dr["SalesLeadName"].ToString());
                        ObjCVarvwQuotations.mTransientTime = Convert.ToInt32(dr["TransientTime"].ToString());
                        ObjCVarvwQuotations.mValidity = Convert.ToInt32(dr["Validity"].ToString());
                        ObjCVarvwQuotations.mFreeTime = Convert.ToInt32(dr["FreeTime"].ToString());
                        ObjCVarvwQuotations.mOpenDate = Convert.ToDateTime(dr["OpenDate"].ToString());
                        ObjCVarvwQuotations.mCloseDate = Convert.ToDateTime(dr["CloseDate"].ToString());
                        ObjCVarvwQuotations.mExpirationDate = Convert.ToDateTime(dr["ExpirationDate"].ToString());
                        ObjCVarvwQuotations.mIncludePickup = Convert.ToBoolean(dr["IncludePickup"].ToString());
                        ObjCVarvwQuotations.mPickupCityID = Convert.ToInt32(dr["PickupCityID"].ToString());
                        ObjCVarvwQuotations.mPickupAddressID = Convert.ToInt32(dr["PickupAddressID"].ToString());
                        ObjCVarvwQuotations.mShippingLineID = Convert.ToInt32(dr["ShippingLineID"].ToString());
                        ObjCVarvwQuotations.mPOLCountryID = Convert.ToInt32(dr["POLCountryID"].ToString());
                        ObjCVarvwQuotations.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwQuotations.mPODCountryID = Convert.ToInt32(dr["PODCountryID"].ToString());
                        ObjCVarvwQuotations.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwQuotations.mAirlineID = Convert.ToInt32(dr["AirlineID"].ToString());
                        ObjCVarvwQuotations.mTruckerID = Convert.ToInt32(dr["TruckerID"].ToString());
                        ObjCVarvwQuotations.mIncludeDelivery = Convert.ToBoolean(dr["IncludeDelivery"].ToString());
                        ObjCVarvwQuotations.mDeliveryZipCode = Convert.ToString(dr["DeliveryZipCode"].ToString());
                        ObjCVarvwQuotations.mDeliveryCityID = Convert.ToInt32(dr["DeliveryCityID"].ToString());
                        ObjCVarvwQuotations.mDeliveryCountryID = Convert.ToInt32(dr["DeliveryCountryID"].ToString());
                        ObjCVarvwQuotations.mGrossWeight = Convert.ToDecimal(dr["GrossWeight"].ToString());
                        ObjCVarvwQuotations.mVolume = Convert.ToDecimal(dr["Volume"].ToString());
                        ObjCVarvwQuotations.mChargeableWeight = Convert.ToDecimal(dr["ChargeableWeight"].ToString());
                        ObjCVarvwQuotations.mNumberOfPackages = Convert.ToInt32(dr["NumberOfPackages"].ToString());
                        ObjCVarvwQuotations.mIsDangerousGoods = Convert.ToBoolean(dr["IsDangerousGoods"].ToString());
                        ObjCVarvwQuotations.mDescriptionOfGoods = Convert.ToString(dr["DescriptionOfGoods"].ToString());
                        ObjCVarvwQuotations.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwQuotations.mQuotationStageID = Convert.ToInt32(dr["QuotationStageID"].ToString());
                        ObjCVarvwQuotations.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwQuotations.mCreatorName = Convert.ToString(dr["CreatorName"].ToString());
                        ObjCVarvwQuotations.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwQuotations.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwQuotations.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarvwQuotations.mLockingUserID = Convert.ToInt32(dr["LockingUserID"].ToString());
                        ObjCVarvwQuotations.mTimeLocked = Convert.ToDateTime(dr["TimeLocked"].ToString());
                        ObjCVarvwQuotations.mBranchName = Convert.ToString(dr["BranchName"].ToString());
                        ObjCVarvwQuotations.mBranchLocalName = Convert.ToString(dr["BranchLocalName"].ToString());
                        ObjCVarvwQuotations.mOpenedBy = Convert.ToString(dr["OpenedBy"].ToString());
                        ObjCVarvwQuotations.mSalesman = Convert.ToString(dr["Salesman"].ToString());
                        ObjCVarvwQuotations.mShipperName = Convert.ToString(dr["ShipperName"].ToString());
                        ObjCVarvwQuotations.mConsigneeName = Convert.ToString(dr["ConsigneeName"].ToString());
                        ObjCVarvwQuotations.mAgentName = Convert.ToString(dr["AgentName"].ToString());
                        ObjCVarvwQuotations.mAgentEmail = Convert.ToString(dr["AgentEmail"].ToString());
                        ObjCVarvwQuotations.mAgentContactName = Convert.ToString(dr["AgentContactName"].ToString());
                        ObjCVarvwQuotations.mAgentContactEmail = Convert.ToString(dr["AgentContactEmail"].ToString());
                        ObjCVarvwQuotations.mIncotermCode = Convert.ToString(dr["IncotermCode"].ToString());
                        ObjCVarvwQuotations.mIncotermName = Convert.ToString(dr["IncotermName"].ToString());
                        ObjCVarvwQuotations.mPOLCountryCode = Convert.ToString(dr["POLCountryCode"].ToString());
                        ObjCVarvwQuotations.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwQuotations.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwQuotations.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwQuotations.mPODCountryCode = Convert.ToString(dr["PODCountryCode"].ToString());
                        ObjCVarvwQuotations.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwQuotations.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwQuotations.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwQuotations.mShippingLineCode = Convert.ToString(dr["ShippingLineCode"].ToString());
                        ObjCVarvwQuotations.mShippingLineName = Convert.ToString(dr["ShippingLineName"].ToString());
                        ObjCVarvwQuotations.mAirlineCode = Convert.ToString(dr["AirlineCode"].ToString());
                        ObjCVarvwQuotations.mAirlineName = Convert.ToString(dr["AirlineName"].ToString());
                        ObjCVarvwQuotations.mTruckerCode = Convert.ToInt32(dr["TruckerCode"].ToString());
                        ObjCVarvwQuotations.mTruckerName = Convert.ToString(dr["TruckerName"].ToString());
                        ObjCVarvwQuotations.mPickupCityCode = Convert.ToString(dr["PickupCityCode"].ToString());
                        ObjCVarvwQuotations.mPickupCityName = Convert.ToString(dr["PickupCityName"].ToString());
                        ObjCVarvwQuotations.mDeliveryCityCode = Convert.ToString(dr["DeliveryCityCode"].ToString());
                        ObjCVarvwQuotations.mDeliveryCityName = Convert.ToString(dr["DeliveryCityName"].ToString());
                        ObjCVarvwQuotations.mCountryCode = Convert.ToString(dr["CountryCode"].ToString());
                        ObjCVarvwQuotations.mDeliveryCountryName = Convert.ToString(dr["DeliveryCountryName"].ToString());
                        ObjCVarvwQuotations.mIsWarehousing = Convert.ToBoolean(dr["IsWarehousing"].ToString());
                        ObjCVarvwQuotations.mMainCriteriaID = Convert.ToInt32(dr["MainCriteriaID"].ToString());
                        ObjCVarvwQuotations.mMainCriteriaMainName = Convert.ToString(dr["MainCriteriaMainName"].ToString());
                        ObjCVarvwQuotations.mSubCriteriaID = Convert.ToInt32(dr["SubCriteriaID"].ToString());
                        ObjCVarvwQuotations.mSubCriteriaSubName = Convert.ToString(dr["SubCriteriaSubName"].ToString());
                        ObjCVarvwQuotations.mQuotationStageCode = Convert.ToString(dr["QuotationStageCode"].ToString());
                        ObjCVarvwQuotations.mQuotationStageName = Convert.ToString(dr["QuotationStageName"].ToString());
                        ObjCVarvwQuotations.mTemplateID = Convert.ToInt32(dr["TemplateID"].ToString());
                        ObjCVarvwQuotations.mQuotationSubject = Convert.ToString(dr["QuotationSubject"].ToString());
                        ObjCVarvwQuotations.mQuotationTermsAndConditions = Convert.ToString(dr["QuotationTermsAndConditions"].ToString());
                        ObjCVarvwQuotations.mTemplateName = Convert.ToString(dr["TemplateName"].ToString());
                        ObjCVarvwQuotations.mTemplateSubject = Convert.ToString(dr["TemplateSubject"].ToString());
                        ObjCVarvwQuotations.mTemplateTermsAndConditions = Convert.ToString(dr["TemplateTermsAndConditions"].ToString());
                        ObjCVarvwQuotations.mTemplateID_Clearance = Convert.ToInt32(dr["TemplateID_Clearance"].ToString());
                        ObjCVarvwQuotations.mQuotationSubject_Clearance = Convert.ToString(dr["QuotationSubject_Clearance"].ToString());
                        ObjCVarvwQuotations.mQuotationTermsAndConditions_Clearance = Convert.ToString(dr["QuotationTermsAndConditions_Clearance"].ToString());
                        ObjCVarvwQuotations.mTemplateName_Clearance = Convert.ToString(dr["TemplateName_Clearance"].ToString());
                        ObjCVarvwQuotations.mTemplateSubject_Clearance = Convert.ToString(dr["TemplateSubject_Clearance"].ToString());
                        ObjCVarvwQuotations.mTemplateTermsAndConditions_Clearance = Convert.ToString(dr["TemplateTermsAndConditions_Clearance"].ToString());
                        ObjCVarvwQuotations.mTemplateID_Transport = Convert.ToInt32(dr["TemplateID_Transport"].ToString());
                        ObjCVarvwQuotations.mQuotationSubject_Transport = Convert.ToString(dr["QuotationSubject_Transport"].ToString());
                        ObjCVarvwQuotations.mQuotationTermsAndConditions_Transport = Convert.ToString(dr["QuotationTermsAndConditions_Transport"].ToString());
                        ObjCVarvwQuotations.mTemplateName_Transport = Convert.ToString(dr["TemplateName_Transport"].ToString());
                        ObjCVarvwQuotations.mTemplateSubject_Transport = Convert.ToString(dr["TemplateSubject_Transport"].ToString());
                        ObjCVarvwQuotations.mTemplateTermsAndConditions_Transport = Convert.ToString(dr["TemplateTermsAndConditions_Transport"].ToString());
                        ObjCVarvwQuotations.mRepDirectionTypeShown = Convert.ToString(dr["RepDirectionTypeShown"].ToString());
                        ObjCVarvwQuotations.mClientID = Convert.ToInt32(dr["ClientID"].ToString());
                        ObjCVarvwQuotations.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwQuotations.mClientEmail = Convert.ToString(dr["ClientEmail"].ToString());
                        ObjCVarvwQuotations.mClientContactName = Convert.ToString(dr["ClientContactName"].ToString());
                        ObjCVarvwQuotations.mClientContactEmail = Convert.ToString(dr["ClientContactEmail"].ToString());
                        ObjCVarvwQuotations.mRepTransportTypeShown = Convert.ToString(dr["RepTransportTypeShown"].ToString());
                        ObjCVarvwQuotations.mRepLineName = Convert.ToString(dr["RepLineName"].ToString());
                        ObjCVarvwQuotations.mIsFleet = Convert.ToBoolean(dr["IsFleet"].ToString());
                        ObjCVarvwQuotations.mZeroCostChargesCount = Convert.ToInt32(dr["ZeroCostChargesCount"].ToString());
                        ObjCVarvwQuotations.mChargesCount = Convert.ToInt32(dr["ChargesCount"].ToString());
                        ObjCVarvwQuotations.mShipmentTypeName = Convert.ToString(dr["ShipmentTypeName"].ToString());
                        ObjCVarvwQuotations.mTransportTypeName = Convert.ToString(dr["TransportTypeName"].ToString());
                        lstCVarvwQuotations.Add(ObjCVarvwQuotations);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwQuotations.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwQuotations";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwQuotations ObjCVarvwQuotations = new CVarvwQuotations();
                        ObjCVarvwQuotations.mID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwQuotations.mCode = Convert.ToString(dr["Code"].ToString());
                        ObjCVarvwQuotations.mCodeSerial = Convert.ToInt32(dr["CodeSerial"].ToString());
                        ObjCVarvwQuotations.mBranchID = Convert.ToInt32(dr["BranchID"].ToString());
                        ObjCVarvwQuotations.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarvwQuotations.mDirectionType = Convert.ToInt32(dr["DirectionType"].ToString());
                        ObjCVarvwQuotations.mDirectionIconName = Convert.ToString(dr["DirectionIconName"].ToString());
                        ObjCVarvwQuotations.mDirectionIconStyle = Convert.ToString(dr["DirectionIconStyle"].ToString());
                        ObjCVarvwQuotations.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwQuotations.mTransportIconName = Convert.ToString(dr["TransportIconName"].ToString());
                        ObjCVarvwQuotations.mTransportIconStyle = Convert.ToString(dr["TransportIconStyle"].ToString());
                        ObjCVarvwQuotations.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwQuotations.mShipperID = Convert.ToInt32(dr["ShipperID"].ToString());
                        ObjCVarvwQuotations.mShipperAddressID = Convert.ToInt64(dr["ShipperAddressID"].ToString());
                        ObjCVarvwQuotations.mShipperContactID = Convert.ToInt64(dr["ShipperContactID"].ToString());
                        ObjCVarvwQuotations.mAgentID = Convert.ToInt32(dr["AgentID"].ToString());
                        ObjCVarvwQuotations.mAgentAddressID = Convert.ToInt64(dr["AgentAddressID"].ToString());
                        ObjCVarvwQuotations.mAgentContactID = Convert.ToInt64(dr["AgentContactID"].ToString());
                        ObjCVarvwQuotations.mConsigneeID = Convert.ToInt32(dr["ConsigneeID"].ToString());
                        ObjCVarvwQuotations.mConsigneeAddressID = Convert.ToInt64(dr["ConsigneeAddressID"].ToString());
                        ObjCVarvwQuotations.mConsigneeContactID = Convert.ToInt64(dr["ConsigneeContactID"].ToString());
                        ObjCVarvwQuotations.mIncotermID = Convert.ToInt32(dr["IncotermID"].ToString());
                        ObjCVarvwQuotations.mSalesLeadID = Convert.ToInt32(dr["SalesLeadID"].ToString());
                        ObjCVarvwQuotations.mSalesLeadContactID = Convert.ToInt32(dr["SalesLeadContactID"].ToString());
                        ObjCVarvwQuotations.mSalesLeadName = Convert.ToString(dr["SalesLeadName"].ToString());
                        ObjCVarvwQuotations.mTransientTime = Convert.ToInt32(dr["TransientTime"].ToString());
                        ObjCVarvwQuotations.mValidity = Convert.ToInt32(dr["Validity"].ToString());
                        ObjCVarvwQuotations.mFreeTime = Convert.ToInt32(dr["FreeTime"].ToString());
                        ObjCVarvwQuotations.mOpenDate = Convert.ToDateTime(dr["OpenDate"].ToString());
                        ObjCVarvwQuotations.mCloseDate = Convert.ToDateTime(dr["CloseDate"].ToString());
                        ObjCVarvwQuotations.mExpirationDate = Convert.ToDateTime(dr["ExpirationDate"].ToString());
                        ObjCVarvwQuotations.mIncludePickup = Convert.ToBoolean(dr["IncludePickup"].ToString());
                        ObjCVarvwQuotations.mPickupCityID = Convert.ToInt32(dr["PickupCityID"].ToString());
                        ObjCVarvwQuotations.mPickupAddressID = Convert.ToInt32(dr["PickupAddressID"].ToString());
                        ObjCVarvwQuotations.mShippingLineID = Convert.ToInt32(dr["ShippingLineID"].ToString());
                        ObjCVarvwQuotations.mPOLCountryID = Convert.ToInt32(dr["POLCountryID"].ToString());
                        ObjCVarvwQuotations.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwQuotations.mPODCountryID = Convert.ToInt32(dr["PODCountryID"].ToString());
                        ObjCVarvwQuotations.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwQuotations.mAirlineID = Convert.ToInt32(dr["AirlineID"].ToString());
                        ObjCVarvwQuotations.mTruckerID = Convert.ToInt32(dr["TruckerID"].ToString());
                        ObjCVarvwQuotations.mIncludeDelivery = Convert.ToBoolean(dr["IncludeDelivery"].ToString());
                        ObjCVarvwQuotations.mDeliveryZipCode = Convert.ToString(dr["DeliveryZipCode"].ToString());
                        ObjCVarvwQuotations.mDeliveryCityID = Convert.ToInt32(dr["DeliveryCityID"].ToString());
                        ObjCVarvwQuotations.mDeliveryCountryID = Convert.ToInt32(dr["DeliveryCountryID"].ToString());
                        ObjCVarvwQuotations.mGrossWeight = Convert.ToDecimal(dr["GrossWeight"].ToString());
                        ObjCVarvwQuotations.mVolume = Convert.ToDecimal(dr["Volume"].ToString());
                        ObjCVarvwQuotations.mChargeableWeight = Convert.ToDecimal(dr["ChargeableWeight"].ToString());
                        ObjCVarvwQuotations.mNumberOfPackages = Convert.ToInt32(dr["NumberOfPackages"].ToString());
                        ObjCVarvwQuotations.mIsDangerousGoods = Convert.ToBoolean(dr["IsDangerousGoods"].ToString());
                        ObjCVarvwQuotations.mDescriptionOfGoods = Convert.ToString(dr["DescriptionOfGoods"].ToString());
                        ObjCVarvwQuotations.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwQuotations.mQuotationStageID = Convert.ToInt32(dr["QuotationStageID"].ToString());
                        ObjCVarvwQuotations.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwQuotations.mCreatorName = Convert.ToString(dr["CreatorName"].ToString());
                        ObjCVarvwQuotations.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwQuotations.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwQuotations.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarvwQuotations.mLockingUserID = Convert.ToInt32(dr["LockingUserID"].ToString());
                        ObjCVarvwQuotations.mTimeLocked = Convert.ToDateTime(dr["TimeLocked"].ToString());
                        ObjCVarvwQuotations.mBranchName = Convert.ToString(dr["BranchName"].ToString());
                        ObjCVarvwQuotations.mBranchLocalName = Convert.ToString(dr["BranchLocalName"].ToString());
                        ObjCVarvwQuotations.mOpenedBy = Convert.ToString(dr["OpenedBy"].ToString());
                        ObjCVarvwQuotations.mSalesman = Convert.ToString(dr["Salesman"].ToString());
                        ObjCVarvwQuotations.mShipperName = Convert.ToString(dr["ShipperName"].ToString());
                        ObjCVarvwQuotations.mConsigneeName = Convert.ToString(dr["ConsigneeName"].ToString());
                        ObjCVarvwQuotations.mAgentName = Convert.ToString(dr["AgentName"].ToString());
                        ObjCVarvwQuotations.mAgentEmail = Convert.ToString(dr["AgentEmail"].ToString());
                        ObjCVarvwQuotations.mAgentContactName = Convert.ToString(dr["AgentContactName"].ToString());
                        ObjCVarvwQuotations.mAgentContactEmail = Convert.ToString(dr["AgentContactEmail"].ToString());
                        ObjCVarvwQuotations.mIncotermCode = Convert.ToString(dr["IncotermCode"].ToString());
                        ObjCVarvwQuotations.mIncotermName = Convert.ToString(dr["IncotermName"].ToString());
                        ObjCVarvwQuotations.mPOLCountryCode = Convert.ToString(dr["POLCountryCode"].ToString());
                        ObjCVarvwQuotations.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwQuotations.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwQuotations.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwQuotations.mPODCountryCode = Convert.ToString(dr["PODCountryCode"].ToString());
                        ObjCVarvwQuotations.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwQuotations.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwQuotations.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwQuotations.mShippingLineCode = Convert.ToString(dr["ShippingLineCode"].ToString());
                        ObjCVarvwQuotations.mShippingLineName = Convert.ToString(dr["ShippingLineName"].ToString());
                        ObjCVarvwQuotations.mAirlineCode = Convert.ToString(dr["AirlineCode"].ToString());
                        ObjCVarvwQuotations.mAirlineName = Convert.ToString(dr["AirlineName"].ToString());
                        ObjCVarvwQuotations.mTruckerCode = Convert.ToInt32(dr["TruckerCode"].ToString());
                        ObjCVarvwQuotations.mTruckerName = Convert.ToString(dr["TruckerName"].ToString());
                        ObjCVarvwQuotations.mPickupCityCode = Convert.ToString(dr["PickupCityCode"].ToString());
                        ObjCVarvwQuotations.mPickupCityName = Convert.ToString(dr["PickupCityName"].ToString());
                        ObjCVarvwQuotations.mDeliveryCityCode = Convert.ToString(dr["DeliveryCityCode"].ToString());
                        ObjCVarvwQuotations.mDeliveryCityName = Convert.ToString(dr["DeliveryCityName"].ToString());
                        ObjCVarvwQuotations.mCountryCode = Convert.ToString(dr["CountryCode"].ToString());
                        ObjCVarvwQuotations.mDeliveryCountryName = Convert.ToString(dr["DeliveryCountryName"].ToString());
                        ObjCVarvwQuotations.mIsWarehousing = Convert.ToBoolean(dr["IsWarehousing"].ToString());
                        ObjCVarvwQuotations.mMainCriteriaID = Convert.ToInt32(dr["MainCriteriaID"].ToString());
                        ObjCVarvwQuotations.mMainCriteriaMainName = Convert.ToString(dr["MainCriteriaMainName"].ToString());
                        ObjCVarvwQuotations.mSubCriteriaID = Convert.ToInt32(dr["SubCriteriaID"].ToString());
                        ObjCVarvwQuotations.mSubCriteriaSubName = Convert.ToString(dr["SubCriteriaSubName"].ToString());
                        ObjCVarvwQuotations.mQuotationStageCode = Convert.ToString(dr["QuotationStageCode"].ToString());
                        ObjCVarvwQuotations.mQuotationStageName = Convert.ToString(dr["QuotationStageName"].ToString());
                        ObjCVarvwQuotations.mTemplateID = Convert.ToInt32(dr["TemplateID"].ToString());
                        ObjCVarvwQuotations.mQuotationSubject = Convert.ToString(dr["QuotationSubject"].ToString());
                        ObjCVarvwQuotations.mQuotationTermsAndConditions = Convert.ToString(dr["QuotationTermsAndConditions"].ToString());
                        ObjCVarvwQuotations.mTemplateName = Convert.ToString(dr["TemplateName"].ToString());
                        ObjCVarvwQuotations.mTemplateSubject = Convert.ToString(dr["TemplateSubject"].ToString());
                        ObjCVarvwQuotations.mTemplateTermsAndConditions = Convert.ToString(dr["TemplateTermsAndConditions"].ToString());
                        ObjCVarvwQuotations.mTemplateID_Clearance = Convert.ToInt32(dr["TemplateID_Clearance"].ToString());
                        ObjCVarvwQuotations.mQuotationSubject_Clearance = Convert.ToString(dr["QuotationSubject_Clearance"].ToString());
                        ObjCVarvwQuotations.mQuotationTermsAndConditions_Clearance = Convert.ToString(dr["QuotationTermsAndConditions_Clearance"].ToString());
                        ObjCVarvwQuotations.mTemplateName_Clearance = Convert.ToString(dr["TemplateName_Clearance"].ToString());
                        ObjCVarvwQuotations.mTemplateSubject_Clearance = Convert.ToString(dr["TemplateSubject_Clearance"].ToString());
                        ObjCVarvwQuotations.mTemplateTermsAndConditions_Clearance = Convert.ToString(dr["TemplateTermsAndConditions_Clearance"].ToString());
                        ObjCVarvwQuotations.mTemplateID_Transport = Convert.ToInt32(dr["TemplateID_Transport"].ToString());
                        ObjCVarvwQuotations.mQuotationSubject_Transport = Convert.ToString(dr["QuotationSubject_Transport"].ToString());
                        ObjCVarvwQuotations.mQuotationTermsAndConditions_Transport = Convert.ToString(dr["QuotationTermsAndConditions_Transport"].ToString());
                        ObjCVarvwQuotations.mTemplateName_Transport = Convert.ToString(dr["TemplateName_Transport"].ToString());
                        ObjCVarvwQuotations.mTemplateSubject_Transport = Convert.ToString(dr["TemplateSubject_Transport"].ToString());
                        ObjCVarvwQuotations.mTemplateTermsAndConditions_Transport = Convert.ToString(dr["TemplateTermsAndConditions_Transport"].ToString());
                        ObjCVarvwQuotations.mRepDirectionTypeShown = Convert.ToString(dr["RepDirectionTypeShown"].ToString());
                        ObjCVarvwQuotations.mClientID = Convert.ToInt32(dr["ClientID"].ToString());
                        ObjCVarvwQuotations.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwQuotations.mClientEmail = Convert.ToString(dr["ClientEmail"].ToString());
                        ObjCVarvwQuotations.mClientContactName = Convert.ToString(dr["ClientContactName"].ToString());
                        ObjCVarvwQuotations.mClientContactEmail = Convert.ToString(dr["ClientContactEmail"].ToString());
                        ObjCVarvwQuotations.mRepTransportTypeShown = Convert.ToString(dr["RepTransportTypeShown"].ToString());
                        ObjCVarvwQuotations.mRepLineName = Convert.ToString(dr["RepLineName"].ToString());
                        ObjCVarvwQuotations.mIsFleet = Convert.ToBoolean(dr["IsFleet"].ToString());
                        ObjCVarvwQuotations.mZeroCostChargesCount = Convert.ToInt32(dr["ZeroCostChargesCount"].ToString());
                        ObjCVarvwQuotations.mChargesCount = Convert.ToInt32(dr["ChargesCount"].ToString());
                        ObjCVarvwQuotations.mShipmentTypeName = Convert.ToString(dr["ShipmentTypeName"].ToString());
                        ObjCVarvwQuotations.mTransportTypeName = Convert.ToString(dr["TransportTypeName"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwQuotations.Add(ObjCVarvwQuotations);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }

}
