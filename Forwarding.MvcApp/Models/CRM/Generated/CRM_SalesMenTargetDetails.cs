using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.CRM.CRM_SalesMenTargetDetails.Generated
{
    [Serializable]
    public class CPKCRM_SalesMenTargetDetails
    {
        #region "variables"
        private Int32 mID;
        #endregion

        #region "Methods"
        public Int32 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        #endregion
    }
    [Serializable]
    public partial class CVarCRM_SalesMenTargetDetails : CPKCRM_SalesMenTargetDetails
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal DateTime mFromDate;
        internal DateTime mToDate;
        internal Int32 mTarget;
        internal Int32 mTargetPeriod;
        internal Int32 mTotalTarget;
        internal Int32 mCRM_SalesMenTargetID;
        internal Int32 mModifatorUserID;
        internal DateTime mModificationDate;
        internal Int32 mCreatorUserID;
        internal DateTime mCreationDate;
        internal Boolean mIsActionsTarget;
        internal Decimal mAmount;
        internal Decimal mAllAmount;
        internal String mNotes;
        internal Decimal mPerDay;
        internal Decimal mPerMonth;
        internal Int32 mDaysCount;
        internal Int32 mActionID;
        #endregion

        #region "Methods"
        public DateTime FromDate
        {
            get { return mFromDate; }
            set { mIsChanges = true; mFromDate = value; }
        }
        public DateTime ToDate
        {
            get { return mToDate; }
            set { mIsChanges = true; mToDate = value; }
        }
        public Int32 Target
        {
            get { return mTarget; }
            set { mIsChanges = true; mTarget = value; }
        }
        public Int32 TargetPeriod
        {
            get { return mTargetPeriod; }
            set { mIsChanges = true; mTargetPeriod = value; }
        }
        public Int32 TotalTarget
        {
            get { return mTotalTarget; }
            set { mIsChanges = true; mTotalTarget = value; }
        }
        public Int32 CRM_SalesMenTargetID
        {
            get { return mCRM_SalesMenTargetID; }
            set { mIsChanges = true; mCRM_SalesMenTargetID = value; }
        }
        public Int32 ModifatorUserID
        {
            get { return mModifatorUserID; }
            set { mIsChanges = true; mModifatorUserID = value; }
        }
        public DateTime ModificationDate
        {
            get { return mModificationDate; }
            set { mIsChanges = true; mModificationDate = value; }
        }
        public Int32 CreatorUserID
        {
            get { return mCreatorUserID; }
            set { mIsChanges = true; mCreatorUserID = value; }
        }
        public DateTime CreationDate
        {
            get { return mCreationDate; }
            set { mIsChanges = true; mCreationDate = value; }
        }
        public Boolean IsActionsTarget
        {
            get { return mIsActionsTarget; }
            set { mIsChanges = true; mIsActionsTarget = value; }
        }
        public Decimal Amount
        {
            get { return mAmount; }
            set { mIsChanges = true; mAmount = value; }
        }
        public Decimal AllAmount
        {
            get { return mAllAmount; }
            set { mIsChanges = true; mAllAmount = value; }
        }
        public String Notes
        {
            get { return mNotes; }
            set { mIsChanges = true; mNotes = value; }
        }
        public Decimal PerDay
        {
            get { return mPerDay; }
            set { mIsChanges = true; mPerDay = value; }
        }
        public Decimal PerMonth
        {
            get { return mPerMonth; }
            set { mIsChanges = true; mPerMonth = value; }
        }
        public Int32 DaysCount
        {
            get { return mDaysCount; }
            set { mIsChanges = true; mDaysCount = value; }
        }
        public Int32 ActionID
        {
            get { return mActionID; }
            set { mIsChanges = true; mActionID = value; }
        }
        #endregion

        #region Functions
        public Boolean GetIsChange()
        {
            return mIsChanges;
        }
        public void SetIsChange(Boolean IsChange)
        {
            mIsChanges = IsChange;
        }
        #endregion
    }

    public partial class CCRM_SalesMenTargetDetails
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarCRM_SalesMenTargetDetails> lstCVarCRM_SalesMenTargetDetails = new List<CVarCRM_SalesMenTargetDetails>();
        public List<CPKCRM_SalesMenTargetDetails> lstDeletedCPKCRM_SalesMenTargetDetails = new List<CPKCRM_SalesMenTargetDetails>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        public Exception GetItem(Int32 ID)
        {
            return DataFill(Convert.ToString(ID), false);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarCRM_SalesMenTargetDetails.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.VarChar));
                    Com.CommandText = "[dbo].GetListCRM_SalesMenTargetDetails";
                    Com.Parameters[0].Value = Param;
                }
                else
                {
                    Com.CommandText = "[dbo].GetItemCRM_SalesMenTargetDetails";
                    Com.Parameters.Add(new SqlParameter("@ID", SqlDbType.Int));
                    Com.Parameters[0].Value = Convert.ToInt32(Param);
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarCRM_SalesMenTargetDetails ObjCVarCRM_SalesMenTargetDetails = new CVarCRM_SalesMenTargetDetails();
                        ObjCVarCRM_SalesMenTargetDetails.ID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mFromDate = Convert.ToDateTime(dr["FromDate"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mToDate = Convert.ToDateTime(dr["ToDate"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mTarget = Convert.ToInt32(dr["Target"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mTargetPeriod = Convert.ToInt32(dr["TargetPeriod"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mTotalTarget = Convert.ToInt32(dr["TotalTarget"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mCRM_SalesMenTargetID = Convert.ToInt32(dr["CRM_SalesMenTargetID"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mModifatorUserID = Convert.ToInt32(dr["ModifatorUserID"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mIsActionsTarget = Convert.ToBoolean(dr["IsActionsTarget"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mAmount = Convert.ToDecimal(dr["Amount"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mAllAmount = Convert.ToDecimal(dr["AllAmount"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mPerDay = Convert.ToDecimal(dr["PerDay"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mPerMonth = Convert.ToDecimal(dr["PerMonth"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mDaysCount = Convert.ToInt32(dr["DaysCount"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mActionID = Convert.ToInt32(dr["ActionID"].ToString());
                        lstCVarCRM_SalesMenTargetDetails.Add(ObjCVarCRM_SalesMenTargetDetails);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarCRM_SalesMenTargetDetails.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.VarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingCRM_SalesMenTargetDetails";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarCRM_SalesMenTargetDetails ObjCVarCRM_SalesMenTargetDetails = new CVarCRM_SalesMenTargetDetails();
                        ObjCVarCRM_SalesMenTargetDetails.ID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mFromDate = Convert.ToDateTime(dr["FromDate"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mToDate = Convert.ToDateTime(dr["ToDate"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mTarget = Convert.ToInt32(dr["Target"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mTargetPeriod = Convert.ToInt32(dr["TargetPeriod"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mTotalTarget = Convert.ToInt32(dr["TotalTarget"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mCRM_SalesMenTargetID = Convert.ToInt32(dr["CRM_SalesMenTargetID"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mModifatorUserID = Convert.ToInt32(dr["ModifatorUserID"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mIsActionsTarget = Convert.ToBoolean(dr["IsActionsTarget"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mAmount = Convert.ToDecimal(dr["Amount"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mAllAmount = Convert.ToDecimal(dr["AllAmount"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mPerDay = Convert.ToDecimal(dr["PerDay"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mPerMonth = Convert.ToDecimal(dr["PerMonth"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mDaysCount = Convert.ToInt32(dr["DaysCount"].ToString());
                        ObjCVarCRM_SalesMenTargetDetails.mActionID = Convert.ToInt32(dr["ActionID"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarCRM_SalesMenTargetDetails.Add(ObjCVarCRM_SalesMenTargetDetails);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
        #region "Common Methods"
        private void BeginTrans(SqlCommand Com, SqlConnection Con)
        {

            tr = Con.BeginTransaction(IsolationLevel.Serializable);
            Com.CommandType = CommandType.StoredProcedure;
        }

        private void EndTrans(SqlCommand Com, SqlConnection Con)
        {

            Com.Transaction = tr;
            Com.Connection = Con;
            Com.ExecuteNonQuery();
            tr.Commit();
        }

        #endregion
        #region "Set List Method"
        private Exception SetList(string WhereClause, Boolean IsDelete)
        {

            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            try
            {
                Con.Open();
                Com = new SqlCommand();
                if (IsDelete == true)
                    Com.CommandText = "[dbo].DeleteListCRM_SalesMenTargetDetails";
                else
                    Com.CommandText = "[dbo].UpdateListCRM_SalesMenTargetDetails";
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.VarChar));
                BeginTrans(Com, Con);
                Com.Parameters[0].Value = WhereClause;
                EndTrans(Com, Con);
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
        #region "Delete Methods"
        public Exception DeleteItem(List<CPKCRM_SalesMenTargetDetails> DeleteList)
        {

            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            try
            {
                Con.Open();
                Com = new SqlCommand();
                Com.CommandText = "[dbo].DeleteItemCRM_SalesMenTargetDetails";
                Com.Parameters.Add(new SqlParameter("@ID", SqlDbType.Int));
                foreach (CPKCRM_SalesMenTargetDetails ObjCPKCRM_SalesMenTargetDetails in DeleteList)
                {
                    BeginTrans(Com, Con);
                    Com.Parameters[0].Value = Convert.ToInt32(ObjCPKCRM_SalesMenTargetDetails.ID);
                    EndTrans(Com, Con);
                }
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
                DeleteList.Clear();
            }
            return Exp;
        }

        public Exception DeleteList(string WhereClause)
        {

            return SetList(WhereClause, true);
        }

        #endregion
        #region "Save Methods"
        public Exception SaveMethod(List<CVarCRM_SalesMenTargetDetails> SaveList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            try
            {
                Con.Open();
                Com = new SqlCommand();
                Com.Parameters.Add(new SqlParameter("@FromDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@ToDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@Target", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@TargetPeriod", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@TotalTarget", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@CRM_SalesMenTargetID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@ModifatorUserID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@ModificationDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@CreatorUserID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@CreationDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@IsActionsTarget", SqlDbType.Bit));
                Com.Parameters.Add(new SqlParameter("@Amount", SqlDbType.Decimal));
                Com.Parameters.Add(new SqlParameter("@AllAmount", SqlDbType.Decimal));
                Com.Parameters.Add(new SqlParameter("@Notes", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@PerDay", SqlDbType.Decimal));
                Com.Parameters.Add(new SqlParameter("@PerMonth", SqlDbType.Decimal));
                Com.Parameters.Add(new SqlParameter("@DaysCount", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@ActionID", SqlDbType.Int));
                SqlParameter paraID = Com.Parameters.Add(new SqlParameter("@ID", SqlDbType.Int, 0, ParameterDirection.Input, false, 0, 0, "ID", DataRowVersion.Default, null));
                foreach (CVarCRM_SalesMenTargetDetails ObjCVarCRM_SalesMenTargetDetails in SaveList)
                {
                    if (ObjCVarCRM_SalesMenTargetDetails.mIsChanges == true)
                    {
                        if (ObjCVarCRM_SalesMenTargetDetails.ID == 0)
                        {
                            Com.CommandText = "[dbo].InsertItemCRM_SalesMenTargetDetails";
                            paraID.Direction = ParameterDirection.Output;
                        }
                        else if (ObjCVarCRM_SalesMenTargetDetails.ID != 0)
                        {
                            Com.CommandText = "[dbo].UpdateItemCRM_SalesMenTargetDetails";
                            paraID.Direction = ParameterDirection.Input;
                        }
                        BeginTrans(Com, Con);
                        if (ObjCVarCRM_SalesMenTargetDetails.ID != 0)
                        {
                            Com.Parameters["@ID"].Value = ObjCVarCRM_SalesMenTargetDetails.ID;
                        }
                        Com.Parameters["@FromDate"].Value = ObjCVarCRM_SalesMenTargetDetails.FromDate;
                        Com.Parameters["@ToDate"].Value = ObjCVarCRM_SalesMenTargetDetails.ToDate;
                        Com.Parameters["@Target"].Value = ObjCVarCRM_SalesMenTargetDetails.Target;
                        Com.Parameters["@TargetPeriod"].Value = ObjCVarCRM_SalesMenTargetDetails.TargetPeriod;
                        Com.Parameters["@TotalTarget"].Value = ObjCVarCRM_SalesMenTargetDetails.TotalTarget;
                        Com.Parameters["@CRM_SalesMenTargetID"].Value = ObjCVarCRM_SalesMenTargetDetails.CRM_SalesMenTargetID;
                        Com.Parameters["@ModifatorUserID"].Value = ObjCVarCRM_SalesMenTargetDetails.ModifatorUserID;
                        Com.Parameters["@ModificationDate"].Value = ObjCVarCRM_SalesMenTargetDetails.ModificationDate;
                        Com.Parameters["@CreatorUserID"].Value = ObjCVarCRM_SalesMenTargetDetails.CreatorUserID;
                        Com.Parameters["@CreationDate"].Value = ObjCVarCRM_SalesMenTargetDetails.CreationDate;
                        Com.Parameters["@IsActionsTarget"].Value = ObjCVarCRM_SalesMenTargetDetails.IsActionsTarget;
                        Com.Parameters["@Amount"].Value = ObjCVarCRM_SalesMenTargetDetails.Amount;
                        Com.Parameters["@AllAmount"].Value = ObjCVarCRM_SalesMenTargetDetails.AllAmount;
                        Com.Parameters["@Notes"].Value = ObjCVarCRM_SalesMenTargetDetails.Notes;
                        Com.Parameters["@PerDay"].Value = ObjCVarCRM_SalesMenTargetDetails.PerDay;
                        Com.Parameters["@PerMonth"].Value = ObjCVarCRM_SalesMenTargetDetails.PerMonth;
                        Com.Parameters["@DaysCount"].Value = ObjCVarCRM_SalesMenTargetDetails.DaysCount;
                        Com.Parameters["@ActionID"].Value = ObjCVarCRM_SalesMenTargetDetails.ActionID;
                        EndTrans(Com, Con);
                        if (ObjCVarCRM_SalesMenTargetDetails.ID == 0)
                        {
                            ObjCVarCRM_SalesMenTargetDetails.ID = Convert.ToInt32(Com.Parameters["@ID"].Value);
                        }
                        ObjCVarCRM_SalesMenTargetDetails.mIsChanges = false;
                    }
                }
            }
            catch (Exception ex)
            {
                Exp = ex;
                if (tr != null)
                    tr.Rollback();
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }
        #endregion
        #region "Update Methods"
        public Exception UpdateList(string UpdateClause)
        {

            return SetList(UpdateClause, false);
        }

        #endregion
    }
}
