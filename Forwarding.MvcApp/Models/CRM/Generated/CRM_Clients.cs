using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.CRM.CRM_Clients.Generated
{
    [Serializable]
    public class CPKCRM_Clients
    {
        #region "variables"
        private Int32 mID;
        #endregion

        #region "Methods"
        public Int32 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        #endregion
    }
    [Serializable]
    public partial class CVarCRM_Clients : CPKCRM_Clients
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal String mName;
        internal String mLocalName;
        internal Int32 mCode;
        internal Int32 mCountryID;
        internal String mPhone1;
        internal String mPhone2;
        internal String mCellPhone;
        internal String mFax;
        internal String mEmail;
        internal Int32 mSourceID;
        internal DateTime mSourceDate;
        internal String mSourceDescription;
        internal String mWebSite;
        internal Boolean mIsIsoTanks;
        internal Boolean mIsFlexiTanks;
        internal Int32 mSalesmanID;
        internal Int32 mCreatorUserID;
        internal DateTime mCreationDate;
        internal String mNotes;
        internal Int32 mCompanyView;
        internal Int32 mCompanySize;
        internal Int32 mCompanyType;
        internal Int32 mClientStatus;
        internal Int32 mModificationUserID;
        internal DateTime mModificationDate;
        internal DateTime mEstablishDate;
        internal String mAddress;
        internal Int32 mPortID;
        internal Boolean mIsAddedToCustomer;
        internal Int32 mCommodityID;
        internal Int32 mActivityID;
        internal Int32 mCurrencyID;
        internal Decimal mRevenue;
        internal Decimal mCost;
        internal Decimal mGrossProfit;
        internal Decimal mProfitMargin;
        internal DateTime mStartingDate;
        internal DateTime mClosingExpectedDate;
        internal String mTradeLane;
        internal Int32 mContainerTypeID;
        internal Int32 mBusinessVolume;
        internal String mCompetitors;
        internal Int32 mPaymentTermID;
        internal Int32 mPipeLineStageID;
        internal String mComment;
        internal Int32 mIndustryTypeID;
        internal Int32 mLeadStatusID;
        internal String mLostReason;
        internal String mEndUserName;
        internal Int32 mClientTypeID;
        internal Int32 mCustomerID;
        #endregion

        #region "Methods"
        public String Name
        {
            get { return mName; }
            set { mIsChanges = true; mName = value; }
        }
        public String LocalName
        {
            get { return mLocalName; }
            set { mIsChanges = true; mLocalName = value; }
        }
        public Int32 Code
        {
            get { return mCode; }
            set { mIsChanges = true; mCode = value; }
        }
        public Int32 CountryID
        {
            get { return mCountryID; }
            set { mIsChanges = true; mCountryID = value; }
        }
        public String Phone1
        {
            get { return mPhone1; }
            set { mIsChanges = true; mPhone1 = value; }
        }
        public String Phone2
        {
            get { return mPhone2; }
            set { mIsChanges = true; mPhone2 = value; }
        }
        public String CellPhone
        {
            get { return mCellPhone; }
            set { mIsChanges = true; mCellPhone = value; }
        }
        public String Fax
        {
            get { return mFax; }
            set { mIsChanges = true; mFax = value; }
        }
        public String Email
        {
            get { return mEmail; }
            set { mIsChanges = true; mEmail = value; }
        }
        public Int32 SourceID
        {
            get { return mSourceID; }
            set { mIsChanges = true; mSourceID = value; }
        }
        public DateTime SourceDate
        {
            get { return mSourceDate; }
            set { mIsChanges = true; mSourceDate = value; }
        }
        public String SourceDescription
        {
            get { return mSourceDescription; }
            set { mIsChanges = true; mSourceDescription = value; }
        }
        public String WebSite
        {
            get { return mWebSite; }
            set { mIsChanges = true; mWebSite = value; }
        }
        public Boolean IsIsoTanks
        {
            get { return mIsIsoTanks; }
            set { mIsChanges = true; mIsIsoTanks = value; }
        }
        public Boolean IsFlexiTanks
        {
            get { return mIsFlexiTanks; }
            set { mIsChanges = true; mIsFlexiTanks = value; }
        }
        public Int32 SalesmanID
        {
            get { return mSalesmanID; }
            set { mIsChanges = true; mSalesmanID = value; }
        }
        public Int32 CreatorUserID
        {
            get { return mCreatorUserID; }
            set { mIsChanges = true; mCreatorUserID = value; }
        }
        public DateTime CreationDate
        {
            get { return mCreationDate; }
            set { mIsChanges = true; mCreationDate = value; }
        }
        public String Notes
        {
            get { return mNotes; }
            set { mIsChanges = true; mNotes = value; }
        }
        public Int32 CompanyView
        {
            get { return mCompanyView; }
            set { mIsChanges = true; mCompanyView = value; }
        }
        public Int32 CompanySize
        {
            get { return mCompanySize; }
            set { mIsChanges = true; mCompanySize = value; }
        }
        public Int32 CompanyType
        {
            get { return mCompanyType; }
            set { mIsChanges = true; mCompanyType = value; }
        }
        public Int32 ClientStatus
        {
            get { return mClientStatus; }
            set { mIsChanges = true; mClientStatus = value; }
        }
        public Int32 ModificationUserID
        {
            get { return mModificationUserID; }
            set { mIsChanges = true; mModificationUserID = value; }
        }
        public DateTime ModificationDate
        {
            get { return mModificationDate; }
            set { mIsChanges = true; mModificationDate = value; }
        }
        public DateTime EstablishDate
        {
            get { return mEstablishDate; }
            set { mIsChanges = true; mEstablishDate = value; }
        }
        public String Address
        {
            get { return mAddress; }
            set { mIsChanges = true; mAddress = value; }
        }
        public Int32 PortID
        {
            get { return mPortID; }
            set { mIsChanges = true; mPortID = value; }
        }
        public Boolean IsAddedToCustomer
        {
            get { return mIsAddedToCustomer; }
            set { mIsChanges = true; mIsAddedToCustomer = value; }
        }
        public Int32 CommodityID
        {
            get { return mCommodityID; }
            set { mIsChanges = true; mCommodityID = value; }
        }
        public Int32 ActivityID
        {
            get { return mActivityID; }
            set { mIsChanges = true; mActivityID = value; }
        }
        public Int32 CurrencyID
        {
            get { return mCurrencyID; }
            set { mIsChanges = true; mCurrencyID = value; }
        }
        public Decimal Revenue
        {
            get { return mRevenue; }
            set { mIsChanges = true; mRevenue = value; }
        }
        public Decimal Cost
        {
            get { return mCost; }
            set { mIsChanges = true; mCost = value; }
        }
        public Decimal GrossProfit
        {
            get { return mGrossProfit; }
            set { mIsChanges = true; mGrossProfit = value; }
        }
        public Decimal ProfitMargin
        {
            get { return mProfitMargin; }
            set { mIsChanges = true; mProfitMargin = value; }
        }
        public DateTime StartingDate
        {
            get { return mStartingDate; }
            set { mIsChanges = true; mStartingDate = value; }
        }
        public DateTime ClosingExpectedDate
        {
            get { return mClosingExpectedDate; }
            set { mIsChanges = true; mClosingExpectedDate = value; }
        }
        public String TradeLane
        {
            get { return mTradeLane; }
            set { mIsChanges = true; mTradeLane = value; }
        }
        public Int32 ContainerTypeID
        {
            get { return mContainerTypeID; }
            set { mIsChanges = true; mContainerTypeID = value; }
        }
        public Int32 BusinessVolume
        {
            get { return mBusinessVolume; }
            set { mIsChanges = true; mBusinessVolume = value; }
        }
        public String Competitors
        {
            get { return mCompetitors; }
            set { mIsChanges = true; mCompetitors = value; }
        }
        public Int32 PaymentTermID
        {
            get { return mPaymentTermID; }
            set { mIsChanges = true; mPaymentTermID = value; }
        }
        public Int32 PipeLineStageID
        {
            get { return mPipeLineStageID; }
            set { mIsChanges = true; mPipeLineStageID = value; }
        }
        public String Comment
        {
            get { return mComment; }
            set { mIsChanges = true; mComment = value; }
        }
        public Int32 IndustryTypeID
        {
            get { return mIndustryTypeID; }
            set { mIsChanges = true; mIndustryTypeID = value; }
        }
        public Int32 LeadStatusID
        {
            get { return mLeadStatusID; }
            set { mIsChanges = true; mLeadStatusID = value; }
        }
        public String LostReason
        {
            get { return mLostReason; }
            set { mIsChanges = true; mLostReason = value; }
        }
        public String EndUserName
        {
            get { return mEndUserName; }
            set { mIsChanges = true; mEndUserName = value; }
        }
        public Int32 ClientTypeID
        {
            get { return mClientTypeID; }
            set { mIsChanges = true; mClientTypeID = value; }
        }
        public Int32 CustomerID
        {
            get { return mCustomerID; }
            set { mIsChanges = true; mCustomerID = value; }
        }
        #endregion

        #region Functions
        public Boolean GetIsChange()
        {
            return mIsChanges;
        }
        public void SetIsChange(Boolean IsChange)
        {
            mIsChanges = IsChange;
        }
        #endregion
    }

    public partial class CCRM_Clients
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarCRM_Clients> lstCVarCRM_Clients = new List<CVarCRM_Clients>();
        public List<CPKCRM_Clients> lstDeletedCPKCRM_Clients = new List<CPKCRM_Clients>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        public Exception GetItem(Int32 ID)
        {
            return DataFill(Convert.ToString(ID), false);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarCRM_Clients.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListCRM_Clients";
                    Com.Parameters[0].Value = Param;
                }
                else
                {
                    Com.CommandText = "[dbo].GetItemCRM_Clients";
                    Com.Parameters.Add(new SqlParameter("@ID", SqlDbType.Int));
                    Com.Parameters[0].Value = Convert.ToInt32(Param);
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarCRM_Clients ObjCVarCRM_Clients = new CVarCRM_Clients();
                        ObjCVarCRM_Clients.ID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarCRM_Clients.mName = Convert.ToString(dr["Name"].ToString());
                        ObjCVarCRM_Clients.mLocalName = Convert.ToString(dr["LocalName"].ToString());
                        ObjCVarCRM_Clients.mCode = Convert.ToInt32(dr["Code"].ToString());
                        ObjCVarCRM_Clients.mCountryID = Convert.ToInt32(dr["CountryID"].ToString());
                        ObjCVarCRM_Clients.mPhone1 = Convert.ToString(dr["Phone1"].ToString());
                        ObjCVarCRM_Clients.mPhone2 = Convert.ToString(dr["Phone2"].ToString());
                        ObjCVarCRM_Clients.mCellPhone = Convert.ToString(dr["CellPhone"].ToString());
                        ObjCVarCRM_Clients.mFax = Convert.ToString(dr["Fax"].ToString());
                        ObjCVarCRM_Clients.mEmail = Convert.ToString(dr["Email"].ToString());
                        ObjCVarCRM_Clients.mSourceID = Convert.ToInt32(dr["SourceID"].ToString());
                        ObjCVarCRM_Clients.mSourceDate = Convert.ToDateTime(dr["SourceDate"].ToString());
                        ObjCVarCRM_Clients.mSourceDescription = Convert.ToString(dr["SourceDescription"].ToString());
                        ObjCVarCRM_Clients.mWebSite = Convert.ToString(dr["WebSite"].ToString());
                        ObjCVarCRM_Clients.mIsIsoTanks = Convert.ToBoolean(dr["IsIsoTanks"].ToString());
                        ObjCVarCRM_Clients.mIsFlexiTanks = Convert.ToBoolean(dr["IsFlexiTanks"].ToString());
                        ObjCVarCRM_Clients.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarCRM_Clients.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarCRM_Clients.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarCRM_Clients.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarCRM_Clients.mCompanyView = Convert.ToInt32(dr["CompanyView"].ToString());
                        ObjCVarCRM_Clients.mCompanySize = Convert.ToInt32(dr["CompanySize"].ToString());
                        ObjCVarCRM_Clients.mCompanyType = Convert.ToInt32(dr["CompanyType"].ToString());
                        ObjCVarCRM_Clients.mClientStatus = Convert.ToInt32(dr["ClientStatus"].ToString());
                        ObjCVarCRM_Clients.mModificationUserID = Convert.ToInt32(dr["ModificationUserID"].ToString());
                        ObjCVarCRM_Clients.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarCRM_Clients.mEstablishDate = Convert.ToDateTime(dr["EstablishDate"].ToString());
                        ObjCVarCRM_Clients.mAddress = Convert.ToString(dr["Address"].ToString());
                        ObjCVarCRM_Clients.mPortID = Convert.ToInt32(dr["PortID"].ToString());
                        ObjCVarCRM_Clients.mIsAddedToCustomer = Convert.ToBoolean(dr["IsAddedToCustomer"].ToString());
                        ObjCVarCRM_Clients.mCommodityID = Convert.ToInt32(dr["CommodityID"].ToString());
                        ObjCVarCRM_Clients.mActivityID = Convert.ToInt32(dr["ActivityID"].ToString());
                        ObjCVarCRM_Clients.mCurrencyID = Convert.ToInt32(dr["CurrencyID"].ToString());
                        ObjCVarCRM_Clients.mRevenue = Convert.ToDecimal(dr["Revenue"].ToString());
                        ObjCVarCRM_Clients.mCost = Convert.ToDecimal(dr["Cost"].ToString());
                        ObjCVarCRM_Clients.mGrossProfit = Convert.ToDecimal(dr["GrossProfit"].ToString());
                        ObjCVarCRM_Clients.mProfitMargin = Convert.ToDecimal(dr["ProfitMargin"].ToString());
                        ObjCVarCRM_Clients.mStartingDate = Convert.ToDateTime(dr["StartingDate"].ToString());
                        ObjCVarCRM_Clients.mClosingExpectedDate = Convert.ToDateTime(dr["ClosingExpectedDate"].ToString());
                        ObjCVarCRM_Clients.mTradeLane = Convert.ToString(dr["TradeLane"].ToString());
                        ObjCVarCRM_Clients.mContainerTypeID = Convert.ToInt32(dr["ContainerTypeID"].ToString());
                        ObjCVarCRM_Clients.mBusinessVolume = Convert.ToInt32(dr["BusinessVolume"].ToString());
                        ObjCVarCRM_Clients.mCompetitors = Convert.ToString(dr["Competitors"].ToString());
                        ObjCVarCRM_Clients.mPaymentTermID = Convert.ToInt32(dr["PaymentTermID"].ToString());
                        ObjCVarCRM_Clients.mPipeLineStageID = Convert.ToInt32(dr["PipeLineStageID"].ToString());
                        ObjCVarCRM_Clients.mComment = Convert.ToString(dr["Comment"].ToString());
                        ObjCVarCRM_Clients.mIndustryTypeID = Convert.ToInt32(dr["IndustryTypeID"].ToString());
                        ObjCVarCRM_Clients.mLeadStatusID = Convert.ToInt32(dr["LeadStatusID"].ToString());
                        ObjCVarCRM_Clients.mLostReason = Convert.ToString(dr["LostReason"].ToString());
                        ObjCVarCRM_Clients.mEndUserName = Convert.ToString(dr["EndUserName"].ToString());
                        ObjCVarCRM_Clients.mClientTypeID = Convert.ToInt32(dr["ClientTypeID"].ToString());
                        ObjCVarCRM_Clients.mCustomerID = Convert.ToInt32(dr["CustomerID"].ToString());
                        lstCVarCRM_Clients.Add(ObjCVarCRM_Clients);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarCRM_Clients.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingCRM_Clients";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarCRM_Clients ObjCVarCRM_Clients = new CVarCRM_Clients();
                        ObjCVarCRM_Clients.ID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarCRM_Clients.mName = Convert.ToString(dr["Name"].ToString());
                        ObjCVarCRM_Clients.mLocalName = Convert.ToString(dr["LocalName"].ToString());
                        ObjCVarCRM_Clients.mCode = Convert.ToInt32(dr["Code"].ToString());
                        ObjCVarCRM_Clients.mCountryID = Convert.ToInt32(dr["CountryID"].ToString());
                        ObjCVarCRM_Clients.mPhone1 = Convert.ToString(dr["Phone1"].ToString());
                        ObjCVarCRM_Clients.mPhone2 = Convert.ToString(dr["Phone2"].ToString());
                        ObjCVarCRM_Clients.mCellPhone = Convert.ToString(dr["CellPhone"].ToString());
                        ObjCVarCRM_Clients.mFax = Convert.ToString(dr["Fax"].ToString());
                        ObjCVarCRM_Clients.mEmail = Convert.ToString(dr["Email"].ToString());
                        ObjCVarCRM_Clients.mSourceID = Convert.ToInt32(dr["SourceID"].ToString());
                        ObjCVarCRM_Clients.mSourceDate = Convert.ToDateTime(dr["SourceDate"].ToString());
                        ObjCVarCRM_Clients.mSourceDescription = Convert.ToString(dr["SourceDescription"].ToString());
                        ObjCVarCRM_Clients.mWebSite = Convert.ToString(dr["WebSite"].ToString());
                        ObjCVarCRM_Clients.mIsIsoTanks = Convert.ToBoolean(dr["IsIsoTanks"].ToString());
                        ObjCVarCRM_Clients.mIsFlexiTanks = Convert.ToBoolean(dr["IsFlexiTanks"].ToString());
                        ObjCVarCRM_Clients.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarCRM_Clients.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarCRM_Clients.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarCRM_Clients.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarCRM_Clients.mCompanyView = Convert.ToInt32(dr["CompanyView"].ToString());
                        ObjCVarCRM_Clients.mCompanySize = Convert.ToInt32(dr["CompanySize"].ToString());
                        ObjCVarCRM_Clients.mCompanyType = Convert.ToInt32(dr["CompanyType"].ToString());
                        ObjCVarCRM_Clients.mClientStatus = Convert.ToInt32(dr["ClientStatus"].ToString());
                        ObjCVarCRM_Clients.mModificationUserID = Convert.ToInt32(dr["ModificationUserID"].ToString());
                        ObjCVarCRM_Clients.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarCRM_Clients.mEstablishDate = Convert.ToDateTime(dr["EstablishDate"].ToString());
                        ObjCVarCRM_Clients.mAddress = Convert.ToString(dr["Address"].ToString());
                        ObjCVarCRM_Clients.mPortID = Convert.ToInt32(dr["PortID"].ToString());
                        ObjCVarCRM_Clients.mIsAddedToCustomer = Convert.ToBoolean(dr["IsAddedToCustomer"].ToString());
                        ObjCVarCRM_Clients.mCommodityID = Convert.ToInt32(dr["CommodityID"].ToString());
                        ObjCVarCRM_Clients.mActivityID = Convert.ToInt32(dr["ActivityID"].ToString());
                        ObjCVarCRM_Clients.mCurrencyID = Convert.ToInt32(dr["CurrencyID"].ToString());
                        ObjCVarCRM_Clients.mRevenue = Convert.ToDecimal(dr["Revenue"].ToString());
                        ObjCVarCRM_Clients.mCost = Convert.ToDecimal(dr["Cost"].ToString());
                        ObjCVarCRM_Clients.mGrossProfit = Convert.ToDecimal(dr["GrossProfit"].ToString());
                        ObjCVarCRM_Clients.mProfitMargin = Convert.ToDecimal(dr["ProfitMargin"].ToString());
                        ObjCVarCRM_Clients.mStartingDate = Convert.ToDateTime(dr["StartingDate"].ToString());
                        ObjCVarCRM_Clients.mClosingExpectedDate = Convert.ToDateTime(dr["ClosingExpectedDate"].ToString());
                        ObjCVarCRM_Clients.mTradeLane = Convert.ToString(dr["TradeLane"].ToString());
                        ObjCVarCRM_Clients.mContainerTypeID = Convert.ToInt32(dr["ContainerTypeID"].ToString());
                        ObjCVarCRM_Clients.mBusinessVolume = Convert.ToInt32(dr["BusinessVolume"].ToString());
                        ObjCVarCRM_Clients.mCompetitors = Convert.ToString(dr["Competitors"].ToString());
                        ObjCVarCRM_Clients.mPaymentTermID = Convert.ToInt32(dr["PaymentTermID"].ToString());
                        ObjCVarCRM_Clients.mPipeLineStageID = Convert.ToInt32(dr["PipeLineStageID"].ToString());
                        ObjCVarCRM_Clients.mComment = Convert.ToString(dr["Comment"].ToString());
                        ObjCVarCRM_Clients.mIndustryTypeID = Convert.ToInt32(dr["IndustryTypeID"].ToString());
                        ObjCVarCRM_Clients.mLeadStatusID = Convert.ToInt32(dr["LeadStatusID"].ToString());
                        ObjCVarCRM_Clients.mLostReason = Convert.ToString(dr["LostReason"].ToString());
                        ObjCVarCRM_Clients.mEndUserName = Convert.ToString(dr["EndUserName"].ToString());
                        ObjCVarCRM_Clients.mClientTypeID = Convert.ToInt32(dr["ClientTypeID"].ToString());
                        ObjCVarCRM_Clients.mCustomerID = Convert.ToInt32(dr["CustomerID"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarCRM_Clients.Add(ObjCVarCRM_Clients);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
        #region "Common Methods"
        private void BeginTrans(SqlCommand Com, SqlConnection Con)
        {

            tr = Con.BeginTransaction(IsolationLevel.Serializable);
            Com.CommandType = CommandType.StoredProcedure;
        }

        private void EndTrans(SqlCommand Com, SqlConnection Con)
        {

            Com.Transaction = tr;
            Com.Connection = Con;
            Com.ExecuteNonQuery();
            tr.Commit();
        }

        #endregion
        #region "Set List Method"
        private Exception SetList(string WhereClause, Boolean IsDelete)
        {

            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            try
            {
                Con.Open();
                Com = new SqlCommand();
                if (IsDelete == true)
                    Com.CommandText = "[dbo].DeleteListCRM_Clients";
                else
                    Com.CommandText = "[dbo].UpdateListCRM_Clients";
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                BeginTrans(Com, Con);
                Com.Parameters[0].Value = WhereClause;
                EndTrans(Com, Con);
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
        #region "Delete Methods"
        public Exception DeleteItem(List<CPKCRM_Clients> DeleteList)
        {

            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            try
            {
                Con.Open();
                Com = new SqlCommand();
                Com.CommandText = "[dbo].DeleteItemCRM_Clients";
                Com.Parameters.Add(new SqlParameter("@ID", SqlDbType.Int));
                foreach (CPKCRM_Clients ObjCPKCRM_Clients in DeleteList)
                {
                    BeginTrans(Com, Con);
                    Com.Parameters[0].Value = Convert.ToInt32(ObjCPKCRM_Clients.ID);
                    EndTrans(Com, Con);
                }
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
                DeleteList.Clear();
            }
            return Exp;
        }

        public Exception DeleteList(string WhereClause)
        {

            return SetList(WhereClause, true);
        }

        #endregion
        #region "Save Methods"
        public Exception SaveMethod(List<CVarCRM_Clients> SaveList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            try
            {
                Con.Open();
                Com = new SqlCommand();
                Com.Parameters.Add(new SqlParameter("@Name", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@LocalName", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@Code", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@CountryID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@Phone1", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@Phone2", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@CellPhone", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@Fax", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@Email", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@SourceID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@SourceDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@SourceDescription", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@WebSite", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@IsIsoTanks", SqlDbType.Bit));
                Com.Parameters.Add(new SqlParameter("@IsFlexiTanks", SqlDbType.Bit));
                Com.Parameters.Add(new SqlParameter("@SalesmanID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@CreatorUserID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@CreationDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@Notes", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@CompanyView", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@CompanySize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@CompanyType", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@ClientStatus", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@ModificationUserID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@ModificationDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@EstablishDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@Address", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@PortID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@IsAddedToCustomer", SqlDbType.Bit));
                Com.Parameters.Add(new SqlParameter("@CommodityID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@ActivityID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@CurrencyID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@Revenue", SqlDbType.Decimal));
                Com.Parameters.Add(new SqlParameter("@Cost", SqlDbType.Decimal));
                Com.Parameters.Add(new SqlParameter("@GrossProfit", SqlDbType.Decimal));
                Com.Parameters.Add(new SqlParameter("@ProfitMargin", SqlDbType.Decimal));
                Com.Parameters.Add(new SqlParameter("@StartingDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@ClosingExpectedDate", SqlDbType.DateTime));
                Com.Parameters.Add(new SqlParameter("@TradeLane", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@ContainerTypeID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@BusinessVolume", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@Competitors", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@PaymentTermID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PipeLineStageID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@Comment", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@IndustryTypeID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@LeadStatusID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@LostReason", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@EndUserName", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@ClientTypeID", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@CustomerID", SqlDbType.Int));
                SqlParameter paraID = Com.Parameters.Add(new SqlParameter("@ID", SqlDbType.Int, 0, ParameterDirection.Input, false, 0, 0, "ID", DataRowVersion.Default, null));
                foreach (CVarCRM_Clients ObjCVarCRM_Clients in SaveList)
                {
                    if (ObjCVarCRM_Clients.mIsChanges == true)
                    {
                        if (ObjCVarCRM_Clients.ID == 0)
                        {
                            Com.CommandText = "[dbo].InsertItemCRM_Clients";
                            paraID.Direction = ParameterDirection.Output;
                        }
                        else if (ObjCVarCRM_Clients.ID != 0)
                        {
                            Com.CommandText = "[dbo].UpdateItemCRM_Clients";
                            paraID.Direction = ParameterDirection.Input;
                        }
                        BeginTrans(Com, Con);
                        if (ObjCVarCRM_Clients.ID != 0)
                        {
                            Com.Parameters["@ID"].Value = ObjCVarCRM_Clients.ID;
                        }
                        Com.Parameters["@Name"].Value = ObjCVarCRM_Clients.Name;
                        Com.Parameters["@LocalName"].Value = ObjCVarCRM_Clients.LocalName;
                        Com.Parameters["@Code"].Value = ObjCVarCRM_Clients.Code;
                        Com.Parameters["@CountryID"].Value = ObjCVarCRM_Clients.CountryID;
                        Com.Parameters["@Phone1"].Value = ObjCVarCRM_Clients.Phone1;
                        Com.Parameters["@Phone2"].Value = ObjCVarCRM_Clients.Phone2;
                        Com.Parameters["@CellPhone"].Value = ObjCVarCRM_Clients.CellPhone;
                        Com.Parameters["@Fax"].Value = ObjCVarCRM_Clients.Fax;
                        Com.Parameters["@Email"].Value = ObjCVarCRM_Clients.Email;
                        Com.Parameters["@SourceID"].Value = ObjCVarCRM_Clients.SourceID;
                        Com.Parameters["@SourceDate"].Value = ObjCVarCRM_Clients.SourceDate;
                        Com.Parameters["@SourceDescription"].Value = ObjCVarCRM_Clients.SourceDescription;
                        Com.Parameters["@WebSite"].Value = ObjCVarCRM_Clients.WebSite;
                        Com.Parameters["@IsIsoTanks"].Value = ObjCVarCRM_Clients.IsIsoTanks;
                        Com.Parameters["@IsFlexiTanks"].Value = ObjCVarCRM_Clients.IsFlexiTanks;
                        Com.Parameters["@SalesmanID"].Value = ObjCVarCRM_Clients.SalesmanID;
                        Com.Parameters["@CreatorUserID"].Value = ObjCVarCRM_Clients.CreatorUserID;
                        Com.Parameters["@CreationDate"].Value = ObjCVarCRM_Clients.CreationDate;
                        Com.Parameters["@Notes"].Value = ObjCVarCRM_Clients.Notes;
                        Com.Parameters["@CompanyView"].Value = ObjCVarCRM_Clients.CompanyView;
                        Com.Parameters["@CompanySize"].Value = ObjCVarCRM_Clients.CompanySize;
                        Com.Parameters["@CompanyType"].Value = ObjCVarCRM_Clients.CompanyType;
                        Com.Parameters["@ClientStatus"].Value = ObjCVarCRM_Clients.ClientStatus;
                        Com.Parameters["@ModificationUserID"].Value = ObjCVarCRM_Clients.ModificationUserID;
                        Com.Parameters["@ModificationDate"].Value = ObjCVarCRM_Clients.ModificationDate;
                        Com.Parameters["@EstablishDate"].Value = ObjCVarCRM_Clients.EstablishDate;
                        Com.Parameters["@Address"].Value = ObjCVarCRM_Clients.Address;
                        Com.Parameters["@PortID"].Value = ObjCVarCRM_Clients.PortID;
                        Com.Parameters["@IsAddedToCustomer"].Value = ObjCVarCRM_Clients.IsAddedToCustomer;
                        Com.Parameters["@CommodityID"].Value = ObjCVarCRM_Clients.CommodityID;
                        Com.Parameters["@ActivityID"].Value = ObjCVarCRM_Clients.ActivityID;
                        Com.Parameters["@CurrencyID"].Value = ObjCVarCRM_Clients.CurrencyID;
                        Com.Parameters["@Revenue"].Value = ObjCVarCRM_Clients.Revenue;
                        Com.Parameters["@Cost"].Value = ObjCVarCRM_Clients.Cost;
                        Com.Parameters["@GrossProfit"].Value = ObjCVarCRM_Clients.GrossProfit;
                        Com.Parameters["@ProfitMargin"].Value = ObjCVarCRM_Clients.ProfitMargin;
                        Com.Parameters["@StartingDate"].Value = ObjCVarCRM_Clients.StartingDate;
                        Com.Parameters["@ClosingExpectedDate"].Value = ObjCVarCRM_Clients.ClosingExpectedDate;
                        Com.Parameters["@TradeLane"].Value = ObjCVarCRM_Clients.TradeLane;
                        Com.Parameters["@ContainerTypeID"].Value = ObjCVarCRM_Clients.ContainerTypeID;
                        Com.Parameters["@BusinessVolume"].Value = ObjCVarCRM_Clients.BusinessVolume;
                        Com.Parameters["@Competitors"].Value = ObjCVarCRM_Clients.Competitors;
                        Com.Parameters["@PaymentTermID"].Value = ObjCVarCRM_Clients.PaymentTermID;
                        Com.Parameters["@PipeLineStageID"].Value = ObjCVarCRM_Clients.PipeLineStageID;
                        Com.Parameters["@Comment"].Value = ObjCVarCRM_Clients.Comment;
                        Com.Parameters["@IndustryTypeID"].Value = ObjCVarCRM_Clients.IndustryTypeID;
                        Com.Parameters["@LeadStatusID"].Value = ObjCVarCRM_Clients.LeadStatusID;
                        Com.Parameters["@LostReason"].Value = ObjCVarCRM_Clients.LostReason;
                        Com.Parameters["@EndUserName"].Value = ObjCVarCRM_Clients.EndUserName;
                        Com.Parameters["@ClientTypeID"].Value = ObjCVarCRM_Clients.ClientTypeID;
                        Com.Parameters["@CustomerID"].Value = ObjCVarCRM_Clients.CustomerID;
                        EndTrans(Com, Con);
                        if (ObjCVarCRM_Clients.ID == 0)
                        {
                            ObjCVarCRM_Clients.ID = Convert.ToInt32(Com.Parameters["@ID"].Value);
                        }
                        ObjCVarCRM_Clients.mIsChanges = false;
                    }
                }
            }
            catch (Exception ex)
            {
                Exp = ex;
                if (tr != null)
                    tr.Rollback();
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }
        #endregion
        #region "Update Methods"
        public Exception UpdateList(string UpdateClause)
        {

            return SetList(UpdateClause, false);
        }

        #endregion
    }
}
