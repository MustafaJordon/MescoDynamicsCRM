using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.CRM.CRM_Clients.Generated
{
    [Serializable]
    public partial class CVarvwCRMAlartFollowUp
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal String mAlarm;
        internal Int32 mAlarmDays;
        internal Int32 mUserAlarmed;
        internal Int32 mManagerAlarmed;
        internal Int32 mDifferenceDays;
        internal Int32 mID;
        internal Int32 mSalesRep;
        internal String mSalesRepName;
        internal DateTime mActionDate;
        internal Int32 mActionType_ID;
        internal String mActionName;
        internal Int32 mCRM_ClientID;
        internal String mCRM_ClientName;
        internal Int32 mNextActionStatue_ID;
        internal String mNextActionStatueName;
        #endregion

        #region "Methods"
        public String Alarm
        {
            get { return mAlarm; }
            set { mAlarm = value; }
        }
        public Int32 AlarmDays
        {
            get { return mAlarmDays; }
            set { mAlarmDays = value; }
        }
        public Int32 UserAlarmed
        {
            get { return mUserAlarmed; }
            set { mUserAlarmed = value; }
        }
        public Int32 ManagerAlarmed
        {
            get { return mManagerAlarmed; }
            set { mManagerAlarmed = value; }
        }
        public Int32 DifferenceDays
        {
            get { return mDifferenceDays; }
            set { mDifferenceDays = value; }
        }
        public Int32 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        public Int32 SalesRep
        {
            get { return mSalesRep; }
            set { mSalesRep = value; }
        }
        public String SalesRepName
        {
            get { return mSalesRepName; }
            set { mSalesRepName = value; }
        }
        public DateTime ActionDate
        {
            get { return mActionDate; }
            set { mActionDate = value; }
        }
        public Int32 ActionType_ID
        {
            get { return mActionType_ID; }
            set { mActionType_ID = value; }
        }
        public String ActionName
        {
            get { return mActionName; }
            set { mActionName = value; }
        }
        public Int32 CRM_ClientID
        {
            get { return mCRM_ClientID; }
            set { mCRM_ClientID = value; }
        }
        public String CRM_ClientName
        {
            get { return mCRM_ClientName; }
            set { mCRM_ClientName = value; }
        }
        public Int32 NextActionStatue_ID
        {
            get { return mNextActionStatue_ID; }
            set { mNextActionStatue_ID = value; }
        }
        public String NextActionStatueName
        {
            get { return mNextActionStatueName; }
            set { mNextActionStatueName = value; }
        }
        #endregion
    }

    public partial class CvwCRMAlartFollowUp
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwCRMAlartFollowUp> lstCVarvwCRMAlartFollowUp = new List<CVarvwCRMAlartFollowUp>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwCRMAlartFollowUp.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.VarChar));
                    Com.CommandText = "[dbo].GetListvwCRMAlartFollowUp";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwCRMAlartFollowUp ObjCVarvwCRMAlartFollowUp = new CVarvwCRMAlartFollowUp();
                        ObjCVarvwCRMAlartFollowUp.mAlarm = Convert.ToString(dr["Alarm"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mAlarmDays = Convert.ToInt32(dr["AlarmDays"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mUserAlarmed = Convert.ToInt32(dr["UserAlarmed"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mManagerAlarmed = Convert.ToInt32(dr["ManagerAlarmed"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mDifferenceDays = Convert.ToInt32(dr["DifferenceDays"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mSalesRep = Convert.ToInt32(dr["SalesRep"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mSalesRepName = Convert.ToString(dr["SalesRepName"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mActionDate = Convert.ToDateTime(dr["ActionDate"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mActionType_ID = Convert.ToInt32(dr["ActionType_ID"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mActionName = Convert.ToString(dr["ActionName"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mCRM_ClientID = Convert.ToInt32(dr["CRM_ClientID"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mCRM_ClientName = Convert.ToString(dr["CRM_ClientName"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mNextActionStatue_ID = Convert.ToInt32(dr["NextActionStatue_ID"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mNextActionStatueName = Convert.ToString(dr["NextActionStatueName"].ToString());
                        lstCVarvwCRMAlartFollowUp.Add(ObjCVarvwCRMAlartFollowUp);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwCRMAlartFollowUp.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.VarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwCRMAlartFollowUp";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwCRMAlartFollowUp ObjCVarvwCRMAlartFollowUp = new CVarvwCRMAlartFollowUp();
                        ObjCVarvwCRMAlartFollowUp.mAlarm = Convert.ToString(dr["Alarm"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mAlarmDays = Convert.ToInt32(dr["AlarmDays"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mUserAlarmed = Convert.ToInt32(dr["UserAlarmed"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mManagerAlarmed = Convert.ToInt32(dr["ManagerAlarmed"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mDifferenceDays = Convert.ToInt32(dr["DifferenceDays"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mSalesRep = Convert.ToInt32(dr["SalesRep"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mSalesRepName = Convert.ToString(dr["SalesRepName"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mActionDate = Convert.ToDateTime(dr["ActionDate"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mActionType_ID = Convert.ToInt32(dr["ActionType_ID"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mActionName = Convert.ToString(dr["ActionName"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mCRM_ClientID = Convert.ToInt32(dr["CRM_ClientID"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mCRM_ClientName = Convert.ToString(dr["CRM_ClientName"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mNextActionStatue_ID = Convert.ToInt32(dr["NextActionStatue_ID"].ToString());
                        ObjCVarvwCRMAlartFollowUp.mNextActionStatueName = Convert.ToString(dr["NextActionStatueName"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwCRMAlartFollowUp.Add(ObjCVarvwCRMAlartFollowUp);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }
}
