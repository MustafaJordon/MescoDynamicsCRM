using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.MasterData.Locations.Generated
{
    [Serializable]
    public partial class CVarvwLM_Domestic_AWB
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal Int32 mID;
        internal String mAWBNumber;
        internal Int32 mShipperID;
        internal String mShipperName;
        internal Int32 mConsigneeID;
        internal Decimal mActWgt;
        internal Decimal mDimWgt;
        internal Decimal mChgWgt;
        internal Decimal mPcs;
        internal Decimal mCODAmount;
        internal String mDescription;
        internal String mRemarks;
        internal DateTime mcreationDate;
        internal Int32 mCreatorUserID;
        internal String mConsigneeName;
        internal Int32 mConsigneeCityID;
        internal Int32 mConsigneeRegionID;
        internal String mConsigneePhone1;
        internal String mConsigneePhone2;
        internal String mConsigneeCompanyName;
        internal String mConsigneeSenderName;
        internal String mConsigneeAccountNo;
        internal String mConsigneeCity;
        internal String mConsigneeAddress;
        internal String mShipperName_AWB;
        internal Int32 mShipperCityID;
        internal Int32 mShipperRegionID;
        internal String mShipperPhone1;
        internal String mShipperPhone2;
        internal String mShipperCompanyName;
        internal String mShipperSenderName;
        internal String mShipperAccountNo;
        internal String mShipperCity;
        internal String mShipperAddress;
        internal Int32 mPaymentTypeID;
        internal Int32 mStoreID;
        internal String mStoreName;
        internal String mPickupAddress;
        internal DateTime mEstimatedReceivedDate_Custody;
        internal DateTime mActualReceivedDate_Custody;
        internal DateTime mEstimatedArrivalDateToStore;
        internal DateTime mActualArrivalDateToStore;
        internal DateTime mEstimatedDeliveryDateFrom;
        internal DateTime mEstimatedDeliveryDateTo;
        internal DateTime mActualDeliveryDate;
        internal Int32 mTrackingStageID;
        internal String mTrackingStageName;
        internal Int32 mTrackingStageOrder;
        internal Int32 mRunnerFromShipperID;
        internal String mRunnerFromShipperName;
        internal Int32 mRunnerToConsigneeID;
        internal String mRunnerToConsigneeName;
        internal Boolean mIsClosed;
        internal Int32 mRateID;
        internal Int32 mPackageTypeID;
        internal Decimal mQuantity;
        internal Decimal mSellingAmount;
        internal String mRateDetails;
        internal Decimal mCommodityFees;
        #endregion

        #region "Methods"
        public Int32 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        public String AWBNumber
        {
            get { return mAWBNumber; }
            set { mAWBNumber = value; }
        }
        public Int32 ShipperID
        {
            get { return mShipperID; }
            set { mShipperID = value; }
        }
        public String ShipperName
        {
            get { return mShipperName; }
            set { mShipperName = value; }
        }
        public Int32 ConsigneeID
        {
            get { return mConsigneeID; }
            set { mConsigneeID = value; }
        }
        public Decimal ActWgt
        {
            get { return mActWgt; }
            set { mActWgt = value; }
        }
        public Decimal DimWgt
        {
            get { return mDimWgt; }
            set { mDimWgt = value; }
        }
        public Decimal ChgWgt
        {
            get { return mChgWgt; }
            set { mChgWgt = value; }
        }
        public Decimal Pcs
        {
            get { return mPcs; }
            set { mPcs = value; }
        }
        public Decimal CODAmount
        {
            get { return mCODAmount; }
            set { mCODAmount = value; }
        }
        public String Description
        {
            get { return mDescription; }
            set { mDescription = value; }
        }
        public String Remarks
        {
            get { return mRemarks; }
            set { mRemarks = value; }
        }
        public DateTime creationDate
        {
            get { return mcreationDate; }
            set { mcreationDate = value; }
        }
        public Int32 CreatorUserID
        {
            get { return mCreatorUserID; }
            set { mCreatorUserID = value; }
        }
        public String ConsigneeName
        {
            get { return mConsigneeName; }
            set { mConsigneeName = value; }
        }
        public Int32 ConsigneeCityID
        {
            get { return mConsigneeCityID; }
            set { mConsigneeCityID = value; }
        }
        public Int32 ConsigneeRegionID
        {
            get { return mConsigneeRegionID; }
            set { mConsigneeRegionID = value; }
        }
        public String ConsigneePhone1
        {
            get { return mConsigneePhone1; }
            set { mConsigneePhone1 = value; }
        }
        public String ConsigneePhone2
        {
            get { return mConsigneePhone2; }
            set { mConsigneePhone2 = value; }
        }
        public String ConsigneeCompanyName
        {
            get { return mConsigneeCompanyName; }
            set { mConsigneeCompanyName = value; }
        }
        public String ConsigneeSenderName
        {
            get { return mConsigneeSenderName; }
            set { mConsigneeSenderName = value; }
        }
        public String ConsigneeAccountNo
        {
            get { return mConsigneeAccountNo; }
            set { mConsigneeAccountNo = value; }
        }
        public String ConsigneeCity
        {
            get { return mConsigneeCity; }
            set { mConsigneeCity = value; }
        }
        public String ConsigneeAddress
        {
            get { return mConsigneeAddress; }
            set { mConsigneeAddress = value; }
        }
        public String ShipperName_AWB
        {
            get { return mShipperName_AWB; }
            set { mShipperName_AWB = value; }
        }
        public Int32 ShipperCityID
        {
            get { return mShipperCityID; }
            set { mShipperCityID = value; }
        }
        public Int32 ShipperRegionID
        {
            get { return mShipperRegionID; }
            set { mShipperRegionID = value; }
        }
        public String ShipperPhone1
        {
            get { return mShipperPhone1; }
            set { mShipperPhone1 = value; }
        }
        public String ShipperPhone2
        {
            get { return mShipperPhone2; }
            set { mShipperPhone2 = value; }
        }
        public String ShipperCompanyName
        {
            get { return mShipperCompanyName; }
            set { mShipperCompanyName = value; }
        }
        public String ShipperSenderName
        {
            get { return mShipperSenderName; }
            set { mShipperSenderName = value; }
        }
        public String ShipperAccountNo
        {
            get { return mShipperAccountNo; }
            set { mShipperAccountNo = value; }
        }
        public String ShipperCity
        {
            get { return mShipperCity; }
            set { mShipperCity = value; }
        }
        public String ShipperAddress
        {
            get { return mShipperAddress; }
            set { mShipperAddress = value; }
        }
        public Int32 PaymentTypeID
        {
            get { return mPaymentTypeID; }
            set { mPaymentTypeID = value; }
        }
        public Int32 StoreID
        {
            get { return mStoreID; }
            set { mStoreID = value; }
        }
        public String StoreName
        {
            get { return mStoreName; }
            set { mStoreName = value; }
        }
        public String PickupAddress
        {
            get { return mPickupAddress; }
            set { mPickupAddress = value; }
        }
        public DateTime EstimatedReceivedDate_Custody
        {
            get { return mEstimatedReceivedDate_Custody; }
            set { mEstimatedReceivedDate_Custody = value; }
        }
        public DateTime ActualReceivedDate_Custody
        {
            get { return mActualReceivedDate_Custody; }
            set { mActualReceivedDate_Custody = value; }
        }
        public DateTime EstimatedArrivalDateToStore
        {
            get { return mEstimatedArrivalDateToStore; }
            set { mEstimatedArrivalDateToStore = value; }
        }
        public DateTime ActualArrivalDateToStore
        {
            get { return mActualArrivalDateToStore; }
            set { mActualArrivalDateToStore = value; }
        }
        public DateTime EstimatedDeliveryDateFrom
        {
            get { return mEstimatedDeliveryDateFrom; }
            set { mEstimatedDeliveryDateFrom = value; }
        }
        public DateTime EstimatedDeliveryDateTo
        {
            get { return mEstimatedDeliveryDateTo; }
            set { mEstimatedDeliveryDateTo = value; }
        }
        public DateTime ActualDeliveryDate
        {
            get { return mActualDeliveryDate; }
            set { mActualDeliveryDate = value; }
        }
        public Int32 TrackingStageID
        {
            get { return mTrackingStageID; }
            set { mTrackingStageID = value; }
        }
        public String TrackingStageName
        {
            get { return mTrackingStageName; }
            set { mTrackingStageName = value; }
        }
        public Int32 TrackingStageOrder
        {
            get { return mTrackingStageOrder; }
            set { mTrackingStageOrder = value; }
        }
        public Int32 RunnerFromShipperID
        {
            get { return mRunnerFromShipperID; }
            set { mRunnerFromShipperID = value; }
        }
        public String RunnerFromShipperName
        {
            get { return mRunnerFromShipperName; }
            set { mRunnerFromShipperName = value; }
        }
        public Int32 RunnerToConsigneeID
        {
            get { return mRunnerToConsigneeID; }
            set { mRunnerToConsigneeID = value; }
        }
        public String RunnerToConsigneeName
        {
            get { return mRunnerToConsigneeName; }
            set { mRunnerToConsigneeName = value; }
        }
        public Boolean IsClosed
        {
            get { return mIsClosed; }
            set { mIsClosed = value; }
        }
        public Int32 RateID
        {
            get { return mRateID; }
            set { mRateID = value; }
        }
        public Int32 PackageTypeID
        {
            get { return mPackageTypeID; }
            set { mPackageTypeID = value; }
        }
        public Decimal Quantity
        {
            get { return mQuantity; }
            set { mQuantity = value; }
        }
        public Decimal SellingAmount
        {
            get { return mSellingAmount; }
            set { mSellingAmount = value; }
        }
        public String RateDetails
        {
            get { return mRateDetails; }
            set { mRateDetails = value; }
        }
        public Decimal CommodityFees
        {
            get { return mCommodityFees; }
            set { mCommodityFees = value; }
        }
        #endregion
    }

    public partial class CvwLM_Domestic_AWB
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwLM_Domestic_AWB> lstCVarvwLM_Domestic_AWB = new List<CVarvwLM_Domestic_AWB>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwLM_Domestic_AWB.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.VarChar));
                    Com.CommandText = "[dbo].GetListvwLM_Domestic_AWB";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwLM_Domestic_AWB ObjCVarvwLM_Domestic_AWB = new CVarvwLM_Domestic_AWB();
                        ObjCVarvwLM_Domestic_AWB.mID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mAWBNumber = Convert.ToString(dr["AWBNumber"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperID = Convert.ToInt32(dr["ShipperID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperName = Convert.ToString(dr["ShipperName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeID = Convert.ToInt32(dr["ConsigneeID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mActWgt = Convert.ToDecimal(dr["ActWgt"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mDimWgt = Convert.ToDecimal(dr["DimWgt"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mChgWgt = Convert.ToDecimal(dr["ChgWgt"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mPcs = Convert.ToDecimal(dr["Pcs"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mCODAmount = Convert.ToDecimal(dr["CODAmount"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mDescription = Convert.ToString(dr["Description"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRemarks = Convert.ToString(dr["Remarks"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mcreationDate = Convert.ToDateTime(dr["creationDate"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeName = Convert.ToString(dr["ConsigneeName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeCityID = Convert.ToInt32(dr["ConsigneeCityID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeRegionID = Convert.ToInt32(dr["ConsigneeRegionID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneePhone1 = Convert.ToString(dr["ConsigneePhone1"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneePhone2 = Convert.ToString(dr["ConsigneePhone2"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeCompanyName = Convert.ToString(dr["ConsigneeCompanyName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeSenderName = Convert.ToString(dr["ConsigneeSenderName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeAccountNo = Convert.ToString(dr["ConsigneeAccountNo"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeCity = Convert.ToString(dr["ConsigneeCity"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeAddress = Convert.ToString(dr["ConsigneeAddress"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperName_AWB = Convert.ToString(dr["ShipperName_AWB"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperCityID = Convert.ToInt32(dr["ShipperCityID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperRegionID = Convert.ToInt32(dr["ShipperRegionID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperPhone1 = Convert.ToString(dr["ShipperPhone1"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperPhone2 = Convert.ToString(dr["ShipperPhone2"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperCompanyName = Convert.ToString(dr["ShipperCompanyName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperSenderName = Convert.ToString(dr["ShipperSenderName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperAccountNo = Convert.ToString(dr["ShipperAccountNo"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperCity = Convert.ToString(dr["ShipperCity"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperAddress = Convert.ToString(dr["ShipperAddress"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mPaymentTypeID = Convert.ToInt32(dr["PaymentTypeID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mStoreID = Convert.ToInt32(dr["StoreID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mStoreName = Convert.ToString(dr["StoreName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mPickupAddress = Convert.ToString(dr["PickupAddress"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mEstimatedReceivedDate_Custody = Convert.ToDateTime(dr["EstimatedReceivedDate_Custody"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mActualReceivedDate_Custody = Convert.ToDateTime(dr["ActualReceivedDate_Custody"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mEstimatedArrivalDateToStore = Convert.ToDateTime(dr["EstimatedArrivalDateToStore"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mActualArrivalDateToStore = Convert.ToDateTime(dr["ActualArrivalDateToStore"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mEstimatedDeliveryDateFrom = Convert.ToDateTime(dr["EstimatedDeliveryDateFrom"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mEstimatedDeliveryDateTo = Convert.ToDateTime(dr["EstimatedDeliveryDateTo"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mActualDeliveryDate = Convert.ToDateTime(dr["ActualDeliveryDate"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mTrackingStageID = Convert.ToInt32(dr["TrackingStageID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mTrackingStageName = Convert.ToString(dr["TrackingStageName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mTrackingStageOrder = Convert.ToInt32(dr["TrackingStageOrder"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRunnerFromShipperID = Convert.ToInt32(dr["RunnerFromShipperID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRunnerFromShipperName = Convert.ToString(dr["RunnerFromShipperName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRunnerToConsigneeID = Convert.ToInt32(dr["RunnerToConsigneeID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRunnerToConsigneeName = Convert.ToString(dr["RunnerToConsigneeName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mIsClosed = Convert.ToBoolean(dr["IsClosed"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRateID = Convert.ToInt32(dr["RateID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mPackageTypeID = Convert.ToInt32(dr["PackageTypeID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mQuantity = Convert.ToDecimal(dr["Quantity"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mSellingAmount = Convert.ToDecimal(dr["SellingAmount"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRateDetails = Convert.ToString(dr["RateDetails"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mCommodityFees = Convert.ToDecimal(dr["CommodityFees"].ToString());
                        lstCVarvwLM_Domestic_AWB.Add(ObjCVarvwLM_Domestic_AWB);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwLM_Domestic_AWB.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.VarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwLM_Domestic_AWB";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwLM_Domestic_AWB ObjCVarvwLM_Domestic_AWB = new CVarvwLM_Domestic_AWB();
                        ObjCVarvwLM_Domestic_AWB.mID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mAWBNumber = Convert.ToString(dr["AWBNumber"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperID = Convert.ToInt32(dr["ShipperID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperName = Convert.ToString(dr["ShipperName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeID = Convert.ToInt32(dr["ConsigneeID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mActWgt = Convert.ToDecimal(dr["ActWgt"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mDimWgt = Convert.ToDecimal(dr["DimWgt"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mChgWgt = Convert.ToDecimal(dr["ChgWgt"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mPcs = Convert.ToDecimal(dr["Pcs"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mCODAmount = Convert.ToDecimal(dr["CODAmount"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mDescription = Convert.ToString(dr["Description"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRemarks = Convert.ToString(dr["Remarks"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mcreationDate = Convert.ToDateTime(dr["creationDate"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeName = Convert.ToString(dr["ConsigneeName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeCityID = Convert.ToInt32(dr["ConsigneeCityID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeRegionID = Convert.ToInt32(dr["ConsigneeRegionID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneePhone1 = Convert.ToString(dr["ConsigneePhone1"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneePhone2 = Convert.ToString(dr["ConsigneePhone2"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeCompanyName = Convert.ToString(dr["ConsigneeCompanyName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeSenderName = Convert.ToString(dr["ConsigneeSenderName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeAccountNo = Convert.ToString(dr["ConsigneeAccountNo"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeCity = Convert.ToString(dr["ConsigneeCity"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mConsigneeAddress = Convert.ToString(dr["ConsigneeAddress"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperName_AWB = Convert.ToString(dr["ShipperName_AWB"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperCityID = Convert.ToInt32(dr["ShipperCityID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperRegionID = Convert.ToInt32(dr["ShipperRegionID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperPhone1 = Convert.ToString(dr["ShipperPhone1"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperPhone2 = Convert.ToString(dr["ShipperPhone2"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperCompanyName = Convert.ToString(dr["ShipperCompanyName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperSenderName = Convert.ToString(dr["ShipperSenderName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperAccountNo = Convert.ToString(dr["ShipperAccountNo"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperCity = Convert.ToString(dr["ShipperCity"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mShipperAddress = Convert.ToString(dr["ShipperAddress"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mPaymentTypeID = Convert.ToInt32(dr["PaymentTypeID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mStoreID = Convert.ToInt32(dr["StoreID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mStoreName = Convert.ToString(dr["StoreName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mPickupAddress = Convert.ToString(dr["PickupAddress"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mEstimatedReceivedDate_Custody = Convert.ToDateTime(dr["EstimatedReceivedDate_Custody"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mActualReceivedDate_Custody = Convert.ToDateTime(dr["ActualReceivedDate_Custody"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mEstimatedArrivalDateToStore = Convert.ToDateTime(dr["EstimatedArrivalDateToStore"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mActualArrivalDateToStore = Convert.ToDateTime(dr["ActualArrivalDateToStore"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mEstimatedDeliveryDateFrom = Convert.ToDateTime(dr["EstimatedDeliveryDateFrom"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mEstimatedDeliveryDateTo = Convert.ToDateTime(dr["EstimatedDeliveryDateTo"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mActualDeliveryDate = Convert.ToDateTime(dr["ActualDeliveryDate"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mTrackingStageID = Convert.ToInt32(dr["TrackingStageID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mTrackingStageName = Convert.ToString(dr["TrackingStageName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mTrackingStageOrder = Convert.ToInt32(dr["TrackingStageOrder"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRunnerFromShipperID = Convert.ToInt32(dr["RunnerFromShipperID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRunnerFromShipperName = Convert.ToString(dr["RunnerFromShipperName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRunnerToConsigneeID = Convert.ToInt32(dr["RunnerToConsigneeID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRunnerToConsigneeName = Convert.ToString(dr["RunnerToConsigneeName"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mIsClosed = Convert.ToBoolean(dr["IsClosed"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRateID = Convert.ToInt32(dr["RateID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mPackageTypeID = Convert.ToInt32(dr["PackageTypeID"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mQuantity = Convert.ToDecimal(dr["Quantity"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mSellingAmount = Convert.ToDecimal(dr["SellingAmount"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mRateDetails = Convert.ToString(dr["RateDetails"].ToString());
                        ObjCVarvwLM_Domestic_AWB.mCommodityFees = Convert.ToDecimal(dr["CommodityFees"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwLM_Domestic_AWB.Add(ObjCVarvwLM_Domestic_AWB);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }
}
