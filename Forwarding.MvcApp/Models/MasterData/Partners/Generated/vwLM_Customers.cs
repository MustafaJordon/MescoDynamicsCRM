using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.MasterData.Partners.Generated
{
    [Serializable]
    public partial class CVarvwLM_Customers
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal Int32 mID;
        internal Int32 mCode;
        internal String mName;
        internal String mLocalName;
        internal Int32 mSalesmanID;
        internal String mWebsite;
        internal String mEmail;
        internal Boolean mIsConsignee;
        internal Boolean mIsShipper;
        internal Boolean mIsInternalCustomer;
        internal Boolean mIsInactive;
        internal String mNotes;
        internal String mVATNumber;
        internal Int32 mPaymentTermID;
        internal Int32 mCurrencyID;
        internal Int32 mTaxeTypeID;
        internal String mBankName;
        internal String mBankAddress;
        internal String mSwift;
        internal String mBankAccountNumber;
        internal String mIBANNumber;
        internal Int32 mManagerRoleID;
        internal Int32 mAdministratorRoleID;
        internal Int32 mCreatorUserID;
        internal DateTime mCreationDate;
        internal Int32 mModificatorUserID;
        internal DateTime mModificationDate;
        internal Boolean mIsDeleted;
        internal Int32 mAccountID;
        internal Int32 mSubAccountID;
        internal Int32 mCostCenterID;
        internal Int32 mSubAccountGroupID;
        internal String mAddress;
        internal String mPhonesAndFaxes;
        internal Int32 mSalesLeadID;
        internal Int32 mEmailOptionAging;
        internal Int32 mCategoryID;
        internal Boolean mIsExternal;
        internal String mCompanyName;
        internal String mSenderName;
        internal String mAccountNo;
        internal Int32 mCityID;
        internal Int32 mRegionID;
        internal String mStreetLine1;
        internal String mPhone1;
        internal String mPhone2;
        #endregion

        #region "Methods"
        public Int32 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        public Int32 Code
        {
            get { return mCode; }
            set { mCode = value; }
        }
        public String Name
        {
            get { return mName; }
            set { mName = value; }
        }
        public String LocalName
        {
            get { return mLocalName; }
            set { mLocalName = value; }
        }
        public Int32 SalesmanID
        {
            get { return mSalesmanID; }
            set { mSalesmanID = value; }
        }
        public String Website
        {
            get { return mWebsite; }
            set { mWebsite = value; }
        }
        public String Email
        {
            get { return mEmail; }
            set { mEmail = value; }
        }
        public Boolean IsConsignee
        {
            get { return mIsConsignee; }
            set { mIsConsignee = value; }
        }
        public Boolean IsShipper
        {
            get { return mIsShipper; }
            set { mIsShipper = value; }
        }
        public Boolean IsInternalCustomer
        {
            get { return mIsInternalCustomer; }
            set { mIsInternalCustomer = value; }
        }
        public Boolean IsInactive
        {
            get { return mIsInactive; }
            set { mIsInactive = value; }
        }
        public String Notes
        {
            get { return mNotes; }
            set { mNotes = value; }
        }
        public String VATNumber
        {
            get { return mVATNumber; }
            set { mVATNumber = value; }
        }
        public Int32 PaymentTermID
        {
            get { return mPaymentTermID; }
            set { mPaymentTermID = value; }
        }
        public Int32 CurrencyID
        {
            get { return mCurrencyID; }
            set { mCurrencyID = value; }
        }
        public Int32 TaxeTypeID
        {
            get { return mTaxeTypeID; }
            set { mTaxeTypeID = value; }
        }
        public String BankName
        {
            get { return mBankName; }
            set { mBankName = value; }
        }
        public String BankAddress
        {
            get { return mBankAddress; }
            set { mBankAddress = value; }
        }
        public String Swift
        {
            get { return mSwift; }
            set { mSwift = value; }
        }
        public String BankAccountNumber
        {
            get { return mBankAccountNumber; }
            set { mBankAccountNumber = value; }
        }
        public String IBANNumber
        {
            get { return mIBANNumber; }
            set { mIBANNumber = value; }
        }
        public Int32 ManagerRoleID
        {
            get { return mManagerRoleID; }
            set { mManagerRoleID = value; }
        }
        public Int32 AdministratorRoleID
        {
            get { return mAdministratorRoleID; }
            set { mAdministratorRoleID = value; }
        }
        public Int32 CreatorUserID
        {
            get { return mCreatorUserID; }
            set { mCreatorUserID = value; }
        }
        public DateTime CreationDate
        {
            get { return mCreationDate; }
            set { mCreationDate = value; }
        }
        public Int32 ModificatorUserID
        {
            get { return mModificatorUserID; }
            set { mModificatorUserID = value; }
        }
        public DateTime ModificationDate
        {
            get { return mModificationDate; }
            set { mModificationDate = value; }
        }
        public Boolean IsDeleted
        {
            get { return mIsDeleted; }
            set { mIsDeleted = value; }
        }
        public Int32 AccountID
        {
            get { return mAccountID; }
            set { mAccountID = value; }
        }
        public Int32 SubAccountID
        {
            get { return mSubAccountID; }
            set { mSubAccountID = value; }
        }
        public Int32 CostCenterID
        {
            get { return mCostCenterID; }
            set { mCostCenterID = value; }
        }
        public Int32 SubAccountGroupID
        {
            get { return mSubAccountGroupID; }
            set { mSubAccountGroupID = value; }
        }
        public String Address
        {
            get { return mAddress; }
            set { mAddress = value; }
        }
        public String PhonesAndFaxes
        {
            get { return mPhonesAndFaxes; }
            set { mPhonesAndFaxes = value; }
        }
        public Int32 SalesLeadID
        {
            get { return mSalesLeadID; }
            set { mSalesLeadID = value; }
        }
        public Int32 EmailOptionAging
        {
            get { return mEmailOptionAging; }
            set { mEmailOptionAging = value; }
        }
        public Int32 CategoryID
        {
            get { return mCategoryID; }
            set { mCategoryID = value; }
        }
        public Boolean IsExternal
        {
            get { return mIsExternal; }
            set { mIsExternal = value; }
        }
        public String CompanyName
        {
            get { return mCompanyName; }
            set { mCompanyName = value; }
        }
        public String SenderName
        {
            get { return mSenderName; }
            set { mSenderName = value; }
        }
        public String AccountNo
        {
            get { return mAccountNo; }
            set { mAccountNo = value; }
        }
        public Int32 CityID
        {
            get { return mCityID; }
            set { mCityID = value; }
        }
        public Int32 RegionID
        {
            get { return mRegionID; }
            set { mRegionID = value; }
        }
        public String StreetLine1
        {
            get { return mStreetLine1; }
            set { mStreetLine1 = value; }
        }
        public String Phone1
        {
            get { return mPhone1; }
            set { mPhone1 = value; }
        }
        public String Phone2
        {
            get { return mPhone2; }
            set { mPhone2 = value; }
        }
        #endregion
    }

    public partial class CvwLM_Customers
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwLM_Customers> lstCVarvwLM_Customers = new List<CVarvwLM_Customers>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwLM_Customers.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.VarChar));
                    Com.CommandText = "[dbo].GetListvwLM_Customers";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwLM_Customers ObjCVarvwLM_Customers = new CVarvwLM_Customers();
                        ObjCVarvwLM_Customers.mID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarvwLM_Customers.mCode = Convert.ToInt32(dr["Code"].ToString());
                        ObjCVarvwLM_Customers.mName = Convert.ToString(dr["Name"].ToString());
                        ObjCVarvwLM_Customers.mLocalName = Convert.ToString(dr["LocalName"].ToString());
                        ObjCVarvwLM_Customers.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarvwLM_Customers.mWebsite = Convert.ToString(dr["Website"].ToString());
                        ObjCVarvwLM_Customers.mEmail = Convert.ToString(dr["Email"].ToString());
                        ObjCVarvwLM_Customers.mIsConsignee = Convert.ToBoolean(dr["IsConsignee"].ToString());
                        ObjCVarvwLM_Customers.mIsShipper = Convert.ToBoolean(dr["IsShipper"].ToString());
                        ObjCVarvwLM_Customers.mIsInternalCustomer = Convert.ToBoolean(dr["IsInternalCustomer"].ToString());
                        ObjCVarvwLM_Customers.mIsInactive = Convert.ToBoolean(dr["IsInactive"].ToString());
                        ObjCVarvwLM_Customers.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwLM_Customers.mVATNumber = Convert.ToString(dr["VATNumber"].ToString());
                        ObjCVarvwLM_Customers.mPaymentTermID = Convert.ToInt32(dr["PaymentTermID"].ToString());
                        ObjCVarvwLM_Customers.mCurrencyID = Convert.ToInt32(dr["CurrencyID"].ToString());
                        ObjCVarvwLM_Customers.mTaxeTypeID = Convert.ToInt32(dr["TaxeTypeID"].ToString());
                        ObjCVarvwLM_Customers.mBankName = Convert.ToString(dr["BankName"].ToString());
                        ObjCVarvwLM_Customers.mBankAddress = Convert.ToString(dr["BankAddress"].ToString());
                        ObjCVarvwLM_Customers.mSwift = Convert.ToString(dr["Swift"].ToString());
                        ObjCVarvwLM_Customers.mBankAccountNumber = Convert.ToString(dr["BankAccountNumber"].ToString());
                        ObjCVarvwLM_Customers.mIBANNumber = Convert.ToString(dr["IBANNumber"].ToString());
                        ObjCVarvwLM_Customers.mManagerRoleID = Convert.ToInt32(dr["ManagerRoleID"].ToString());
                        ObjCVarvwLM_Customers.mAdministratorRoleID = Convert.ToInt32(dr["AdministratorRoleID"].ToString());
                        ObjCVarvwLM_Customers.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwLM_Customers.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwLM_Customers.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwLM_Customers.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarvwLM_Customers.mIsDeleted = Convert.ToBoolean(dr["IsDeleted"].ToString());
                        ObjCVarvwLM_Customers.mAccountID = Convert.ToInt32(dr["AccountID"].ToString());
                        ObjCVarvwLM_Customers.mSubAccountID = Convert.ToInt32(dr["SubAccountID"].ToString());
                        ObjCVarvwLM_Customers.mCostCenterID = Convert.ToInt32(dr["CostCenterID"].ToString());
                        ObjCVarvwLM_Customers.mSubAccountGroupID = Convert.ToInt32(dr["SubAccountGroupID"].ToString());
                        ObjCVarvwLM_Customers.mAddress = Convert.ToString(dr["Address"].ToString());
                        ObjCVarvwLM_Customers.mPhonesAndFaxes = Convert.ToString(dr["PhonesAndFaxes"].ToString());
                        ObjCVarvwLM_Customers.mSalesLeadID = Convert.ToInt32(dr["SalesLeadID"].ToString());
                        ObjCVarvwLM_Customers.mEmailOptionAging = Convert.ToInt32(dr["EmailOptionAging"].ToString());
                        ObjCVarvwLM_Customers.mCategoryID = Convert.ToInt32(dr["CategoryID"].ToString());
                        ObjCVarvwLM_Customers.mIsExternal = Convert.ToBoolean(dr["IsExternal"].ToString());
                        ObjCVarvwLM_Customers.mCompanyName = Convert.ToString(dr["CompanyName"].ToString());
                        ObjCVarvwLM_Customers.mSenderName = Convert.ToString(dr["SenderName"].ToString());
                        ObjCVarvwLM_Customers.mAccountNo = Convert.ToString(dr["AccountNo"].ToString());
                        ObjCVarvwLM_Customers.mCityID = Convert.ToInt32(dr["CityID"].ToString());
                        ObjCVarvwLM_Customers.mRegionID = Convert.ToInt32(dr["RegionID"].ToString());
                        ObjCVarvwLM_Customers.mStreetLine1 = Convert.ToString(dr["StreetLine1"].ToString());
                        ObjCVarvwLM_Customers.mPhone1 = Convert.ToString(dr["Phone1"].ToString());
                        ObjCVarvwLM_Customers.mPhone2 = Convert.ToString(dr["Phone2"].ToString());
                        lstCVarvwLM_Customers.Add(ObjCVarvwLM_Customers);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwLM_Customers.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.VarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwLM_Customers";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwLM_Customers ObjCVarvwLM_Customers = new CVarvwLM_Customers();
                        ObjCVarvwLM_Customers.mID = Convert.ToInt32(dr["ID"].ToString());
                        ObjCVarvwLM_Customers.mCode = Convert.ToInt32(dr["Code"].ToString());
                        ObjCVarvwLM_Customers.mName = Convert.ToString(dr["Name"].ToString());
                        ObjCVarvwLM_Customers.mLocalName = Convert.ToString(dr["LocalName"].ToString());
                        ObjCVarvwLM_Customers.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarvwLM_Customers.mWebsite = Convert.ToString(dr["Website"].ToString());
                        ObjCVarvwLM_Customers.mEmail = Convert.ToString(dr["Email"].ToString());
                        ObjCVarvwLM_Customers.mIsConsignee = Convert.ToBoolean(dr["IsConsignee"].ToString());
                        ObjCVarvwLM_Customers.mIsShipper = Convert.ToBoolean(dr["IsShipper"].ToString());
                        ObjCVarvwLM_Customers.mIsInternalCustomer = Convert.ToBoolean(dr["IsInternalCustomer"].ToString());
                        ObjCVarvwLM_Customers.mIsInactive = Convert.ToBoolean(dr["IsInactive"].ToString());
                        ObjCVarvwLM_Customers.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwLM_Customers.mVATNumber = Convert.ToString(dr["VATNumber"].ToString());
                        ObjCVarvwLM_Customers.mPaymentTermID = Convert.ToInt32(dr["PaymentTermID"].ToString());
                        ObjCVarvwLM_Customers.mCurrencyID = Convert.ToInt32(dr["CurrencyID"].ToString());
                        ObjCVarvwLM_Customers.mTaxeTypeID = Convert.ToInt32(dr["TaxeTypeID"].ToString());
                        ObjCVarvwLM_Customers.mBankName = Convert.ToString(dr["BankName"].ToString());
                        ObjCVarvwLM_Customers.mBankAddress = Convert.ToString(dr["BankAddress"].ToString());
                        ObjCVarvwLM_Customers.mSwift = Convert.ToString(dr["Swift"].ToString());
                        ObjCVarvwLM_Customers.mBankAccountNumber = Convert.ToString(dr["BankAccountNumber"].ToString());
                        ObjCVarvwLM_Customers.mIBANNumber = Convert.ToString(dr["IBANNumber"].ToString());
                        ObjCVarvwLM_Customers.mManagerRoleID = Convert.ToInt32(dr["ManagerRoleID"].ToString());
                        ObjCVarvwLM_Customers.mAdministratorRoleID = Convert.ToInt32(dr["AdministratorRoleID"].ToString());
                        ObjCVarvwLM_Customers.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwLM_Customers.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwLM_Customers.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwLM_Customers.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarvwLM_Customers.mIsDeleted = Convert.ToBoolean(dr["IsDeleted"].ToString());
                        ObjCVarvwLM_Customers.mAccountID = Convert.ToInt32(dr["AccountID"].ToString());
                        ObjCVarvwLM_Customers.mSubAccountID = Convert.ToInt32(dr["SubAccountID"].ToString());
                        ObjCVarvwLM_Customers.mCostCenterID = Convert.ToInt32(dr["CostCenterID"].ToString());
                        ObjCVarvwLM_Customers.mSubAccountGroupID = Convert.ToInt32(dr["SubAccountGroupID"].ToString());
                        ObjCVarvwLM_Customers.mAddress = Convert.ToString(dr["Address"].ToString());
                        ObjCVarvwLM_Customers.mPhonesAndFaxes = Convert.ToString(dr["PhonesAndFaxes"].ToString());
                        ObjCVarvwLM_Customers.mSalesLeadID = Convert.ToInt32(dr["SalesLeadID"].ToString());
                        ObjCVarvwLM_Customers.mEmailOptionAging = Convert.ToInt32(dr["EmailOptionAging"].ToString());
                        ObjCVarvwLM_Customers.mCategoryID = Convert.ToInt32(dr["CategoryID"].ToString());
                        ObjCVarvwLM_Customers.mIsExternal = Convert.ToBoolean(dr["IsExternal"].ToString());
                        ObjCVarvwLM_Customers.mCompanyName = Convert.ToString(dr["CompanyName"].ToString());
                        ObjCVarvwLM_Customers.mSenderName = Convert.ToString(dr["SenderName"].ToString());
                        ObjCVarvwLM_Customers.mAccountNo = Convert.ToString(dr["AccountNo"].ToString());
                        ObjCVarvwLM_Customers.mCityID = Convert.ToInt32(dr["CityID"].ToString());
                        ObjCVarvwLM_Customers.mRegionID = Convert.ToInt32(dr["RegionID"].ToString());
                        ObjCVarvwLM_Customers.mStreetLine1 = Convert.ToString(dr["StreetLine1"].ToString());
                        ObjCVarvwLM_Customers.mPhone1 = Convert.ToString(dr["Phone1"].ToString());
                        ObjCVarvwLM_Customers.mPhone2 = Convert.ToString(dr["Phone2"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwLM_Customers.Add(ObjCVarvwLM_Customers);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }
}
