using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.WebSite.Generated
{
    [Serializable]
    public partial class CVarvwOperationsForWebSite
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal Int64 mID;
        internal Int64 mQuotationRouteID;
        internal String mCode;
        internal String mCodeWithoutDashes;
        internal Int32 mCodeSerial;
        internal Int32 mBranchID;
        internal Int32 mSalesmanID;
        internal Int32 mOperationManID;
        internal Int32 mBLType;
        internal Int32 mOpenYear;
        internal String mBLTypeIconName;
        internal String mBLTypeIconStyle;
        internal Int32 mDirectionType;
        internal String mDirectionIconName;
        internal String mDirectionIconStyle;
        internal Int32 mTransportType;
        internal String mTransportIconName;
        internal String mTransportIconStyle;
        internal Int32 mShipmentType;
        internal String mContainerNumber;
        internal String mPOLCountryCode;
        internal String mPOLCountryName;
        internal String mPOLCode;
        internal String mPOLName;
        internal String mPODCountryCode;
        internal String mPODCountryName;
        internal String mLineName;
        internal String mLineWebsite;
        internal String mMasterOperationCode;
        internal Int32 mMasterOperationCodeSerial;
        internal String mAirlineCode;
        internal String mAirlineName;
        internal String mAirlinePrefix;
        internal Int32 mTruckerCode;
        internal String mRepBLTypeShown;
        internal String mRepDirectionTypeShown;
        internal String mBookingNumbers;
        internal String mCustomerReference;
        internal String mCC_CertificateNumber;
        internal String mCertificateNumber;
        internal String mCCAInvoiceNumber;
        internal String mCertificateValue;
        internal String mMasterBL;
        internal String mContainerTypes;
        internal String mPackageTypes;
        internal DateTime mETAPOLDate;
        internal DateTime mATAPOLDate;
        internal DateTime mExpectedDeparture;
        internal DateTime mActualDeparture;
        internal DateTime mExpectedArrival;
        internal DateTime mActualArrival;
        internal String mContainerNumbers;
        internal String mTrackingStageName;
        internal String mTruckingStages;
        internal String mCCTruckingStages;
        internal String mClientName;
        internal Int32 mClientID;
        internal String mPODCode;
        internal String mPODName;
        internal String mACIDNumber;
        #endregion

        #region "Methods"
        public Int64 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        public Int64 QuotationRouteID
        {
            get { return mQuotationRouteID; }
            set { mQuotationRouteID = value; }
        }
        public String Code
        {
            get { return mCode; }
            set { mCode = value; }
        }
        public String CodeWithoutDashes
        {
            get { return mCodeWithoutDashes; }
            set { mCodeWithoutDashes = value; }
        }
        public Int32 CodeSerial
        {
            get { return mCodeSerial; }
            set { mCodeSerial = value; }
        }
        public Int32 BranchID
        {
            get { return mBranchID; }
            set { mBranchID = value; }
        }
        public Int32 SalesmanID
        {
            get { return mSalesmanID; }
            set { mSalesmanID = value; }
        }
        public Int32 OperationManID
        {
            get { return mOperationManID; }
            set { mOperationManID = value; }
        }
        public Int32 BLType
        {
            get { return mBLType; }
            set { mBLType = value; }
        }
        public Int32 OpenYear
        {
            get { return mOpenYear; }
            set { mOpenYear = value; }
        }
        public String BLTypeIconName
        {
            get { return mBLTypeIconName; }
            set { mBLTypeIconName = value; }
        }
        public String BLTypeIconStyle
        {
            get { return mBLTypeIconStyle; }
            set { mBLTypeIconStyle = value; }
        }
        public Int32 DirectionType
        {
            get { return mDirectionType; }
            set { mDirectionType = value; }
        }
        public String DirectionIconName
        {
            get { return mDirectionIconName; }
            set { mDirectionIconName = value; }
        }
        public String DirectionIconStyle
        {
            get { return mDirectionIconStyle; }
            set { mDirectionIconStyle = value; }
        }
        public Int32 TransportType
        {
            get { return mTransportType; }
            set { mTransportType = value; }
        }
        public String TransportIconName
        {
            get { return mTransportIconName; }
            set { mTransportIconName = value; }
        }
        public String TransportIconStyle
        {
            get { return mTransportIconStyle; }
            set { mTransportIconStyle = value; }
        }
        public Int32 ShipmentType
        {
            get { return mShipmentType; }
            set { mShipmentType = value; }
        }
        public String ContainerNumber
        {
            get { return mContainerNumber; }
            set { mContainerNumber = value; }
        }
        public String POLCountryCode
        {
            get { return mPOLCountryCode; }
            set { mPOLCountryCode = value; }
        }
        public String POLCountryName
        {
            get { return mPOLCountryName; }
            set { mPOLCountryName = value; }
        }
        public String POLCode
        {
            get { return mPOLCode; }
            set { mPOLCode = value; }
        }
        public String POLName
        {
            get { return mPOLName; }
            set { mPOLName = value; }
        }
        public String PODCountryCode
        {
            get { return mPODCountryCode; }
            set { mPODCountryCode = value; }
        }
        public String PODCountryName
        {
            get { return mPODCountryName; }
            set { mPODCountryName = value; }
        }
        public String LineName
        {
            get { return mLineName; }
            set { mLineName = value; }
        }
        public String LineWebsite
        {
            get { return mLineWebsite; }
            set { mLineWebsite = value; }
        }
        public String MasterOperationCode
        {
            get { return mMasterOperationCode; }
            set { mMasterOperationCode = value; }
        }
        public Int32 MasterOperationCodeSerial
        {
            get { return mMasterOperationCodeSerial; }
            set { mMasterOperationCodeSerial = value; }
        }
        public String AirlineCode
        {
            get { return mAirlineCode; }
            set { mAirlineCode = value; }
        }
        public String AirlineName
        {
            get { return mAirlineName; }
            set { mAirlineName = value; }
        }
        public String AirlinePrefix
        {
            get { return mAirlinePrefix; }
            set { mAirlinePrefix = value; }
        }
        public Int32 TruckerCode
        {
            get { return mTruckerCode; }
            set { mTruckerCode = value; }
        }
        public String RepBLTypeShown
        {
            get { return mRepBLTypeShown; }
            set { mRepBLTypeShown = value; }
        }
        public String RepDirectionTypeShown
        {
            get { return mRepDirectionTypeShown; }
            set { mRepDirectionTypeShown = value; }
        }
        public String BookingNumbers
        {
            get { return mBookingNumbers; }
            set { mBookingNumbers = value; }
        }
        public String CustomerReference
        {
            get { return mCustomerReference; }
            set { mCustomerReference = value; }
        }
        public String CC_CertificateNumber
        {
            get { return mCC_CertificateNumber; }
            set { mCC_CertificateNumber = value; }
        }
        public String CertificateNumber
        {
            get { return mCertificateNumber; }
            set { mCertificateNumber = value; }
        }
        public String CCAInvoiceNumber
        {
            get { return mCCAInvoiceNumber; }
            set { mCCAInvoiceNumber = value; }
        }
        public String CertificateValue
        {
            get { return mCertificateValue; }
            set { mCertificateValue = value; }
        }
        public String MasterBL
        {
            get { return mMasterBL; }
            set { mMasterBL = value; }
        }
        public String ContainerTypes
        {
            get { return mContainerTypes; }
            set { mContainerTypes = value; }
        }
        public String PackageTypes
        {
            get { return mPackageTypes; }
            set { mPackageTypes = value; }
        }
        public DateTime ETAPOLDate
        {
            get { return mETAPOLDate; }
            set { mETAPOLDate = value; }
        }
        public DateTime ATAPOLDate
        {
            get { return mATAPOLDate; }
            set { mATAPOLDate = value; }
        }
        public DateTime ExpectedDeparture
        {
            get { return mExpectedDeparture; }
            set { mExpectedDeparture = value; }
        }
        public DateTime ActualDeparture
        {
            get { return mActualDeparture; }
            set { mActualDeparture = value; }
        }
        public DateTime ExpectedArrival
        {
            get { return mExpectedArrival; }
            set { mExpectedArrival = value; }
        }
        public DateTime ActualArrival
        {
            get { return mActualArrival; }
            set { mActualArrival = value; }
        }
        public String ContainerNumbers
        {
            get { return mContainerNumbers; }
            set { mContainerNumbers = value; }
        }
        public String TrackingStageName
        {
            get { return mTrackingStageName; }
            set { mTrackingStageName = value; }
        }
        public String TruckingStages
        {
            get { return mTruckingStages; }
            set { mTruckingStages = value; }
        }
        public String CCTruckingStages
        {
            get { return mCCTruckingStages; }
            set { mCCTruckingStages = value; }
        }
        public String ClientName
        {
            get { return mClientName; }
            set { mClientName = value; }
        }
        public Int32 ClientID
        {
            get { return mClientID; }
            set { mClientID = value; }
        }
        public String PODCode
        {
            get { return mPODCode; }
            set { mPODCode = value; }
        }
        public String PODName
        {
            get { return mPODName; }
            set { mPODName = value; }
        }
        public String ACIDNumber
        {
            get { return mACIDNumber; }
            set { mACIDNumber = value; }
        }
        #endregion
    }

    public partial class CvwOperationsForWebSite
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwOperationsForWebSite> lstCVarvwOperationsForWebSite = new List<CVarvwOperationsForWebSite>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwOperationsForWebSite.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListvwOperationsForWebSite";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwOperationsForWebSite ObjCVarvwOperationsForWebSite = new CVarvwOperationsForWebSite();
                        ObjCVarvwOperationsForWebSite.mID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwOperationsForWebSite.mQuotationRouteID = Convert.ToInt64(dr["QuotationRouteID"].ToString());
                        ObjCVarvwOperationsForWebSite.mCode = Convert.ToString(dr["Code"].ToString());
                        ObjCVarvwOperationsForWebSite.mCodeWithoutDashes = Convert.ToString(dr["CodeWithoutDashes"].ToString());
                        ObjCVarvwOperationsForWebSite.mCodeSerial = Convert.ToInt32(dr["CodeSerial"].ToString());
                        ObjCVarvwOperationsForWebSite.mBranchID = Convert.ToInt32(dr["BranchID"].ToString());
                        ObjCVarvwOperationsForWebSite.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarvwOperationsForWebSite.mOperationManID = Convert.ToInt32(dr["OperationManID"].ToString());
                        ObjCVarvwOperationsForWebSite.mBLType = Convert.ToInt32(dr["BLType"].ToString());
                        ObjCVarvwOperationsForWebSite.mOpenYear = Convert.ToInt32(dr["OpenYear"].ToString());
                        ObjCVarvwOperationsForWebSite.mBLTypeIconName = Convert.ToString(dr["BLTypeIconName"].ToString());
                        ObjCVarvwOperationsForWebSite.mBLTypeIconStyle = Convert.ToString(dr["BLTypeIconStyle"].ToString());
                        ObjCVarvwOperationsForWebSite.mDirectionType = Convert.ToInt32(dr["DirectionType"].ToString());
                        ObjCVarvwOperationsForWebSite.mDirectionIconName = Convert.ToString(dr["DirectionIconName"].ToString());
                        ObjCVarvwOperationsForWebSite.mDirectionIconStyle = Convert.ToString(dr["DirectionIconStyle"].ToString());
                        ObjCVarvwOperationsForWebSite.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwOperationsForWebSite.mTransportIconName = Convert.ToString(dr["TransportIconName"].ToString());
                        ObjCVarvwOperationsForWebSite.mTransportIconStyle = Convert.ToString(dr["TransportIconStyle"].ToString());
                        ObjCVarvwOperationsForWebSite.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwOperationsForWebSite.mContainerNumber = Convert.ToString(dr["ContainerNumber"].ToString());
                        ObjCVarvwOperationsForWebSite.mPOLCountryCode = Convert.ToString(dr["POLCountryCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwOperationsForWebSite.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwOperationsForWebSite.mPODCountryCode = Convert.ToString(dr["PODCountryCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwOperationsForWebSite.mLineName = Convert.ToString(dr["LineName"].ToString());
                        ObjCVarvwOperationsForWebSite.mLineWebsite = Convert.ToString(dr["LineWebsite"].ToString());
                        ObjCVarvwOperationsForWebSite.mMasterOperationCode = Convert.ToString(dr["MasterOperationCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mMasterOperationCodeSerial = Convert.ToInt32(dr["MasterOperationCodeSerial"].ToString());
                        ObjCVarvwOperationsForWebSite.mAirlineCode = Convert.ToString(dr["AirlineCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mAirlineName = Convert.ToString(dr["AirlineName"].ToString());
                        ObjCVarvwOperationsForWebSite.mAirlinePrefix = Convert.ToString(dr["AirlinePrefix"].ToString());
                        ObjCVarvwOperationsForWebSite.mTruckerCode = Convert.ToInt32(dr["TruckerCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mRepBLTypeShown = Convert.ToString(dr["RepBLTypeShown"].ToString());
                        ObjCVarvwOperationsForWebSite.mRepDirectionTypeShown = Convert.ToString(dr["RepDirectionTypeShown"].ToString());
                        ObjCVarvwOperationsForWebSite.mBookingNumbers = Convert.ToString(dr["BookingNumbers"].ToString());
                        ObjCVarvwOperationsForWebSite.mCustomerReference = Convert.ToString(dr["CustomerReference"].ToString());
                        ObjCVarvwOperationsForWebSite.mCC_CertificateNumber = Convert.ToString(dr["CC_CertificateNumber"].ToString());
                        ObjCVarvwOperationsForWebSite.mCertificateNumber = Convert.ToString(dr["CertificateNumber"].ToString());
                        ObjCVarvwOperationsForWebSite.mCCAInvoiceNumber = Convert.ToString(dr["CCAInvoiceNumber"].ToString());
                        ObjCVarvwOperationsForWebSite.mCertificateValue = Convert.ToString(dr["CertificateValue"].ToString());
                        ObjCVarvwOperationsForWebSite.mMasterBL = Convert.ToString(dr["MasterBL"].ToString());
                        ObjCVarvwOperationsForWebSite.mContainerTypes = Convert.ToString(dr["ContainerTypes"].ToString());
                        ObjCVarvwOperationsForWebSite.mPackageTypes = Convert.ToString(dr["PackageTypes"].ToString());
                        ObjCVarvwOperationsForWebSite.mETAPOLDate = Convert.ToDateTime(dr["ETAPOLDate"].ToString());
                        ObjCVarvwOperationsForWebSite.mATAPOLDate = Convert.ToDateTime(dr["ATAPOLDate"].ToString());
                        ObjCVarvwOperationsForWebSite.mExpectedDeparture = Convert.ToDateTime(dr["ExpectedDeparture"].ToString());
                        ObjCVarvwOperationsForWebSite.mActualDeparture = Convert.ToDateTime(dr["ActualDeparture"].ToString());
                        ObjCVarvwOperationsForWebSite.mExpectedArrival = Convert.ToDateTime(dr["ExpectedArrival"].ToString());
                        ObjCVarvwOperationsForWebSite.mActualArrival = Convert.ToDateTime(dr["ActualArrival"].ToString());
                        ObjCVarvwOperationsForWebSite.mContainerNumbers = Convert.ToString(dr["ContainerNumbers"].ToString());
                        ObjCVarvwOperationsForWebSite.mTrackingStageName = Convert.ToString(dr["TrackingStageName"].ToString());
                        ObjCVarvwOperationsForWebSite.mTruckingStages = Convert.ToString(dr["TruckingStages"].ToString());
                        ObjCVarvwOperationsForWebSite.mCCTruckingStages = Convert.ToString(dr["CCTruckingStages"].ToString());
                        ObjCVarvwOperationsForWebSite.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwOperationsForWebSite.mClientID = Convert.ToInt32(dr["ClientID"].ToString());
                        ObjCVarvwOperationsForWebSite.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwOperationsForWebSite.mACIDNumber = Convert.ToString(dr["ACIDNumber"].ToString());
                        lstCVarvwOperationsForWebSite.Add(ObjCVarvwOperationsForWebSite);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwOperationsForWebSite.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwOperationsForWebSite";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwOperationsForWebSite ObjCVarvwOperationsForWebSite = new CVarvwOperationsForWebSite();
                        ObjCVarvwOperationsForWebSite.mID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwOperationsForWebSite.mQuotationRouteID = Convert.ToInt64(dr["QuotationRouteID"].ToString());
                        ObjCVarvwOperationsForWebSite.mCode = Convert.ToString(dr["Code"].ToString());
                        ObjCVarvwOperationsForWebSite.mCodeWithoutDashes = Convert.ToString(dr["CodeWithoutDashes"].ToString());
                        ObjCVarvwOperationsForWebSite.mCodeSerial = Convert.ToInt32(dr["CodeSerial"].ToString());
                        ObjCVarvwOperationsForWebSite.mBranchID = Convert.ToInt32(dr["BranchID"].ToString());
                        ObjCVarvwOperationsForWebSite.mSalesmanID = Convert.ToInt32(dr["SalesmanID"].ToString());
                        ObjCVarvwOperationsForWebSite.mOperationManID = Convert.ToInt32(dr["OperationManID"].ToString());
                        ObjCVarvwOperationsForWebSite.mBLType = Convert.ToInt32(dr["BLType"].ToString());
                        ObjCVarvwOperationsForWebSite.mOpenYear = Convert.ToInt32(dr["OpenYear"].ToString());
                        ObjCVarvwOperationsForWebSite.mBLTypeIconName = Convert.ToString(dr["BLTypeIconName"].ToString());
                        ObjCVarvwOperationsForWebSite.mBLTypeIconStyle = Convert.ToString(dr["BLTypeIconStyle"].ToString());
                        ObjCVarvwOperationsForWebSite.mDirectionType = Convert.ToInt32(dr["DirectionType"].ToString());
                        ObjCVarvwOperationsForWebSite.mDirectionIconName = Convert.ToString(dr["DirectionIconName"].ToString());
                        ObjCVarvwOperationsForWebSite.mDirectionIconStyle = Convert.ToString(dr["DirectionIconStyle"].ToString());
                        ObjCVarvwOperationsForWebSite.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwOperationsForWebSite.mTransportIconName = Convert.ToString(dr["TransportIconName"].ToString());
                        ObjCVarvwOperationsForWebSite.mTransportIconStyle = Convert.ToString(dr["TransportIconStyle"].ToString());
                        ObjCVarvwOperationsForWebSite.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwOperationsForWebSite.mContainerNumber = Convert.ToString(dr["ContainerNumber"].ToString());
                        ObjCVarvwOperationsForWebSite.mPOLCountryCode = Convert.ToString(dr["POLCountryCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwOperationsForWebSite.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwOperationsForWebSite.mPODCountryCode = Convert.ToString(dr["PODCountryCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwOperationsForWebSite.mLineName = Convert.ToString(dr["LineName"].ToString());
                        ObjCVarvwOperationsForWebSite.mLineWebsite = Convert.ToString(dr["LineWebsite"].ToString());
                        ObjCVarvwOperationsForWebSite.mMasterOperationCode = Convert.ToString(dr["MasterOperationCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mMasterOperationCodeSerial = Convert.ToInt32(dr["MasterOperationCodeSerial"].ToString());
                        ObjCVarvwOperationsForWebSite.mAirlineCode = Convert.ToString(dr["AirlineCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mAirlineName = Convert.ToString(dr["AirlineName"].ToString());
                        ObjCVarvwOperationsForWebSite.mAirlinePrefix = Convert.ToString(dr["AirlinePrefix"].ToString());
                        ObjCVarvwOperationsForWebSite.mTruckerCode = Convert.ToInt32(dr["TruckerCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mRepBLTypeShown = Convert.ToString(dr["RepBLTypeShown"].ToString());
                        ObjCVarvwOperationsForWebSite.mRepDirectionTypeShown = Convert.ToString(dr["RepDirectionTypeShown"].ToString());
                        ObjCVarvwOperationsForWebSite.mBookingNumbers = Convert.ToString(dr["BookingNumbers"].ToString());
                        ObjCVarvwOperationsForWebSite.mCustomerReference = Convert.ToString(dr["CustomerReference"].ToString());
                        ObjCVarvwOperationsForWebSite.mCC_CertificateNumber = Convert.ToString(dr["CC_CertificateNumber"].ToString());
                        ObjCVarvwOperationsForWebSite.mCertificateNumber = Convert.ToString(dr["CertificateNumber"].ToString());
                        ObjCVarvwOperationsForWebSite.mCCAInvoiceNumber = Convert.ToString(dr["CCAInvoiceNumber"].ToString());
                        ObjCVarvwOperationsForWebSite.mCertificateValue = Convert.ToString(dr["CertificateValue"].ToString());
                        ObjCVarvwOperationsForWebSite.mMasterBL = Convert.ToString(dr["MasterBL"].ToString());
                        ObjCVarvwOperationsForWebSite.mContainerTypes = Convert.ToString(dr["ContainerTypes"].ToString());
                        ObjCVarvwOperationsForWebSite.mPackageTypes = Convert.ToString(dr["PackageTypes"].ToString());
                        ObjCVarvwOperationsForWebSite.mETAPOLDate = Convert.ToDateTime(dr["ETAPOLDate"].ToString());
                        ObjCVarvwOperationsForWebSite.mATAPOLDate = Convert.ToDateTime(dr["ATAPOLDate"].ToString());
                        ObjCVarvwOperationsForWebSite.mExpectedDeparture = Convert.ToDateTime(dr["ExpectedDeparture"].ToString());
                        ObjCVarvwOperationsForWebSite.mActualDeparture = Convert.ToDateTime(dr["ActualDeparture"].ToString());
                        ObjCVarvwOperationsForWebSite.mExpectedArrival = Convert.ToDateTime(dr["ExpectedArrival"].ToString());
                        ObjCVarvwOperationsForWebSite.mActualArrival = Convert.ToDateTime(dr["ActualArrival"].ToString());
                        ObjCVarvwOperationsForWebSite.mContainerNumbers = Convert.ToString(dr["ContainerNumbers"].ToString());
                        ObjCVarvwOperationsForWebSite.mTrackingStageName = Convert.ToString(dr["TrackingStageName"].ToString());
                        ObjCVarvwOperationsForWebSite.mTruckingStages = Convert.ToString(dr["TruckingStages"].ToString());
                        ObjCVarvwOperationsForWebSite.mCCTruckingStages = Convert.ToString(dr["CCTruckingStages"].ToString());
                        ObjCVarvwOperationsForWebSite.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwOperationsForWebSite.mClientID = Convert.ToInt32(dr["ClientID"].ToString());
                        ObjCVarvwOperationsForWebSite.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwOperationsForWebSite.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwOperationsForWebSite.mACIDNumber = Convert.ToString(dr["ACIDNumber"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwOperationsForWebSite.Add(ObjCVarvwOperationsForWebSite);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }
}
