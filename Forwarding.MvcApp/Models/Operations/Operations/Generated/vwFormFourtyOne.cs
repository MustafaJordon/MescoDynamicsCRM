using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.Operations.Operations.Generated
{
    [Serializable]
    public partial class CVarvwFormFourtyOne
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal Int32 mQuarterNumber;
        internal Int32 mYearNumber;
        internal String mCommercialRegister;
        internal String mDocNo;
        internal String mCompetentTaxOfficeCode;
        internal DateTime mIssueDate;
        internal Int32 mNatureOfDeal;
        internal Decimal mTotalCostDeal;
        internal Int32 mDiscountType;
        internal Decimal mNetValueDeal;
        internal Decimal mRateTaxDeduction;
        internal String mTaxesValue;
        internal String mPartnerSupplierName;
        internal String mAddress;
        internal Int32 mCurrencyID;
        internal String mCurrencyCode;
        internal Decimal mCalculatedForTaxes;
        internal String mIDcard;
        internal Boolean mIsDeleted;
        internal Boolean mIsApproved;
        internal Int32 mPartnerSupplierID;
        internal Int32 mSupplierPartnerTypeID;
        internal String mPayableStatus;
        internal Int32 mDiscountTypeID;
        internal String mSupplierInvoiceNo;
        internal Int32 mChargeTypeID;
        internal String mOperationCode;
        internal Int32 mTaxTypeID;
        internal DateTime mEntryDate;
        internal DateTime mOpenDate;
        #endregion

        #region "Methods"
        public Int32 QuarterNumber
        {
            get { return mQuarterNumber; }
            set { mQuarterNumber = value; }
        }
        public Int32 YearNumber
        {
            get { return mYearNumber; }
            set { mYearNumber = value; }
        }
        public String CommercialRegister
        {
            get { return mCommercialRegister; }
            set { mCommercialRegister = value; }
        }
        public String DocNo
        {
            get { return mDocNo; }
            set { mDocNo = value; }
        }
        public String CompetentTaxOfficeCode
        {
            get { return mCompetentTaxOfficeCode; }
            set { mCompetentTaxOfficeCode = value; }
        }
        public DateTime IssueDate
        {
            get { return mIssueDate; }
            set { mIssueDate = value; }
        }
        public Int32 NatureOfDeal
        {
            get { return mNatureOfDeal; }
            set { mNatureOfDeal = value; }
        }
        public Decimal TotalCostDeal
        {
            get { return mTotalCostDeal; }
            set { mTotalCostDeal = value; }
        }
        public Int32 DiscountType
        {
            get { return mDiscountType; }
            set { mDiscountType = value; }
        }
        public Decimal NetValueDeal
        {
            get { return mNetValueDeal; }
            set { mNetValueDeal = value; }
        }
        public Decimal RateTaxDeduction
        {
            get { return mRateTaxDeduction; }
            set { mRateTaxDeduction = value; }
        }
        public String TaxesValue
        {
            get { return mTaxesValue; }
            set { mTaxesValue = value; }
        }
        public String PartnerSupplierName
        {
            get { return mPartnerSupplierName; }
            set { mPartnerSupplierName = value; }
        }
        public String Address
        {
            get { return mAddress; }
            set { mAddress = value; }
        }
        public Int32 CurrencyID
        {
            get { return mCurrencyID; }
            set { mCurrencyID = value; }
        }
        public String CurrencyCode
        {
            get { return mCurrencyCode; }
            set { mCurrencyCode = value; }
        }
        public Decimal CalculatedForTaxes
        {
            get { return mCalculatedForTaxes; }
            set { mCalculatedForTaxes = value; }
        }
        public String IDcard
        {
            get { return mIDcard; }
            set { mIDcard = value; }
        }
        public Boolean IsDeleted
        {
            get { return mIsDeleted; }
            set { mIsDeleted = value; }
        }
        public Boolean IsApproved
        {
            get { return mIsApproved; }
            set { mIsApproved = value; }
        }
        public Int32 PartnerSupplierID
        {
            get { return mPartnerSupplierID; }
            set { mPartnerSupplierID = value; }
        }
        public Int32 SupplierPartnerTypeID
        {
            get { return mSupplierPartnerTypeID; }
            set { mSupplierPartnerTypeID = value; }
        }
        public String PayableStatus
        {
            get { return mPayableStatus; }
            set { mPayableStatus = value; }
        }
        public Int32 DiscountTypeID
        {
            get { return mDiscountTypeID; }
            set { mDiscountTypeID = value; }
        }
        public String SupplierInvoiceNo
        {
            get { return mSupplierInvoiceNo; }
            set { mSupplierInvoiceNo = value; }
        }
        public Int32 ChargeTypeID
        {
            get { return mChargeTypeID; }
            set { mChargeTypeID = value; }
        }
        public String OperationCode
        {
            get { return mOperationCode; }
            set { mOperationCode = value; }
        }
        public Int32 TaxTypeID
        {
            get { return mTaxTypeID; }
            set { mTaxTypeID = value; }
        }
        public DateTime EntryDate
        {
            get { return mEntryDate; }
            set { mEntryDate = value; }
        }
        public DateTime OpenDate
        {
            get { return mOpenDate; }
            set { mOpenDate = value; }
        }
        #endregion
    }

    public partial class CvwFormFourtyOne
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwFormFourtyOne> lstCVarvwFormFourtyOne = new List<CVarvwFormFourtyOne>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwFormFourtyOne.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListvwFormFourtyOne";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwFormFourtyOne ObjCVarvwFormFourtyOne = new CVarvwFormFourtyOne();
                        ObjCVarvwFormFourtyOne.mQuarterNumber = Convert.ToInt32(dr["QuarterNumber"].ToString());
                        ObjCVarvwFormFourtyOne.mYearNumber = Convert.ToInt32(dr["YearNumber"].ToString());
                        ObjCVarvwFormFourtyOne.mCommercialRegister = Convert.ToString(dr["CommercialRegister"].ToString());
                        ObjCVarvwFormFourtyOne.mDocNo = Convert.ToString(dr["DocNo"].ToString());
                        ObjCVarvwFormFourtyOne.mCompetentTaxOfficeCode = Convert.ToString(dr["CompetentTaxOfficeCode"].ToString());
                        ObjCVarvwFormFourtyOne.mIssueDate = Convert.ToDateTime(dr["IssueDate"].ToString());
                        ObjCVarvwFormFourtyOne.mNatureOfDeal = Convert.ToInt32(dr["NatureOfDeal"].ToString());
                        ObjCVarvwFormFourtyOne.mTotalCostDeal = Convert.ToDecimal(dr["TotalCostDeal"].ToString());
                        ObjCVarvwFormFourtyOne.mDiscountType = Convert.ToInt32(dr["DiscountType"].ToString());
                        ObjCVarvwFormFourtyOne.mNetValueDeal = Convert.ToDecimal(dr["NetValueDeal"].ToString());
                        ObjCVarvwFormFourtyOne.mRateTaxDeduction = Convert.ToDecimal(dr["RateTaxDeduction"].ToString());
                        ObjCVarvwFormFourtyOne.mTaxesValue = Convert.ToString(dr["TaxesValue"].ToString());
                        ObjCVarvwFormFourtyOne.mPartnerSupplierName = Convert.ToString(dr["PartnerSupplierName"].ToString());
                        ObjCVarvwFormFourtyOne.mAddress = Convert.ToString(dr["Address"].ToString());
                        ObjCVarvwFormFourtyOne.mCurrencyID = Convert.ToInt32(dr["CurrencyID"].ToString());
                        ObjCVarvwFormFourtyOne.mCurrencyCode = Convert.ToString(dr["CurrencyCode"].ToString());
                        ObjCVarvwFormFourtyOne.mCalculatedForTaxes = Convert.ToDecimal(dr["CalculatedForTaxes"].ToString());
                        ObjCVarvwFormFourtyOne.mIDcard = Convert.ToString(dr["IDcard"].ToString());
                        ObjCVarvwFormFourtyOne.mIsDeleted = Convert.ToBoolean(dr["IsDeleted"].ToString());
                        ObjCVarvwFormFourtyOne.mIsApproved = Convert.ToBoolean(dr["IsApproved"].ToString());
                        ObjCVarvwFormFourtyOne.mPartnerSupplierID = Convert.ToInt32(dr["PartnerSupplierID"].ToString());
                        ObjCVarvwFormFourtyOne.mSupplierPartnerTypeID = Convert.ToInt32(dr["SupplierPartnerTypeID"].ToString());
                        ObjCVarvwFormFourtyOne.mPayableStatus = Convert.ToString(dr["PayableStatus"].ToString());
                        ObjCVarvwFormFourtyOne.mDiscountTypeID = Convert.ToInt32(dr["DiscountTypeID"].ToString());
                        ObjCVarvwFormFourtyOne.mSupplierInvoiceNo = Convert.ToString(dr["SupplierInvoiceNo"].ToString());
                        ObjCVarvwFormFourtyOne.mChargeTypeID = Convert.ToInt32(dr["ChargeTypeID"].ToString());
                        ObjCVarvwFormFourtyOne.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwFormFourtyOne.mTaxTypeID = Convert.ToInt32(dr["TaxTypeID"].ToString());
                        ObjCVarvwFormFourtyOne.mEntryDate = Convert.ToDateTime(dr["EntryDate"].ToString());
                        ObjCVarvwFormFourtyOne.mOpenDate = Convert.ToDateTime(dr["OpenDate"].ToString());
                        lstCVarvwFormFourtyOne.Add(ObjCVarvwFormFourtyOne);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwFormFourtyOne.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwFormFourtyOne";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwFormFourtyOne ObjCVarvwFormFourtyOne = new CVarvwFormFourtyOne();
                        ObjCVarvwFormFourtyOne.mQuarterNumber = Convert.ToInt32(dr["QuarterNumber"].ToString());
                        ObjCVarvwFormFourtyOne.mYearNumber = Convert.ToInt32(dr["YearNumber"].ToString());
                        ObjCVarvwFormFourtyOne.mCommercialRegister = Convert.ToString(dr["CommercialRegister"].ToString());
                        ObjCVarvwFormFourtyOne.mDocNo = Convert.ToString(dr["DocNo"].ToString());
                        ObjCVarvwFormFourtyOne.mCompetentTaxOfficeCode = Convert.ToString(dr["CompetentTaxOfficeCode"].ToString());
                        ObjCVarvwFormFourtyOne.mIssueDate = Convert.ToDateTime(dr["IssueDate"].ToString());
                        ObjCVarvwFormFourtyOne.mNatureOfDeal = Convert.ToInt32(dr["NatureOfDeal"].ToString());
                        ObjCVarvwFormFourtyOne.mTotalCostDeal = Convert.ToDecimal(dr["TotalCostDeal"].ToString());
                        ObjCVarvwFormFourtyOne.mDiscountType = Convert.ToInt32(dr["DiscountType"].ToString());
                        ObjCVarvwFormFourtyOne.mNetValueDeal = Convert.ToDecimal(dr["NetValueDeal"].ToString());
                        ObjCVarvwFormFourtyOne.mRateTaxDeduction = Convert.ToDecimal(dr["RateTaxDeduction"].ToString());
                        ObjCVarvwFormFourtyOne.mTaxesValue = Convert.ToString(dr["TaxesValue"].ToString());
                        ObjCVarvwFormFourtyOne.mPartnerSupplierName = Convert.ToString(dr["PartnerSupplierName"].ToString());
                        ObjCVarvwFormFourtyOne.mAddress = Convert.ToString(dr["Address"].ToString());
                        ObjCVarvwFormFourtyOne.mCurrencyID = Convert.ToInt32(dr["CurrencyID"].ToString());
                        ObjCVarvwFormFourtyOne.mCurrencyCode = Convert.ToString(dr["CurrencyCode"].ToString());
                        ObjCVarvwFormFourtyOne.mCalculatedForTaxes = Convert.ToDecimal(dr["CalculatedForTaxes"].ToString());
                        ObjCVarvwFormFourtyOne.mIDcard = Convert.ToString(dr["IDcard"].ToString());
                        ObjCVarvwFormFourtyOne.mIsDeleted = Convert.ToBoolean(dr["IsDeleted"].ToString());
                        ObjCVarvwFormFourtyOne.mIsApproved = Convert.ToBoolean(dr["IsApproved"].ToString());
                        ObjCVarvwFormFourtyOne.mPartnerSupplierID = Convert.ToInt32(dr["PartnerSupplierID"].ToString());
                        ObjCVarvwFormFourtyOne.mSupplierPartnerTypeID = Convert.ToInt32(dr["SupplierPartnerTypeID"].ToString());
                        ObjCVarvwFormFourtyOne.mPayableStatus = Convert.ToString(dr["PayableStatus"].ToString());
                        ObjCVarvwFormFourtyOne.mDiscountTypeID = Convert.ToInt32(dr["DiscountTypeID"].ToString());
                        ObjCVarvwFormFourtyOne.mSupplierInvoiceNo = Convert.ToString(dr["SupplierInvoiceNo"].ToString());
                        ObjCVarvwFormFourtyOne.mChargeTypeID = Convert.ToInt32(dr["ChargeTypeID"].ToString());
                        ObjCVarvwFormFourtyOne.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwFormFourtyOne.mTaxTypeID = Convert.ToInt32(dr["TaxTypeID"].ToString());
                        ObjCVarvwFormFourtyOne.mEntryDate = Convert.ToDateTime(dr["EntryDate"].ToString());
                        ObjCVarvwFormFourtyOne.mOpenDate = Convert.ToDateTime(dr["OpenDate"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwFormFourtyOne.Add(ObjCVarvwFormFourtyOne);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }


}
