using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.Operations.Operations.Generated
{
    [Serializable]
    public partial class CVarvwPurchasesReport
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal Decimal mUnitCost;
        internal Decimal mCostAmount;
        internal Decimal mTotalAmount;
        internal Int32 mDocumentType;
        internal Int32 mVatType;
        internal Int32 mProductTableType;
        internal String mInvoiceNumber;
        internal String mSupplierName;
        internal Int32 mPartnerSupplierID;
        internal Int32 mSupplierPartnerTypeID;
        internal String mCommercialRegister;
        internal String mVatNo;
        internal String mAddress;
        internal String mIDcard;
        internal Int32 mPhoneNumber;
        internal DateTime mInvoiceDate;
        internal String mProductName;
        internal String mProductCode;
        internal Int32 mStatementType;
        internal Int32 mProductType;
        internal String mUnit;
        internal Decimal mTaxClass;
        internal Int32 mProductQty;
        internal String mTaxAmount;
        internal Int32 mDiscountTypeID;
        internal String mSupplierInvoiceNo;
        internal DateTime mIssueDate;
        internal DateTime mOpenDate;
        internal String mOperationCode;
        internal Int32 mTaxTypeID;
        internal Boolean mIsApproved;
        #endregion

        #region "Methods"
        public Decimal UnitCost
        {
            get { return mUnitCost; }
            set { mUnitCost = value; }
        }
        public Decimal CostAmount
        {
            get { return mCostAmount; }
            set { mCostAmount = value; }
        }
        public Decimal TotalAmount
        {
            get { return mTotalAmount; }
            set { mTotalAmount = value; }
        }
        public Int32 DocumentType
        {
            get { return mDocumentType; }
            set { mDocumentType = value; }
        }
        public Int32 VatType
        {
            get { return mVatType; }
            set { mVatType = value; }
        }
        public Int32 ProductTableType
        {
            get { return mProductTableType; }
            set { mProductTableType = value; }
        }
        public String InvoiceNumber
        {
            get { return mInvoiceNumber; }
            set { mInvoiceNumber = value; }
        }
        public String SupplierName
        {
            get { return mSupplierName; }
            set { mSupplierName = value; }
        }
        public Int32 PartnerSupplierID
        {
            get { return mPartnerSupplierID; }
            set { mPartnerSupplierID = value; }
        }
        public Int32 SupplierPartnerTypeID
        {
            get { return mSupplierPartnerTypeID; }
            set { mSupplierPartnerTypeID = value; }
        }
        public String CommercialRegister
        {
            get { return mCommercialRegister; }
            set { mCommercialRegister = value; }
        }
        public String VatNo
        {
            get { return mVatNo; }
            set { mVatNo = value; }
        }
        public String Address
        {
            get { return mAddress; }
            set { mAddress = value; }
        }
        public String IDcard
        {
            get { return mIDcard; }
            set { mIDcard = value; }
        }
        public Int32 PhoneNumber
        {
            get { return mPhoneNumber; }
            set { mPhoneNumber = value; }
        }
        public DateTime InvoiceDate
        {
            get { return mInvoiceDate; }
            set { mInvoiceDate = value; }
        }
        public String ProductName
        {
            get { return mProductName; }
            set { mProductName = value; }
        }
        public String ProductCode
        {
            get { return mProductCode; }
            set { mProductCode = value; }
        }
        public Int32 StatementType
        {
            get { return mStatementType; }
            set { mStatementType = value; }
        }
        public Int32 ProductType
        {
            get { return mProductType; }
            set { mProductType = value; }
        }
        public String Unit
        {
            get { return mUnit; }
            set { mUnit = value; }
        }
        public Decimal TaxClass
        {
            get { return mTaxClass; }
            set { mTaxClass = value; }
        }
        public Int32 ProductQty
        {
            get { return mProductQty; }
            set { mProductQty = value; }
        }
        public String TaxAmount
        {
            get { return mTaxAmount; }
            set { mTaxAmount = value; }
        }
        public Int32 DiscountTypeID
        {
            get { return mDiscountTypeID; }
            set { mDiscountTypeID = value; }
        }
        public String SupplierInvoiceNo
        {
            get { return mSupplierInvoiceNo; }
            set { mSupplierInvoiceNo = value; }
        }
        public DateTime IssueDate
        {
            get { return mIssueDate; }
            set { mIssueDate = value; }
        }
        public DateTime OpenDate
        {
            get { return mOpenDate; }
            set { mOpenDate = value; }
        }
        public String OperationCode
        {
            get { return mOperationCode; }
            set { mOperationCode = value; }
        }
        public Int32 TaxTypeID
        {
            get { return mTaxTypeID; }
            set { mTaxTypeID = value; }
        }
        public Boolean IsApproved
        {
            get { return mIsApproved; }
            set { mIsApproved = value; }
        }
        #endregion
    }

    public partial class CvwPurchasesReport
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwPurchasesReport> lstCVarvwPurchasesReport = new List<CVarvwPurchasesReport>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwPurchasesReport.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListvwPurchasesReport";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwPurchasesReport ObjCVarvwPurchasesReport = new CVarvwPurchasesReport();
                        ObjCVarvwPurchasesReport.mUnitCost = Convert.ToDecimal(dr["UnitCost"].ToString());
                        ObjCVarvwPurchasesReport.mCostAmount = Convert.ToDecimal(dr["CostAmount"].ToString());
                        ObjCVarvwPurchasesReport.mTotalAmount = Convert.ToDecimal(dr["TotalAmount"].ToString());
                        ObjCVarvwPurchasesReport.mDocumentType = Convert.ToInt32(dr["DocumentType"].ToString());
                        ObjCVarvwPurchasesReport.mVatType = Convert.ToInt32(dr["VatType"].ToString());
                        ObjCVarvwPurchasesReport.mProductTableType = Convert.ToInt32(dr["ProductTableType"].ToString());
                        ObjCVarvwPurchasesReport.mInvoiceNumber = Convert.ToString(dr["InvoiceNumber"].ToString());
                        ObjCVarvwPurchasesReport.mSupplierName = Convert.ToString(dr["SupplierName"].ToString());
                        ObjCVarvwPurchasesReport.mPartnerSupplierID = Convert.ToInt32(dr["PartnerSupplierID"].ToString());
                        ObjCVarvwPurchasesReport.mSupplierPartnerTypeID = Convert.ToInt32(dr["SupplierPartnerTypeID"].ToString());
                        ObjCVarvwPurchasesReport.mCommercialRegister = Convert.ToString(dr["CommercialRegister"].ToString());
                        ObjCVarvwPurchasesReport.mVatNo = Convert.ToString(dr["VatNo"].ToString());
                        ObjCVarvwPurchasesReport.mAddress = Convert.ToString(dr["Address"].ToString());
                        ObjCVarvwPurchasesReport.mIDcard = Convert.ToString(dr["IDcard"].ToString());
                        ObjCVarvwPurchasesReport.mPhoneNumber = Convert.ToInt32(dr["PhoneNumber"].ToString());
                        ObjCVarvwPurchasesReport.mInvoiceDate = Convert.ToDateTime(dr["InvoiceDate"].ToString());
                        ObjCVarvwPurchasesReport.mProductName = Convert.ToString(dr["ProductName"].ToString());
                        ObjCVarvwPurchasesReport.mProductCode = Convert.ToString(dr["ProductCode"].ToString());
                        ObjCVarvwPurchasesReport.mStatementType = Convert.ToInt32(dr["StatementType"].ToString());
                        ObjCVarvwPurchasesReport.mProductType = Convert.ToInt32(dr["ProductType"].ToString());
                        ObjCVarvwPurchasesReport.mUnit = Convert.ToString(dr["Unit"].ToString());
                        ObjCVarvwPurchasesReport.mTaxClass = Convert.ToDecimal(dr["TaxClass"].ToString());
                        ObjCVarvwPurchasesReport.mProductQty = Convert.ToInt32(dr["ProductQty"].ToString());
                        ObjCVarvwPurchasesReport.mTaxAmount = Convert.ToString(dr["TaxAmount"].ToString());
                        ObjCVarvwPurchasesReport.mDiscountTypeID = Convert.ToInt32(dr["DiscountTypeID"].ToString());
                        ObjCVarvwPurchasesReport.mSupplierInvoiceNo = Convert.ToString(dr["SupplierInvoiceNo"].ToString());
                        ObjCVarvwPurchasesReport.mIssueDate = Convert.ToDateTime(dr["IssueDate"].ToString());
                        ObjCVarvwPurchasesReport.mOpenDate = Convert.ToDateTime(dr["OpenDate"].ToString());
                        ObjCVarvwPurchasesReport.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwPurchasesReport.mTaxTypeID = Convert.ToInt32(dr["TaxTypeID"].ToString());
                        ObjCVarvwPurchasesReport.mIsApproved = Convert.ToBoolean(dr["IsApproved"].ToString());
                        lstCVarvwPurchasesReport.Add(ObjCVarvwPurchasesReport);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwPurchasesReport.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwPurchasesReport";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwPurchasesReport ObjCVarvwPurchasesReport = new CVarvwPurchasesReport();
                        ObjCVarvwPurchasesReport.mUnitCost = Convert.ToDecimal(dr["UnitCost"].ToString());
                        ObjCVarvwPurchasesReport.mCostAmount = Convert.ToDecimal(dr["CostAmount"].ToString());
                        ObjCVarvwPurchasesReport.mTotalAmount = Convert.ToDecimal(dr["TotalAmount"].ToString());
                        ObjCVarvwPurchasesReport.mDocumentType = Convert.ToInt32(dr["DocumentType"].ToString());
                        ObjCVarvwPurchasesReport.mVatType = Convert.ToInt32(dr["VatType"].ToString());
                        ObjCVarvwPurchasesReport.mProductTableType = Convert.ToInt32(dr["ProductTableType"].ToString());
                        ObjCVarvwPurchasesReport.mInvoiceNumber = Convert.ToString(dr["InvoiceNumber"].ToString());
                        ObjCVarvwPurchasesReport.mSupplierName = Convert.ToString(dr["SupplierName"].ToString());
                        ObjCVarvwPurchasesReport.mPartnerSupplierID = Convert.ToInt32(dr["PartnerSupplierID"].ToString());
                        ObjCVarvwPurchasesReport.mSupplierPartnerTypeID = Convert.ToInt32(dr["SupplierPartnerTypeID"].ToString());
                        ObjCVarvwPurchasesReport.mCommercialRegister = Convert.ToString(dr["CommercialRegister"].ToString());
                        ObjCVarvwPurchasesReport.mVatNo = Convert.ToString(dr["VatNo"].ToString());
                        ObjCVarvwPurchasesReport.mAddress = Convert.ToString(dr["Address"].ToString());
                        ObjCVarvwPurchasesReport.mIDcard = Convert.ToString(dr["IDcard"].ToString());
                        ObjCVarvwPurchasesReport.mPhoneNumber = Convert.ToInt32(dr["PhoneNumber"].ToString());
                        ObjCVarvwPurchasesReport.mInvoiceDate = Convert.ToDateTime(dr["InvoiceDate"].ToString());
                        ObjCVarvwPurchasesReport.mProductName = Convert.ToString(dr["ProductName"].ToString());
                        ObjCVarvwPurchasesReport.mProductCode = Convert.ToString(dr["ProductCode"].ToString());
                        ObjCVarvwPurchasesReport.mStatementType = Convert.ToInt32(dr["StatementType"].ToString());
                        ObjCVarvwPurchasesReport.mProductType = Convert.ToInt32(dr["ProductType"].ToString());
                        ObjCVarvwPurchasesReport.mUnit = Convert.ToString(dr["Unit"].ToString());
                        ObjCVarvwPurchasesReport.mTaxClass = Convert.ToDecimal(dr["TaxClass"].ToString());
                        ObjCVarvwPurchasesReport.mProductQty = Convert.ToInt32(dr["ProductQty"].ToString());
                        ObjCVarvwPurchasesReport.mTaxAmount = Convert.ToString(dr["TaxAmount"].ToString());
                        ObjCVarvwPurchasesReport.mDiscountTypeID = Convert.ToInt32(dr["DiscountTypeID"].ToString());
                        ObjCVarvwPurchasesReport.mSupplierInvoiceNo = Convert.ToString(dr["SupplierInvoiceNo"].ToString());
                        ObjCVarvwPurchasesReport.mIssueDate = Convert.ToDateTime(dr["IssueDate"].ToString());
                        ObjCVarvwPurchasesReport.mOpenDate = Convert.ToDateTime(dr["OpenDate"].ToString());
                        ObjCVarvwPurchasesReport.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwPurchasesReport.mTaxTypeID = Convert.ToInt32(dr["TaxTypeID"].ToString());
                        ObjCVarvwPurchasesReport.mIsApproved = Convert.ToBoolean(dr["IsApproved"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwPurchasesReport.Add(ObjCVarvwPurchasesReport);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }



}
