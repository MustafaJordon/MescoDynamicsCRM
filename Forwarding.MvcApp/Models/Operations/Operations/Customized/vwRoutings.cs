//Com.CommandTimeout = 4000;

using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.Operations.Operations.Generated
{
    [Serializable]
    public class CPKvwRoutings
    {
        #region "variables"
        private Int64 mID;
        #endregion

        #region "Methods"
        public Int64 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        #endregion
    }
    [Serializable]
    public partial class CVarvwRoutings : CPKvwRoutings
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal Int32 mRoutingTypeID;
        internal Int64 mOperationID;
        internal Int32 mTransportType;
        internal String mTransportIconName;
        internal String mTransportIconStyle;
        internal Int32 mPOLCountryID;
        internal Int32 mPOL;
        internal Int32 mPODCountryID;
        internal Int32 mPOD;
        internal DateTime mETAPOLDate;
        internal DateTime mATAPOLDate;
        internal DateTime mExpectedDeparture;
        internal DateTime mActualDeparture;
        internal DateTime mExpectedArrival;
        internal DateTime mActualArrival;
        internal Int32 mShippingLineID;
        internal Int32 mAirlineID;
        internal Int32 mTruckerID;
        internal Int32 mTransientTime;
        internal Int32 mValidity;
        internal Int32 mFreeTime;
        internal String mNotes;
        internal Int32 mCreatorUserID;
        internal String mCreatorName;
        internal DateTime mCreationDate;
        internal Int32 mModificatorUserID;
        internal String mModificationDateString;
        internal String mRoutingCode;
        internal String mRoutingName;
        internal String mRoutingLocalName;
        internal Int32 mViewOrder;
        internal String mPOLCountryCode;
        internal String mPOLCountryName;
        internal String mPOLCode;
        internal String mPOLName;
        internal String mPODCountryCode;
        internal String mPODCountryName;
        internal String mPODCode;
        internal String mPODName;
        internal String mShippingLineCode;
        internal String mShippingLineName;
        internal String mShippingLocalLineName;
        internal String mAirlineCode;
        internal String mAirlineName;
        internal String mAirlineLocalName;
        internal Int32 mTruckerCode;
        internal String mTruckerName;
        internal String mTruckerLocalName;
        internal Int32 mVesselID;
        internal String mVesselCode;
        internal String mVesselName;
        internal String mVoyageOrTruckNumber;
        internal Int32 mGensetSupplierID;
        internal String mGensetSupplierName;
        internal String mGensetSupplierLocalName;
        internal Int32 mCCAID;
        internal String mCCAName;
        internal String mCCALocalName;
        internal String mContactPerson;
        internal String mPickupAddress;
        internal String mDeliveryAddress;
        internal String mQuantity;
        internal Int32 mGateInPortID;
        internal String mGateInPortName;
        internal Int32 mGateOutPortID;
        internal String mGateOutPortName;
        internal String mGateInDate;
        internal String mGateOutDate;
        internal String mStuffingDate;
        internal String mDeliveryDate;
        internal String mBookingNumber;
        internal String mDelays;
        internal String mDriverName;
        internal String mDriverPhones;
        internal String mPowerFromGateInTillActualSailing;
        internal String mContactPersonPhones;
        internal String mLoadingTime;
        internal String mCertificateNumber;
        internal String mCertificateValue;
        internal DateTime mCertificateDate;
        internal String mQasimaNumber;
        internal DateTime mQasimaDate;
        internal Boolean mMatch;
        internal String mSalesDateReceived;
        internal String mCommerceDateReceived;
        internal String mInspectionDateReceived;
        internal String mFinishDateReceived;
        internal String mSalesDateDelivered;
        internal String mCommerceDateDelivered;
        internal String mInspectionDateDelivered;
        internal String mFinishDateDelivered;
        internal String mRoadNumber;
        internal String mDeliveryOrderNumber;
        internal String mWareHouse;
        internal String mWareHouseLocation;
        internal Boolean mIsOwnedByCompany;
        internal Int32 mTrailerID;
        internal Int32 mDriverID;
        internal Int32 mDriverAssistantID;
        internal Int32 mEquipmentID;
        internal Int32 mLoadingZoneID;
        internal Int32 mFirstCuringAreaID;
        internal Int32 mSecondCuringAreaID;
        internal Int32 mThirdCuringAreaID;
        internal String mBillNumber;
        internal String mTruckingOrderCode;
        internal String mOperationCode;
        internal Int32 mOperationSerial;
        internal String mShipmentTypeCode;
        internal String mEquipmentNumber;
        internal String mEquipmentPlateNo;
        internal String mEquipmentModelName;
        internal String mEquipmentModelNameFromQuotation;
        internal String mTrailerPlateNo;
        internal String mTrailerNumber;
        internal Decimal mCargoGrossWeight;
        internal String mLoadingZone;
        internal String mEquipmentDriverName;
        internal String mFirstCuringArea;
        internal String mSecondCuringArea;
        internal String mThirdCuringArea;
        internal Int32 mTruckCounter;
        internal Decimal mCargoReturnGrossWeight;
        internal Decimal mCCAFreight;
        internal Decimal mCCAFOB;
        internal Decimal mCCACFValue;
        internal String mCCAInvoiceNumber;
        internal String mCCAInsurance;
        internal String mCCADischargeValue;
        internal String mCCAAcceptedValue;
        internal String mCCAImportValue;
        internal DateTime mCCADocumentReceiveDate;
        internal String mCCAExchangeRate;
        internal String mCCAVATCertificateNumber;
        internal String mCCAVATCertificateValue;
        internal String mCCACommercialProfitCertificateNumber;
        internal String mCCAOthers;
        internal DateTime mCCASpendDate;
        internal Boolean mIsApproved;
        internal String mClientName;
        internal Int32 mCustomerID;
        internal Int32 mSubContractedCustomerID;
        internal String mSubContractedCustomerName;
        internal Decimal mCost;
        internal Decimal mCostFromPayables;
        internal Decimal mSale;
        internal Int32 mContainersCount;
        internal Int32 mVehiclesCount;
        internal Int32 mLastTruckCounter;
        internal DateTime mOffloadingDate;
        internal Int32 mMaxSupplierContainers;
        internal Boolean mIsFleet;
        internal Int32 mCommodityID;
        internal String mCommodityName;
        internal DateTime mLoadingDate;
        internal String mLoadingReference;
        internal DateTime mUnloadingDate;
        internal String mUnloadingReference;
        internal String mUnloadingTime;
        internal String mstrLoadingDate;
        internal Int64 mQuotationRouteID;
        internal Int64 mQuotationID;
        internal String mQuotationRouteCode;
        internal Int64 mInvoiceID;
        internal Int64 mInvoiceNumber;
        internal String mInvoiceTypeName;
        internal DateTime mInvoiceDate;
        internal Int32 mOperationInvoicesCount;
        internal Int32 mDivisionID;
        internal String mDivisionName;
        internal String mCCReleaseNo;
        internal Int32 mCC_ClearanceTypeID;
        internal String mCC_ClearanceTypeName;
        internal Int32 mCC_CustomItemsID;
        internal String mCC_CustomItemsCode;
        internal String mCC_CustomItemsTariffCode;
        internal String mCC_CustomItemsArDescription;
        internal String mCC_CustomItemsEnDescription;
        internal DateTime mCCDropBackDelivered;
        internal DateTime mCCDropBackReceived;
        internal DateTime mCCAllowTemporaryDelivered;
        internal DateTime mCCAllowTemporaryReceived;
        internal String mContainerTypes;
        internal String mMasterBL;
        #endregion

        #region "Methods"
        public Int32 RoutingTypeID
        {
            get { return mRoutingTypeID; }
            set { mRoutingTypeID = value; }
        }
        public Int64 OperationID
        {
            get { return mOperationID; }
            set { mOperationID = value; }
        }
        public Int32 TransportType
        {
            get { return mTransportType; }
            set { mTransportType = value; }
        }
        public String TransportIconName
        {
            get { return mTransportIconName; }
            set { mTransportIconName = value; }
        }
        public String TransportIconStyle
        {
            get { return mTransportIconStyle; }
            set { mTransportIconStyle = value; }
        }
        public Int32 POLCountryID
        {
            get { return mPOLCountryID; }
            set { mPOLCountryID = value; }
        }
        public Int32 POL
        {
            get { return mPOL; }
            set { mPOL = value; }
        }
        public Int32 PODCountryID
        {
            get { return mPODCountryID; }
            set { mPODCountryID = value; }
        }
        public Int32 POD
        {
            get { return mPOD; }
            set { mPOD = value; }
        }
        public DateTime ETAPOLDate
        {
            get { return mETAPOLDate; }
            set { mETAPOLDate = value; }
        }
        public DateTime ATAPOLDate
        {
            get { return mATAPOLDate; }
            set { mATAPOLDate = value; }
        }
        public DateTime ExpectedDeparture
        {
            get { return mExpectedDeparture; }
            set { mExpectedDeparture = value; }
        }
        public DateTime ActualDeparture
        {
            get { return mActualDeparture; }
            set { mActualDeparture = value; }
        }
        public DateTime ExpectedArrival
        {
            get { return mExpectedArrival; }
            set { mExpectedArrival = value; }
        }
        public DateTime ActualArrival
        {
            get { return mActualArrival; }
            set { mActualArrival = value; }
        }
        public Int32 ShippingLineID
        {
            get { return mShippingLineID; }
            set { mShippingLineID = value; }
        }
        public Int32 AirlineID
        {
            get { return mAirlineID; }
            set { mAirlineID = value; }
        }
        public Int32 TruckerID
        {
            get { return mTruckerID; }
            set { mTruckerID = value; }
        }
        public Int32 TransientTime
        {
            get { return mTransientTime; }
            set { mTransientTime = value; }
        }
        public Int32 Validity
        {
            get { return mValidity; }
            set { mValidity = value; }
        }
        public Int32 FreeTime
        {
            get { return mFreeTime; }
            set { mFreeTime = value; }
        }
        public String Notes
        {
            get { return mNotes; }
            set { mNotes = value; }
        }
        public Int32 CreatorUserID
        {
            get { return mCreatorUserID; }
            set { mCreatorUserID = value; }
        }
        public String CreatorName
        {
            get { return mCreatorName; }
            set { mCreatorName = value; }
        }
        public DateTime CreationDate
        {
            get { return mCreationDate; }
            set { mCreationDate = value; }
        }
        public Int32 ModificatorUserID
        {
            get { return mModificatorUserID; }
            set { mModificatorUserID = value; }
        }
        public String ModificationDateString
        {
            get { return mModificationDateString; }
            set { mModificationDateString = value; }
        }
        public String RoutingCode
        {
            get { return mRoutingCode; }
            set { mRoutingCode = value; }
        }
        public String RoutingName
        {
            get { return mRoutingName; }
            set { mRoutingName = value; }
        }
        public String RoutingLocalName
        {
            get { return mRoutingLocalName; }
            set { mRoutingLocalName = value; }
        }
        public Int32 ViewOrder
        {
            get { return mViewOrder; }
            set { mViewOrder = value; }
        }
        public String POLCountryCode
        {
            get { return mPOLCountryCode; }
            set { mPOLCountryCode = value; }
        }
        public String POLCountryName
        {
            get { return mPOLCountryName; }
            set { mPOLCountryName = value; }
        }
        public String POLCode
        {
            get { return mPOLCode; }
            set { mPOLCode = value; }
        }
        public String POLName
        {
            get { return mPOLName; }
            set { mPOLName = value; }
        }
        public String PODCountryCode
        {
            get { return mPODCountryCode; }
            set { mPODCountryCode = value; }
        }
        public String PODCountryName
        {
            get { return mPODCountryName; }
            set { mPODCountryName = value; }
        }
        public String PODCode
        {
            get { return mPODCode; }
            set { mPODCode = value; }
        }
        public String PODName
        {
            get { return mPODName; }
            set { mPODName = value; }
        }
        public String ShippingLineCode
        {
            get { return mShippingLineCode; }
            set { mShippingLineCode = value; }
        }
        public String ShippingLineName
        {
            get { return mShippingLineName; }
            set { mShippingLineName = value; }
        }
        public String ShippingLocalLineName
        {
            get { return mShippingLocalLineName; }
            set { mShippingLocalLineName = value; }
        }
        public String AirlineCode
        {
            get { return mAirlineCode; }
            set { mAirlineCode = value; }
        }
        public String AirlineName
        {
            get { return mAirlineName; }
            set { mAirlineName = value; }
        }
        public String AirlineLocalName
        {
            get { return mAirlineLocalName; }
            set { mAirlineLocalName = value; }
        }
        public Int32 TruckerCode
        {
            get { return mTruckerCode; }
            set { mTruckerCode = value; }
        }
        public String TruckerName
        {
            get { return mTruckerName; }
            set { mTruckerName = value; }
        }
        public String TruckerLocalName
        {
            get { return mTruckerLocalName; }
            set { mTruckerLocalName = value; }
        }
        public Int32 VesselID
        {
            get { return mVesselID; }
            set { mVesselID = value; }
        }
        public String VesselCode
        {
            get { return mVesselCode; }
            set { mVesselCode = value; }
        }
        public String VesselName
        {
            get { return mVesselName; }
            set { mVesselName = value; }
        }
        public String VoyageOrTruckNumber
        {
            get { return mVoyageOrTruckNumber; }
            set { mVoyageOrTruckNumber = value; }
        }
        public Int32 GensetSupplierID
        {
            get { return mGensetSupplierID; }
            set { mGensetSupplierID = value; }
        }
        public String GensetSupplierName
        {
            get { return mGensetSupplierName; }
            set { mGensetSupplierName = value; }
        }
        public String GensetSupplierLocalName
        {
            get { return mGensetSupplierLocalName; }
            set { mGensetSupplierLocalName = value; }
        }
        public Int32 CCAID
        {
            get { return mCCAID; }
            set { mCCAID = value; }
        }
        public String CCAName
        {
            get { return mCCAName; }
            set { mCCAName = value; }
        }
        public String CCALocalName
        {
            get { return mCCALocalName; }
            set { mCCALocalName = value; }
        }
        public String ContactPerson
        {
            get { return mContactPerson; }
            set { mContactPerson = value; }
        }
        public String PickupAddress
        {
            get { return mPickupAddress; }
            set { mPickupAddress = value; }
        }
        public String DeliveryAddress
        {
            get { return mDeliveryAddress; }
            set { mDeliveryAddress = value; }
        }
        public String Quantity
        {
            get { return mQuantity; }
            set { mQuantity = value; }
        }
        public Int32 GateInPortID
        {
            get { return mGateInPortID; }
            set { mGateInPortID = value; }
        }
        public String GateInPortName
        {
            get { return mGateInPortName; }
            set { mGateInPortName = value; }
        }
        public Int32 GateOutPortID
        {
            get { return mGateOutPortID; }
            set { mGateOutPortID = value; }
        }
        public String GateOutPortName
        {
            get { return mGateOutPortName; }
            set { mGateOutPortName = value; }
        }
        public String GateInDate
        {
            get { return mGateInDate; }
            set { mGateInDate = value; }
        }
        public String GateOutDate
        {
            get { return mGateOutDate; }
            set { mGateOutDate = value; }
        }
        public String StuffingDate
        {
            get { return mStuffingDate; }
            set { mStuffingDate = value; }
        }
        public String DeliveryDate
        {
            get { return mDeliveryDate; }
            set { mDeliveryDate = value; }
        }
        public String BookingNumber
        {
            get { return mBookingNumber; }
            set { mBookingNumber = value; }
        }
        public String Delays
        {
            get { return mDelays; }
            set { mDelays = value; }
        }
        public String DriverName
        {
            get { return mDriverName; }
            set { mDriverName = value; }
        }
        public String DriverPhones
        {
            get { return mDriverPhones; }
            set { mDriverPhones = value; }
        }
        public String PowerFromGateInTillActualSailing
        {
            get { return mPowerFromGateInTillActualSailing; }
            set { mPowerFromGateInTillActualSailing = value; }
        }
        public String ContactPersonPhones
        {
            get { return mContactPersonPhones; }
            set { mContactPersonPhones = value; }
        }
        public String LoadingTime
        {
            get { return mLoadingTime; }
            set { mLoadingTime = value; }
        }
        public String CertificateNumber
        {
            get { return mCertificateNumber; }
            set { mCertificateNumber = value; }
        }
        public String CertificateValue
        {
            get { return mCertificateValue; }
            set { mCertificateValue = value; }
        }
        public DateTime CertificateDate
        {
            get { return mCertificateDate; }
            set { mCertificateDate = value; }
        }
        public String QasimaNumber
        {
            get { return mQasimaNumber; }
            set { mQasimaNumber = value; }
        }
        public DateTime QasimaDate
        {
            get { return mQasimaDate; }
            set { mQasimaDate = value; }
        }
        public Boolean Match
        {
            get { return mMatch; }
            set { mMatch = value; }
        }
        public String SalesDateReceived
        {
            get { return mSalesDateReceived; }
            set { mSalesDateReceived = value; }
        }
        public String CommerceDateReceived
        {
            get { return mCommerceDateReceived; }
            set { mCommerceDateReceived = value; }
        }
        public String InspectionDateReceived
        {
            get { return mInspectionDateReceived; }
            set { mInspectionDateReceived = value; }
        }
        public String FinishDateReceived
        {
            get { return mFinishDateReceived; }
            set { mFinishDateReceived = value; }
        }
        public String SalesDateDelivered
        {
            get { return mSalesDateDelivered; }
            set { mSalesDateDelivered = value; }
        }
        public String CommerceDateDelivered
        {
            get { return mCommerceDateDelivered; }
            set { mCommerceDateDelivered = value; }
        }
        public String InspectionDateDelivered
        {
            get { return mInspectionDateDelivered; }
            set { mInspectionDateDelivered = value; }
        }
        public String FinishDateDelivered
        {
            get { return mFinishDateDelivered; }
            set { mFinishDateDelivered = value; }
        }
        public String RoadNumber
        {
            get { return mRoadNumber; }
            set { mRoadNumber = value; }
        }
        public String DeliveryOrderNumber
        {
            get { return mDeliveryOrderNumber; }
            set { mDeliveryOrderNumber = value; }
        }
        public String WareHouse
        {
            get { return mWareHouse; }
            set { mWareHouse = value; }
        }
        public String WareHouseLocation
        {
            get { return mWareHouseLocation; }
            set { mWareHouseLocation = value; }
        }
        public Boolean IsOwnedByCompany
        {
            get { return mIsOwnedByCompany; }
            set { mIsOwnedByCompany = value; }
        }
        public Int32 TrailerID
        {
            get { return mTrailerID; }
            set { mTrailerID = value; }
        }
        public Int32 DriverID
        {
            get { return mDriverID; }
            set { mDriverID = value; }
        }
        public Int32 DriverAssistantID
        {
            get { return mDriverAssistantID; }
            set { mDriverAssistantID = value; }
        }
        public Int32 EquipmentID
        {
            get { return mEquipmentID; }
            set { mEquipmentID = value; }
        }
        public Int32 LoadingZoneID
        {
            get { return mLoadingZoneID; }
            set { mLoadingZoneID = value; }
        }
        public Int32 FirstCuringAreaID
        {
            get { return mFirstCuringAreaID; }
            set { mFirstCuringAreaID = value; }
        }
        public Int32 SecondCuringAreaID
        {
            get { return mSecondCuringAreaID; }
            set { mSecondCuringAreaID = value; }
        }
        public Int32 ThirdCuringAreaID
        {
            get { return mThirdCuringAreaID; }
            set { mThirdCuringAreaID = value; }
        }
        public String BillNumber
        {
            get { return mBillNumber; }
            set { mBillNumber = value; }
        }
        public String TruckingOrderCode
        {
            get { return mTruckingOrderCode; }
            set { mTruckingOrderCode = value; }
        }
        public String OperationCode
        {
            get { return mOperationCode; }
            set { mOperationCode = value; }
        }
        public Int32 OperationSerial
        {
            get { return mOperationSerial; }
            set { mOperationSerial = value; }
        }
        public String ShipmentTypeCode
        {
            get { return mShipmentTypeCode; }
            set { mShipmentTypeCode = value; }
        }
        public String EquipmentNumber
        {
            get { return mEquipmentNumber; }
            set { mEquipmentNumber = value; }
        }
        public String EquipmentPlateNo
        {
            get { return mEquipmentPlateNo; }
            set { mEquipmentPlateNo = value; }
        }
        public String EquipmentModelName
        {
            get { return mEquipmentModelName; }
            set { mEquipmentModelName = value; }
        }
        public String EquipmentModelNameFromQuotation
        {
            get { return mEquipmentModelNameFromQuotation; }
            set { mEquipmentModelNameFromQuotation = value; }
        }
        public String TrailerPlateNo
        {
            get { return mTrailerPlateNo; }
            set { mTrailerPlateNo = value; }
        }
        public String TrailerNumber
        {
            get { return mTrailerNumber; }
            set { mTrailerNumber = value; }
        }
        public Decimal CargoGrossWeight
        {
            get { return mCargoGrossWeight; }
            set { mCargoGrossWeight = value; }
        }
        public String LoadingZone
        {
            get { return mLoadingZone; }
            set { mLoadingZone = value; }
        }
        public String EquipmentDriverName
        {
            get { return mEquipmentDriverName; }
            set { mEquipmentDriverName = value; }
        }
        public String FirstCuringArea
        {
            get { return mFirstCuringArea; }
            set { mFirstCuringArea = value; }
        }
        public String SecondCuringArea
        {
            get { return mSecondCuringArea; }
            set { mSecondCuringArea = value; }
        }
        public String ThirdCuringArea
        {
            get { return mThirdCuringArea; }
            set { mThirdCuringArea = value; }
        }
        public Int32 TruckCounter
        {
            get { return mTruckCounter; }
            set { mTruckCounter = value; }
        }
        public Decimal CargoReturnGrossWeight
        {
            get { return mCargoReturnGrossWeight; }
            set { mCargoReturnGrossWeight = value; }
        }
        public Decimal CCAFreight
        {
            get { return mCCAFreight; }
            set { mCCAFreight = value; }
        }
        public Decimal CCAFOB
        {
            get { return mCCAFOB; }
            set { mCCAFOB = value; }
        }
        public Decimal CCACFValue
        {
            get { return mCCACFValue; }
            set { mCCACFValue = value; }
        }
        public String CCAInvoiceNumber
        {
            get { return mCCAInvoiceNumber; }
            set { mCCAInvoiceNumber = value; }
        }
        public String CCAInsurance
        {
            get { return mCCAInsurance; }
            set { mCCAInsurance = value; }
        }
        public String CCADischargeValue
        {
            get { return mCCADischargeValue; }
            set { mCCADischargeValue = value; }
        }
        public String CCAAcceptedValue
        {
            get { return mCCAAcceptedValue; }
            set { mCCAAcceptedValue = value; }
        }
        public String CCAImportValue
        {
            get { return mCCAImportValue; }
            set { mCCAImportValue = value; }
        }
        public DateTime CCADocumentReceiveDate
        {
            get { return mCCADocumentReceiveDate; }
            set { mCCADocumentReceiveDate = value; }
        }
        public String CCAExchangeRate
        {
            get { return mCCAExchangeRate; }
            set { mCCAExchangeRate = value; }
        }
        public String CCAVATCertificateNumber
        {
            get { return mCCAVATCertificateNumber; }
            set { mCCAVATCertificateNumber = value; }
        }
        public String CCAVATCertificateValue
        {
            get { return mCCAVATCertificateValue; }
            set { mCCAVATCertificateValue = value; }
        }
        public String CCACommercialProfitCertificateNumber
        {
            get { return mCCACommercialProfitCertificateNumber; }
            set { mCCACommercialProfitCertificateNumber = value; }
        }
        public String CCAOthers
        {
            get { return mCCAOthers; }
            set { mCCAOthers = value; }
        }
        public DateTime CCASpendDate
        {
            get { return mCCASpendDate; }
            set { mCCASpendDate = value; }
        }
        public Boolean IsApproved
        {
            get { return mIsApproved; }
            set { mIsApproved = value; }
        }
        public String ClientName
        {
            get { return mClientName; }
            set { mClientName = value; }
        }
        public Int32 CustomerID
        {
            get { return mCustomerID; }
            set { mCustomerID = value; }
        }
        public Int32 SubContractedCustomerID
        {
            get { return mSubContractedCustomerID; }
            set { mSubContractedCustomerID = value; }
        }
        public String SubContractedCustomerName
        {
            get { return mSubContractedCustomerName; }
            set { mSubContractedCustomerName = value; }
        }
        public Decimal Cost
        {
            get { return mCost; }
            set { mCost = value; }
        }
        public Decimal CostFromPayables
        {
            get { return mCostFromPayables; }
            set { mCostFromPayables = value; }
        }
        public Decimal Sale
        {
            get { return mSale; }
            set { mSale = value; }
        }
        public Int32 ContainersCount
        {
            get { return mContainersCount; }
            set { mContainersCount = value; }
        }
        public Int32 VehiclesCount
        {
            get { return mVehiclesCount; }
            set { mVehiclesCount = value; }
        }
        public Int32 LastTruckCounter
        {
            get { return mLastTruckCounter; }
            set { mLastTruckCounter = value; }
        }
        public DateTime OffloadingDate
        {
            get { return mOffloadingDate; }
            set { mOffloadingDate = value; }
        }
        public Int32 MaxSupplierContainers
        {
            get { return mMaxSupplierContainers; }
            set { mMaxSupplierContainers = value; }
        }
        public Boolean IsFleet
        {
            get { return mIsFleet; }
            set { mIsFleet = value; }
        }
        public Int32 CommodityID
        {
            get { return mCommodityID; }
            set { mCommodityID = value; }
        }
        public String CommodityName
        {
            get { return mCommodityName; }
            set { mCommodityName = value; }
        }
        public DateTime LoadingDate
        {
            get { return mLoadingDate; }
            set { mLoadingDate = value; }
        }
        public String LoadingReference
        {
            get { return mLoadingReference; }
            set { mLoadingReference = value; }
        }
        public DateTime UnloadingDate
        {
            get { return mUnloadingDate; }
            set { mUnloadingDate = value; }
        }
        public String UnloadingReference
        {
            get { return mUnloadingReference; }
            set { mUnloadingReference = value; }
        }
        public String UnloadingTime
        {
            get { return mUnloadingTime; }
            set { mUnloadingTime = value; }
        }
        public String strLoadingDate
        {
            get { return mstrLoadingDate; }
            set { mstrLoadingDate = value; }
        }
        public Int64 QuotationRouteID
        {
            get { return mQuotationRouteID; }
            set { mQuotationRouteID = value; }
        }
        public Int64 QuotationID
        {
            get { return mQuotationID; }
            set { mQuotationID = value; }
        }
        public String QuotationRouteCode
        {
            get { return mQuotationRouteCode; }
            set { mQuotationRouteCode = value; }
        }
        public Int64 InvoiceID
        {
            get { return mInvoiceID; }
            set { mInvoiceID = value; }
        }
        public Int64 InvoiceNumber
        {
            get { return mInvoiceNumber; }
            set { mInvoiceNumber = value; }
        }
        public String InvoiceTypeName
        {
            get { return mInvoiceTypeName; }
            set { mInvoiceTypeName = value; }
        }
        public DateTime InvoiceDate
        {
            get { return mInvoiceDate; }
            set { mInvoiceDate = value; }
        }
        public Int32 OperationInvoicesCount
        {
            get { return mOperationInvoicesCount; }
            set { mOperationInvoicesCount = value; }
        }
        public Int32 DivisionID
        {
            get { return mDivisionID; }
            set { mDivisionID = value; }
        }
        public String DivisionName
        {
            get { return mDivisionName; }
            set { mDivisionName = value; }
        }
        public String CCReleaseNo
        {
            get { return mCCReleaseNo; }
            set { mCCReleaseNo = value; }
        }
        public Int32 CC_ClearanceTypeID
        {
            get { return mCC_ClearanceTypeID; }
            set { mCC_ClearanceTypeID = value; }
        }
        public String CC_ClearanceTypeName
        {
            get { return mCC_ClearanceTypeName; }
            set { mCC_ClearanceTypeName = value; }
        }
        public Int32 CC_CustomItemsID
        {
            get { return mCC_CustomItemsID; }
            set { mCC_CustomItemsID = value; }
        }
        public String CC_CustomItemsCode
        {
            get { return mCC_CustomItemsCode; }
            set { mCC_CustomItemsCode = value; }
        }
        public String CC_CustomItemsTariffCode
        {
            get { return mCC_CustomItemsTariffCode; }
            set { mCC_CustomItemsTariffCode = value; }
        }
        public String CC_CustomItemsArDescription
        {
            get { return mCC_CustomItemsArDescription; }
            set { mCC_CustomItemsArDescription = value; }
        }
        public String CC_CustomItemsEnDescription
        {
            get { return mCC_CustomItemsEnDescription; }
            set { mCC_CustomItemsEnDescription = value; }
        }
        public DateTime CCDropBackDelivered
        {
            get { return mCCDropBackDelivered; }
            set { mCCDropBackDelivered = value; }
        }
        public DateTime CCDropBackReceived
        {
            get { return mCCDropBackReceived; }
            set { mCCDropBackReceived = value; }
        }
        public DateTime CCAllowTemporaryDelivered
        {
            get { return mCCAllowTemporaryDelivered; }
            set { mCCAllowTemporaryDelivered = value; }
        }
        public DateTime CCAllowTemporaryReceived
        {
            get { return mCCAllowTemporaryReceived; }
            set { mCCAllowTemporaryReceived = value; }
        }
        public String ContainerTypes
        {
            get { return mContainerTypes; }
            set { mContainerTypes = value; }
        }
        public String MasterBL
        {
            get { return mMasterBL; }
            set { mMasterBL = value; }
        }
        #endregion

        #region Functions
        public Boolean GetIsChange()
        {
            return mIsChanges;
        }
        public void SetIsChange(Boolean IsChange)
        {
            mIsChanges = IsChange;
        }
        #endregion
    }

    public partial class CvwRoutings
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwRoutings> lstCVarvwRoutings = new List<CVarvwRoutings>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwRoutings.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListvwRoutings";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                Com.CommandTimeout = 4000;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwRoutings ObjCVarvwRoutings = new CVarvwRoutings();
                        ObjCVarvwRoutings.ID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwRoutings.mRoutingTypeID = Convert.ToInt32(dr["RoutingTypeID"].ToString());
                        ObjCVarvwRoutings.mOperationID = Convert.ToInt64(dr["OperationID"].ToString());
                        ObjCVarvwRoutings.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwRoutings.mTransportIconName = Convert.ToString(dr["TransportIconName"].ToString());
                        ObjCVarvwRoutings.mTransportIconStyle = Convert.ToString(dr["TransportIconStyle"].ToString());
                        ObjCVarvwRoutings.mPOLCountryID = Convert.ToInt32(dr["POLCountryID"].ToString());
                        ObjCVarvwRoutings.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwRoutings.mPODCountryID = Convert.ToInt32(dr["PODCountryID"].ToString());
                        ObjCVarvwRoutings.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwRoutings.mETAPOLDate = Convert.ToDateTime(dr["ETAPOLDate"].ToString());
                        ObjCVarvwRoutings.mATAPOLDate = Convert.ToDateTime(dr["ATAPOLDate"].ToString());
                        ObjCVarvwRoutings.mExpectedDeparture = Convert.ToDateTime(dr["ExpectedDeparture"].ToString());
                        ObjCVarvwRoutings.mActualDeparture = Convert.ToDateTime(dr["ActualDeparture"].ToString());
                        ObjCVarvwRoutings.mExpectedArrival = Convert.ToDateTime(dr["ExpectedArrival"].ToString());
                        ObjCVarvwRoutings.mActualArrival = Convert.ToDateTime(dr["ActualArrival"].ToString());
                        ObjCVarvwRoutings.mShippingLineID = Convert.ToInt32(dr["ShippingLineID"].ToString());
                        ObjCVarvwRoutings.mAirlineID = Convert.ToInt32(dr["AirlineID"].ToString());
                        ObjCVarvwRoutings.mTruckerID = Convert.ToInt32(dr["TruckerID"].ToString());
                        ObjCVarvwRoutings.mTransientTime = Convert.ToInt32(dr["TransientTime"].ToString());
                        ObjCVarvwRoutings.mValidity = Convert.ToInt32(dr["Validity"].ToString());
                        ObjCVarvwRoutings.mFreeTime = Convert.ToInt32(dr["FreeTime"].ToString());
                        ObjCVarvwRoutings.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwRoutings.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwRoutings.mCreatorName = Convert.ToString(dr["CreatorName"].ToString());
                        ObjCVarvwRoutings.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwRoutings.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwRoutings.mModificationDateString = Convert.ToString(dr["ModificationDateString"].ToString());
                        ObjCVarvwRoutings.mRoutingCode = Convert.ToString(dr["RoutingCode"].ToString());
                        ObjCVarvwRoutings.mRoutingName = Convert.ToString(dr["RoutingName"].ToString());
                        ObjCVarvwRoutings.mRoutingLocalName = Convert.ToString(dr["RoutingLocalName"].ToString());
                        ObjCVarvwRoutings.mViewOrder = Convert.ToInt32(dr["ViewOrder"].ToString());
                        ObjCVarvwRoutings.mPOLCountryCode = Convert.ToString(dr["POLCountryCode"].ToString());
                        ObjCVarvwRoutings.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwRoutings.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwRoutings.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwRoutings.mPODCountryCode = Convert.ToString(dr["PODCountryCode"].ToString());
                        ObjCVarvwRoutings.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwRoutings.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwRoutings.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwRoutings.mShippingLineCode = Convert.ToString(dr["ShippingLineCode"].ToString());
                        ObjCVarvwRoutings.mShippingLineName = Convert.ToString(dr["ShippingLineName"].ToString());
                        ObjCVarvwRoutings.mShippingLocalLineName = Convert.ToString(dr["ShippingLocalLineName"].ToString());
                        ObjCVarvwRoutings.mAirlineCode = Convert.ToString(dr["AirlineCode"].ToString());
                        ObjCVarvwRoutings.mAirlineName = Convert.ToString(dr["AirlineName"].ToString());
                        ObjCVarvwRoutings.mAirlineLocalName = Convert.ToString(dr["AirlineLocalName"].ToString());
                        ObjCVarvwRoutings.mTruckerCode = Convert.ToInt32(dr["TruckerCode"].ToString());
                        ObjCVarvwRoutings.mTruckerName = Convert.ToString(dr["TruckerName"].ToString());
                        ObjCVarvwRoutings.mTruckerLocalName = Convert.ToString(dr["TruckerLocalName"].ToString());
                        ObjCVarvwRoutings.mVesselID = Convert.ToInt32(dr["VesselID"].ToString());
                        ObjCVarvwRoutings.mVesselCode = Convert.ToString(dr["VesselCode"].ToString());
                        ObjCVarvwRoutings.mVesselName = Convert.ToString(dr["VesselName"].ToString());
                        ObjCVarvwRoutings.mVoyageOrTruckNumber = Convert.ToString(dr["VoyageOrTruckNumber"].ToString());
                        ObjCVarvwRoutings.mGensetSupplierID = Convert.ToInt32(dr["GensetSupplierID"].ToString());
                        ObjCVarvwRoutings.mGensetSupplierName = Convert.ToString(dr["GensetSupplierName"].ToString());
                        ObjCVarvwRoutings.mGensetSupplierLocalName = Convert.ToString(dr["GensetSupplierLocalName"].ToString());
                        ObjCVarvwRoutings.mCCAID = Convert.ToInt32(dr["CCAID"].ToString());
                        ObjCVarvwRoutings.mCCAName = Convert.ToString(dr["CCAName"].ToString());
                        ObjCVarvwRoutings.mCCALocalName = Convert.ToString(dr["CCALocalName"].ToString());
                        ObjCVarvwRoutings.mContactPerson = Convert.ToString(dr["ContactPerson"].ToString());
                        ObjCVarvwRoutings.mPickupAddress = Convert.ToString(dr["PickupAddress"].ToString());
                        ObjCVarvwRoutings.mDeliveryAddress = Convert.ToString(dr["DeliveryAddress"].ToString());
                        ObjCVarvwRoutings.mQuantity = Convert.ToString(dr["Quantity"].ToString());
                        ObjCVarvwRoutings.mGateInPortID = Convert.ToInt32(dr["GateInPortID"].ToString());
                        ObjCVarvwRoutings.mGateInPortName = Convert.ToString(dr["GateInPortName"].ToString());
                        ObjCVarvwRoutings.mGateOutPortID = Convert.ToInt32(dr["GateOutPortID"].ToString());
                        ObjCVarvwRoutings.mGateOutPortName = Convert.ToString(dr["GateOutPortName"].ToString());
                        ObjCVarvwRoutings.mGateInDate = Convert.ToString(dr["GateInDate"].ToString());
                        ObjCVarvwRoutings.mGateOutDate = Convert.ToString(dr["GateOutDate"].ToString());
                        ObjCVarvwRoutings.mStuffingDate = Convert.ToString(dr["StuffingDate"].ToString());
                        ObjCVarvwRoutings.mDeliveryDate = Convert.ToString(dr["DeliveryDate"].ToString());
                        ObjCVarvwRoutings.mBookingNumber = Convert.ToString(dr["BookingNumber"].ToString());
                        ObjCVarvwRoutings.mDelays = Convert.ToString(dr["Delays"].ToString());
                        ObjCVarvwRoutings.mDriverName = Convert.ToString(dr["DriverName"].ToString());
                        ObjCVarvwRoutings.mDriverPhones = Convert.ToString(dr["DriverPhones"].ToString());
                        ObjCVarvwRoutings.mPowerFromGateInTillActualSailing = Convert.ToString(dr["PowerFromGateInTillActualSailing"].ToString());
                        ObjCVarvwRoutings.mContactPersonPhones = Convert.ToString(dr["ContactPersonPhones"].ToString());
                        ObjCVarvwRoutings.mLoadingTime = Convert.ToString(dr["LoadingTime"].ToString());
                        ObjCVarvwRoutings.mCertificateNumber = Convert.ToString(dr["CertificateNumber"].ToString());
                        ObjCVarvwRoutings.mCertificateValue = Convert.ToString(dr["CertificateValue"].ToString());
                        ObjCVarvwRoutings.mCertificateDate = Convert.ToDateTime(dr["CertificateDate"].ToString());
                        ObjCVarvwRoutings.mQasimaNumber = Convert.ToString(dr["QasimaNumber"].ToString());
                        ObjCVarvwRoutings.mQasimaDate = Convert.ToDateTime(dr["QasimaDate"].ToString());
                        ObjCVarvwRoutings.mMatch = Convert.ToBoolean(dr["Match"].ToString());
                        ObjCVarvwRoutings.mSalesDateReceived = Convert.ToString(dr["SalesDateReceived"].ToString());
                        ObjCVarvwRoutings.mCommerceDateReceived = Convert.ToString(dr["CommerceDateReceived"].ToString());
                        ObjCVarvwRoutings.mInspectionDateReceived = Convert.ToString(dr["InspectionDateReceived"].ToString());
                        ObjCVarvwRoutings.mFinishDateReceived = Convert.ToString(dr["FinishDateReceived"].ToString());
                        ObjCVarvwRoutings.mSalesDateDelivered = Convert.ToString(dr["SalesDateDelivered"].ToString());
                        ObjCVarvwRoutings.mCommerceDateDelivered = Convert.ToString(dr["CommerceDateDelivered"].ToString());
                        ObjCVarvwRoutings.mInspectionDateDelivered = Convert.ToString(dr["InspectionDateDelivered"].ToString());
                        ObjCVarvwRoutings.mFinishDateDelivered = Convert.ToString(dr["FinishDateDelivered"].ToString());
                        ObjCVarvwRoutings.mRoadNumber = Convert.ToString(dr["RoadNumber"].ToString());
                        ObjCVarvwRoutings.mDeliveryOrderNumber = Convert.ToString(dr["DeliveryOrderNumber"].ToString());
                        ObjCVarvwRoutings.mWareHouse = Convert.ToString(dr["WareHouse"].ToString());
                        ObjCVarvwRoutings.mWareHouseLocation = Convert.ToString(dr["WareHouseLocation"].ToString());
                        ObjCVarvwRoutings.mIsOwnedByCompany = Convert.ToBoolean(dr["IsOwnedByCompany"].ToString());
                        ObjCVarvwRoutings.mTrailerID = Convert.ToInt32(dr["TrailerID"].ToString());
                        ObjCVarvwRoutings.mDriverID = Convert.ToInt32(dr["DriverID"].ToString());
                        ObjCVarvwRoutings.mDriverAssistantID = Convert.ToInt32(dr["DriverAssistantID"].ToString());
                        ObjCVarvwRoutings.mEquipmentID = Convert.ToInt32(dr["EquipmentID"].ToString());
                        ObjCVarvwRoutings.mLoadingZoneID = Convert.ToInt32(dr["LoadingZoneID"].ToString());
                        ObjCVarvwRoutings.mFirstCuringAreaID = Convert.ToInt32(dr["FirstCuringAreaID"].ToString());
                        ObjCVarvwRoutings.mSecondCuringAreaID = Convert.ToInt32(dr["SecondCuringAreaID"].ToString());
                        ObjCVarvwRoutings.mThirdCuringAreaID = Convert.ToInt32(dr["ThirdCuringAreaID"].ToString());
                        ObjCVarvwRoutings.mBillNumber = Convert.ToString(dr["BillNumber"].ToString());
                        ObjCVarvwRoutings.mTruckingOrderCode = Convert.ToString(dr["TruckingOrderCode"].ToString());
                        ObjCVarvwRoutings.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwRoutings.mOperationSerial = Convert.ToInt32(dr["OperationSerial"].ToString());
                        ObjCVarvwRoutings.mShipmentTypeCode = Convert.ToString(dr["ShipmentTypeCode"].ToString());
                        ObjCVarvwRoutings.mEquipmentNumber = Convert.ToString(dr["EquipmentNumber"].ToString());
                        ObjCVarvwRoutings.mEquipmentPlateNo = Convert.ToString(dr["EquipmentPlateNo"].ToString());
                        ObjCVarvwRoutings.mEquipmentModelName = Convert.ToString(dr["EquipmentModelName"].ToString());
                        ObjCVarvwRoutings.mEquipmentModelNameFromQuotation = Convert.ToString(dr["EquipmentModelNameFromQuotation"].ToString());
                        ObjCVarvwRoutings.mTrailerPlateNo = Convert.ToString(dr["TrailerPlateNo"].ToString());
                        ObjCVarvwRoutings.mTrailerNumber = Convert.ToString(dr["TrailerNumber"].ToString());
                        ObjCVarvwRoutings.mCargoGrossWeight = Convert.ToDecimal(dr["CargoGrossWeight"].ToString());
                        ObjCVarvwRoutings.mLoadingZone = Convert.ToString(dr["LoadingZone"].ToString());
                        ObjCVarvwRoutings.mEquipmentDriverName = Convert.ToString(dr["EquipmentDriverName"].ToString());
                        ObjCVarvwRoutings.mFirstCuringArea = Convert.ToString(dr["FirstCuringArea"].ToString());
                        ObjCVarvwRoutings.mSecondCuringArea = Convert.ToString(dr["SecondCuringArea"].ToString());
                        ObjCVarvwRoutings.mThirdCuringArea = Convert.ToString(dr["ThirdCuringArea"].ToString());
                        ObjCVarvwRoutings.mTruckCounter = Convert.ToInt32(dr["TruckCounter"].ToString());
                        ObjCVarvwRoutings.mCargoReturnGrossWeight = Convert.ToDecimal(dr["CargoReturnGrossWeight"].ToString());
                        ObjCVarvwRoutings.mCCAFreight = Convert.ToDecimal(dr["CCAFreight"].ToString());
                        ObjCVarvwRoutings.mCCAFOB = Convert.ToDecimal(dr["CCAFOB"].ToString());
                        ObjCVarvwRoutings.mCCACFValue = Convert.ToDecimal(dr["CCACFValue"].ToString());
                        ObjCVarvwRoutings.mCCAInvoiceNumber = Convert.ToString(dr["CCAInvoiceNumber"].ToString());
                        ObjCVarvwRoutings.mCCAInsurance = Convert.ToString(dr["CCAInsurance"].ToString());
                        ObjCVarvwRoutings.mCCADischargeValue = Convert.ToString(dr["CCADischargeValue"].ToString());
                        ObjCVarvwRoutings.mCCAAcceptedValue = Convert.ToString(dr["CCAAcceptedValue"].ToString());
                        ObjCVarvwRoutings.mCCAImportValue = Convert.ToString(dr["CCAImportValue"].ToString());
                        ObjCVarvwRoutings.mCCADocumentReceiveDate = Convert.ToDateTime(dr["CCADocumentReceiveDate"].ToString());
                        ObjCVarvwRoutings.mCCAExchangeRate = Convert.ToString(dr["CCAExchangeRate"].ToString());
                        ObjCVarvwRoutings.mCCAVATCertificateNumber = Convert.ToString(dr["CCAVATCertificateNumber"].ToString());
                        ObjCVarvwRoutings.mCCAVATCertificateValue = Convert.ToString(dr["CCAVATCertificateValue"].ToString());
                        ObjCVarvwRoutings.mCCACommercialProfitCertificateNumber = Convert.ToString(dr["CCACommercialProfitCertificateNumber"].ToString());
                        ObjCVarvwRoutings.mCCAOthers = Convert.ToString(dr["CCAOthers"].ToString());
                        ObjCVarvwRoutings.mCCASpendDate = Convert.ToDateTime(dr["CCASpendDate"].ToString());
                        ObjCVarvwRoutings.mIsApproved = Convert.ToBoolean(dr["IsApproved"].ToString());
                        ObjCVarvwRoutings.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwRoutings.mCustomerID = Convert.ToInt32(dr["CustomerID"].ToString());
                        ObjCVarvwRoutings.mSubContractedCustomerID = Convert.ToInt32(dr["SubContractedCustomerID"].ToString());
                        ObjCVarvwRoutings.mSubContractedCustomerName = Convert.ToString(dr["SubContractedCustomerName"].ToString());
                        ObjCVarvwRoutings.mCost = Convert.ToDecimal(dr["Cost"].ToString());
                        ObjCVarvwRoutings.mCostFromPayables = Convert.ToDecimal(dr["CostFromPayables"].ToString());
                        ObjCVarvwRoutings.mSale = Convert.ToDecimal(dr["Sale"].ToString());
                        ObjCVarvwRoutings.mContainersCount = Convert.ToInt32(dr["ContainersCount"].ToString());
                        ObjCVarvwRoutings.mVehiclesCount = Convert.ToInt32(dr["VehiclesCount"].ToString());
                        ObjCVarvwRoutings.mLastTruckCounter = Convert.ToInt32(dr["LastTruckCounter"].ToString());
                        ObjCVarvwRoutings.mOffloadingDate = Convert.ToDateTime(dr["OffloadingDate"].ToString());
                        ObjCVarvwRoutings.mMaxSupplierContainers = Convert.ToInt32(dr["MaxSupplierContainers"].ToString());
                        ObjCVarvwRoutings.mIsFleet = Convert.ToBoolean(dr["IsFleet"].ToString());
                        ObjCVarvwRoutings.mCommodityID = Convert.ToInt32(dr["CommodityID"].ToString());
                        ObjCVarvwRoutings.mCommodityName = Convert.ToString(dr["CommodityName"].ToString());
                        ObjCVarvwRoutings.mLoadingDate = Convert.ToDateTime(dr["LoadingDate"].ToString());
                        ObjCVarvwRoutings.mLoadingReference = Convert.ToString(dr["LoadingReference"].ToString());
                        ObjCVarvwRoutings.mUnloadingDate = Convert.ToDateTime(dr["UnloadingDate"].ToString());
                        ObjCVarvwRoutings.mUnloadingReference = Convert.ToString(dr["UnloadingReference"].ToString());
                        ObjCVarvwRoutings.mUnloadingTime = Convert.ToString(dr["UnloadingTime"].ToString());
                        ObjCVarvwRoutings.mstrLoadingDate = Convert.ToString(dr["strLoadingDate"].ToString());
                        ObjCVarvwRoutings.mQuotationRouteID = Convert.ToInt64(dr["QuotationRouteID"].ToString());
                        ObjCVarvwRoutings.mQuotationID = Convert.ToInt64(dr["QuotationID"].ToString());
                        ObjCVarvwRoutings.mQuotationRouteCode = Convert.ToString(dr["QuotationRouteCode"].ToString());
                        ObjCVarvwRoutings.mInvoiceID = Convert.ToInt64(dr["InvoiceID"].ToString());
                        ObjCVarvwRoutings.mInvoiceNumber = Convert.ToInt64(dr["InvoiceNumber"].ToString());
                        ObjCVarvwRoutings.mInvoiceTypeName = Convert.ToString(dr["InvoiceTypeName"].ToString());
                        ObjCVarvwRoutings.mInvoiceDate = Convert.ToDateTime(dr["InvoiceDate"].ToString());
                        ObjCVarvwRoutings.mOperationInvoicesCount = Convert.ToInt32(dr["OperationInvoicesCount"].ToString());
                        ObjCVarvwRoutings.mDivisionID = Convert.ToInt32(dr["DivisionID"].ToString());
                        ObjCVarvwRoutings.mDivisionName = Convert.ToString(dr["DivisionName"].ToString());
                        ObjCVarvwRoutings.mCCReleaseNo = Convert.ToString(dr["CCReleaseNo"].ToString());
                        ObjCVarvwRoutings.mCC_ClearanceTypeID = Convert.ToInt32(dr["CC_ClearanceTypeID"].ToString());
                        ObjCVarvwRoutings.mCC_ClearanceTypeName = Convert.ToString(dr["CC_ClearanceTypeName"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsID = Convert.ToInt32(dr["CC_CustomItemsID"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsCode = Convert.ToString(dr["CC_CustomItemsCode"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsTariffCode = Convert.ToString(dr["CC_CustomItemsTariffCode"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsArDescription = Convert.ToString(dr["CC_CustomItemsArDescription"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsEnDescription = Convert.ToString(dr["CC_CustomItemsEnDescription"].ToString());
                        ObjCVarvwRoutings.mCCDropBackDelivered = Convert.ToDateTime(dr["CCDropBackDelivered"].ToString());
                        ObjCVarvwRoutings.mCCDropBackReceived = Convert.ToDateTime(dr["CCDropBackReceived"].ToString());
                        ObjCVarvwRoutings.mCCAllowTemporaryDelivered = Convert.ToDateTime(dr["CCAllowTemporaryDelivered"].ToString());
                        ObjCVarvwRoutings.mCCAllowTemporaryReceived = Convert.ToDateTime(dr["CCAllowTemporaryReceived"].ToString());
                        ObjCVarvwRoutings.mContainerTypes = Convert.ToString(dr["ContainerTypes"].ToString());
                        ObjCVarvwRoutings.mMasterBL = Convert.ToString(dr["MasterBL"].ToString());
                        lstCVarvwRoutings.Add(ObjCVarvwRoutings);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwRoutings.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwRoutings";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                Com.CommandTimeout = 4000;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwRoutings ObjCVarvwRoutings = new CVarvwRoutings();
                        ObjCVarvwRoutings.ID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwRoutings.mRoutingTypeID = Convert.ToInt32(dr["RoutingTypeID"].ToString());
                        ObjCVarvwRoutings.mOperationID = Convert.ToInt64(dr["OperationID"].ToString());
                        ObjCVarvwRoutings.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwRoutings.mTransportIconName = Convert.ToString(dr["TransportIconName"].ToString());
                        ObjCVarvwRoutings.mTransportIconStyle = Convert.ToString(dr["TransportIconStyle"].ToString());
                        ObjCVarvwRoutings.mPOLCountryID = Convert.ToInt32(dr["POLCountryID"].ToString());
                        ObjCVarvwRoutings.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwRoutings.mPODCountryID = Convert.ToInt32(dr["PODCountryID"].ToString());
                        ObjCVarvwRoutings.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwRoutings.mETAPOLDate = Convert.ToDateTime(dr["ETAPOLDate"].ToString());
                        ObjCVarvwRoutings.mATAPOLDate = Convert.ToDateTime(dr["ATAPOLDate"].ToString());
                        ObjCVarvwRoutings.mExpectedDeparture = Convert.ToDateTime(dr["ExpectedDeparture"].ToString());
                        ObjCVarvwRoutings.mActualDeparture = Convert.ToDateTime(dr["ActualDeparture"].ToString());
                        ObjCVarvwRoutings.mExpectedArrival = Convert.ToDateTime(dr["ExpectedArrival"].ToString());
                        ObjCVarvwRoutings.mActualArrival = Convert.ToDateTime(dr["ActualArrival"].ToString());
                        ObjCVarvwRoutings.mShippingLineID = Convert.ToInt32(dr["ShippingLineID"].ToString());
                        ObjCVarvwRoutings.mAirlineID = Convert.ToInt32(dr["AirlineID"].ToString());
                        ObjCVarvwRoutings.mTruckerID = Convert.ToInt32(dr["TruckerID"].ToString());
                        ObjCVarvwRoutings.mTransientTime = Convert.ToInt32(dr["TransientTime"].ToString());
                        ObjCVarvwRoutings.mValidity = Convert.ToInt32(dr["Validity"].ToString());
                        ObjCVarvwRoutings.mFreeTime = Convert.ToInt32(dr["FreeTime"].ToString());
                        ObjCVarvwRoutings.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwRoutings.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwRoutings.mCreatorName = Convert.ToString(dr["CreatorName"].ToString());
                        ObjCVarvwRoutings.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwRoutings.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwRoutings.mModificationDateString = Convert.ToString(dr["ModificationDateString"].ToString());
                        ObjCVarvwRoutings.mRoutingCode = Convert.ToString(dr["RoutingCode"].ToString());
                        ObjCVarvwRoutings.mRoutingName = Convert.ToString(dr["RoutingName"].ToString());
                        ObjCVarvwRoutings.mRoutingLocalName = Convert.ToString(dr["RoutingLocalName"].ToString());
                        ObjCVarvwRoutings.mViewOrder = Convert.ToInt32(dr["ViewOrder"].ToString());
                        ObjCVarvwRoutings.mPOLCountryCode = Convert.ToString(dr["POLCountryCode"].ToString());
                        ObjCVarvwRoutings.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwRoutings.mPOLCode = Convert.ToString(dr["POLCode"].ToString());
                        ObjCVarvwRoutings.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwRoutings.mPODCountryCode = Convert.ToString(dr["PODCountryCode"].ToString());
                        ObjCVarvwRoutings.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwRoutings.mPODCode = Convert.ToString(dr["PODCode"].ToString());
                        ObjCVarvwRoutings.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwRoutings.mShippingLineCode = Convert.ToString(dr["ShippingLineCode"].ToString());
                        ObjCVarvwRoutings.mShippingLineName = Convert.ToString(dr["ShippingLineName"].ToString());
                        ObjCVarvwRoutings.mShippingLocalLineName = Convert.ToString(dr["ShippingLocalLineName"].ToString());
                        ObjCVarvwRoutings.mAirlineCode = Convert.ToString(dr["AirlineCode"].ToString());
                        ObjCVarvwRoutings.mAirlineName = Convert.ToString(dr["AirlineName"].ToString());
                        ObjCVarvwRoutings.mAirlineLocalName = Convert.ToString(dr["AirlineLocalName"].ToString());
                        ObjCVarvwRoutings.mTruckerCode = Convert.ToInt32(dr["TruckerCode"].ToString());
                        ObjCVarvwRoutings.mTruckerName = Convert.ToString(dr["TruckerName"].ToString());
                        ObjCVarvwRoutings.mTruckerLocalName = Convert.ToString(dr["TruckerLocalName"].ToString());
                        ObjCVarvwRoutings.mVesselID = Convert.ToInt32(dr["VesselID"].ToString());
                        ObjCVarvwRoutings.mVesselCode = Convert.ToString(dr["VesselCode"].ToString());
                        ObjCVarvwRoutings.mVesselName = Convert.ToString(dr["VesselName"].ToString());
                        ObjCVarvwRoutings.mVoyageOrTruckNumber = Convert.ToString(dr["VoyageOrTruckNumber"].ToString());
                        ObjCVarvwRoutings.mGensetSupplierID = Convert.ToInt32(dr["GensetSupplierID"].ToString());
                        ObjCVarvwRoutings.mGensetSupplierName = Convert.ToString(dr["GensetSupplierName"].ToString());
                        ObjCVarvwRoutings.mGensetSupplierLocalName = Convert.ToString(dr["GensetSupplierLocalName"].ToString());
                        ObjCVarvwRoutings.mCCAID = Convert.ToInt32(dr["CCAID"].ToString());
                        ObjCVarvwRoutings.mCCAName = Convert.ToString(dr["CCAName"].ToString());
                        ObjCVarvwRoutings.mCCALocalName = Convert.ToString(dr["CCALocalName"].ToString());
                        ObjCVarvwRoutings.mContactPerson = Convert.ToString(dr["ContactPerson"].ToString());
                        ObjCVarvwRoutings.mPickupAddress = Convert.ToString(dr["PickupAddress"].ToString());
                        ObjCVarvwRoutings.mDeliveryAddress = Convert.ToString(dr["DeliveryAddress"].ToString());
                        ObjCVarvwRoutings.mQuantity = Convert.ToString(dr["Quantity"].ToString());
                        ObjCVarvwRoutings.mGateInPortID = Convert.ToInt32(dr["GateInPortID"].ToString());
                        ObjCVarvwRoutings.mGateInPortName = Convert.ToString(dr["GateInPortName"].ToString());
                        ObjCVarvwRoutings.mGateOutPortID = Convert.ToInt32(dr["GateOutPortID"].ToString());
                        ObjCVarvwRoutings.mGateOutPortName = Convert.ToString(dr["GateOutPortName"].ToString());
                        ObjCVarvwRoutings.mGateInDate = Convert.ToString(dr["GateInDate"].ToString());
                        ObjCVarvwRoutings.mGateOutDate = Convert.ToString(dr["GateOutDate"].ToString());
                        ObjCVarvwRoutings.mStuffingDate = Convert.ToString(dr["StuffingDate"].ToString());
                        ObjCVarvwRoutings.mDeliveryDate = Convert.ToString(dr["DeliveryDate"].ToString());
                        ObjCVarvwRoutings.mBookingNumber = Convert.ToString(dr["BookingNumber"].ToString());
                        ObjCVarvwRoutings.mDelays = Convert.ToString(dr["Delays"].ToString());
                        ObjCVarvwRoutings.mDriverName = Convert.ToString(dr["DriverName"].ToString());
                        ObjCVarvwRoutings.mDriverPhones = Convert.ToString(dr["DriverPhones"].ToString());
                        ObjCVarvwRoutings.mPowerFromGateInTillActualSailing = Convert.ToString(dr["PowerFromGateInTillActualSailing"].ToString());
                        ObjCVarvwRoutings.mContactPersonPhones = Convert.ToString(dr["ContactPersonPhones"].ToString());
                        ObjCVarvwRoutings.mLoadingTime = Convert.ToString(dr["LoadingTime"].ToString());
                        ObjCVarvwRoutings.mCertificateNumber = Convert.ToString(dr["CertificateNumber"].ToString());
                        ObjCVarvwRoutings.mCertificateValue = Convert.ToString(dr["CertificateValue"].ToString());
                        ObjCVarvwRoutings.mCertificateDate = Convert.ToDateTime(dr["CertificateDate"].ToString());
                        ObjCVarvwRoutings.mQasimaNumber = Convert.ToString(dr["QasimaNumber"].ToString());
                        ObjCVarvwRoutings.mQasimaDate = Convert.ToDateTime(dr["QasimaDate"].ToString());
                        ObjCVarvwRoutings.mMatch = Convert.ToBoolean(dr["Match"].ToString());
                        ObjCVarvwRoutings.mSalesDateReceived = Convert.ToString(dr["SalesDateReceived"].ToString());
                        ObjCVarvwRoutings.mCommerceDateReceived = Convert.ToString(dr["CommerceDateReceived"].ToString());
                        ObjCVarvwRoutings.mInspectionDateReceived = Convert.ToString(dr["InspectionDateReceived"].ToString());
                        ObjCVarvwRoutings.mFinishDateReceived = Convert.ToString(dr["FinishDateReceived"].ToString());
                        ObjCVarvwRoutings.mSalesDateDelivered = Convert.ToString(dr["SalesDateDelivered"].ToString());
                        ObjCVarvwRoutings.mCommerceDateDelivered = Convert.ToString(dr["CommerceDateDelivered"].ToString());
                        ObjCVarvwRoutings.mInspectionDateDelivered = Convert.ToString(dr["InspectionDateDelivered"].ToString());
                        ObjCVarvwRoutings.mFinishDateDelivered = Convert.ToString(dr["FinishDateDelivered"].ToString());
                        ObjCVarvwRoutings.mRoadNumber = Convert.ToString(dr["RoadNumber"].ToString());
                        ObjCVarvwRoutings.mDeliveryOrderNumber = Convert.ToString(dr["DeliveryOrderNumber"].ToString());
                        ObjCVarvwRoutings.mWareHouse = Convert.ToString(dr["WareHouse"].ToString());
                        ObjCVarvwRoutings.mWareHouseLocation = Convert.ToString(dr["WareHouseLocation"].ToString());
                        ObjCVarvwRoutings.mIsOwnedByCompany = Convert.ToBoolean(dr["IsOwnedByCompany"].ToString());
                        ObjCVarvwRoutings.mTrailerID = Convert.ToInt32(dr["TrailerID"].ToString());
                        ObjCVarvwRoutings.mDriverID = Convert.ToInt32(dr["DriverID"].ToString());
                        ObjCVarvwRoutings.mDriverAssistantID = Convert.ToInt32(dr["DriverAssistantID"].ToString());
                        ObjCVarvwRoutings.mEquipmentID = Convert.ToInt32(dr["EquipmentID"].ToString());
                        ObjCVarvwRoutings.mLoadingZoneID = Convert.ToInt32(dr["LoadingZoneID"].ToString());
                        ObjCVarvwRoutings.mFirstCuringAreaID = Convert.ToInt32(dr["FirstCuringAreaID"].ToString());
                        ObjCVarvwRoutings.mSecondCuringAreaID = Convert.ToInt32(dr["SecondCuringAreaID"].ToString());
                        ObjCVarvwRoutings.mThirdCuringAreaID = Convert.ToInt32(dr["ThirdCuringAreaID"].ToString());
                        ObjCVarvwRoutings.mBillNumber = Convert.ToString(dr["BillNumber"].ToString());
                        ObjCVarvwRoutings.mTruckingOrderCode = Convert.ToString(dr["TruckingOrderCode"].ToString());
                        ObjCVarvwRoutings.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwRoutings.mOperationSerial = Convert.ToInt32(dr["OperationSerial"].ToString());
                        ObjCVarvwRoutings.mShipmentTypeCode = Convert.ToString(dr["ShipmentTypeCode"].ToString());
                        ObjCVarvwRoutings.mEquipmentNumber = Convert.ToString(dr["EquipmentNumber"].ToString());
                        ObjCVarvwRoutings.mEquipmentPlateNo = Convert.ToString(dr["EquipmentPlateNo"].ToString());
                        ObjCVarvwRoutings.mEquipmentModelName = Convert.ToString(dr["EquipmentModelName"].ToString());
                        ObjCVarvwRoutings.mEquipmentModelNameFromQuotation = Convert.ToString(dr["EquipmentModelNameFromQuotation"].ToString());
                        ObjCVarvwRoutings.mTrailerPlateNo = Convert.ToString(dr["TrailerPlateNo"].ToString());
                        ObjCVarvwRoutings.mTrailerNumber = Convert.ToString(dr["TrailerNumber"].ToString());
                        ObjCVarvwRoutings.mCargoGrossWeight = Convert.ToDecimal(dr["CargoGrossWeight"].ToString());
                        ObjCVarvwRoutings.mLoadingZone = Convert.ToString(dr["LoadingZone"].ToString());
                        ObjCVarvwRoutings.mEquipmentDriverName = Convert.ToString(dr["EquipmentDriverName"].ToString());
                        ObjCVarvwRoutings.mFirstCuringArea = Convert.ToString(dr["FirstCuringArea"].ToString());
                        ObjCVarvwRoutings.mSecondCuringArea = Convert.ToString(dr["SecondCuringArea"].ToString());
                        ObjCVarvwRoutings.mThirdCuringArea = Convert.ToString(dr["ThirdCuringArea"].ToString());
                        ObjCVarvwRoutings.mTruckCounter = Convert.ToInt32(dr["TruckCounter"].ToString());
                        ObjCVarvwRoutings.mCargoReturnGrossWeight = Convert.ToDecimal(dr["CargoReturnGrossWeight"].ToString());
                        ObjCVarvwRoutings.mCCAFreight = Convert.ToDecimal(dr["CCAFreight"].ToString());
                        ObjCVarvwRoutings.mCCAFOB = Convert.ToDecimal(dr["CCAFOB"].ToString());
                        ObjCVarvwRoutings.mCCACFValue = Convert.ToDecimal(dr["CCACFValue"].ToString());
                        ObjCVarvwRoutings.mCCAInvoiceNumber = Convert.ToString(dr["CCAInvoiceNumber"].ToString());
                        ObjCVarvwRoutings.mCCAInsurance = Convert.ToString(dr["CCAInsurance"].ToString());
                        ObjCVarvwRoutings.mCCADischargeValue = Convert.ToString(dr["CCADischargeValue"].ToString());
                        ObjCVarvwRoutings.mCCAAcceptedValue = Convert.ToString(dr["CCAAcceptedValue"].ToString());
                        ObjCVarvwRoutings.mCCAImportValue = Convert.ToString(dr["CCAImportValue"].ToString());
                        ObjCVarvwRoutings.mCCADocumentReceiveDate = Convert.ToDateTime(dr["CCADocumentReceiveDate"].ToString());
                        ObjCVarvwRoutings.mCCAExchangeRate = Convert.ToString(dr["CCAExchangeRate"].ToString());
                        ObjCVarvwRoutings.mCCAVATCertificateNumber = Convert.ToString(dr["CCAVATCertificateNumber"].ToString());
                        ObjCVarvwRoutings.mCCAVATCertificateValue = Convert.ToString(dr["CCAVATCertificateValue"].ToString());
                        ObjCVarvwRoutings.mCCACommercialProfitCertificateNumber = Convert.ToString(dr["CCACommercialProfitCertificateNumber"].ToString());
                        ObjCVarvwRoutings.mCCAOthers = Convert.ToString(dr["CCAOthers"].ToString());
                        ObjCVarvwRoutings.mCCASpendDate = Convert.ToDateTime(dr["CCASpendDate"].ToString());
                        ObjCVarvwRoutings.mIsApproved = Convert.ToBoolean(dr["IsApproved"].ToString());
                        ObjCVarvwRoutings.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwRoutings.mCustomerID = Convert.ToInt32(dr["CustomerID"].ToString());
                        ObjCVarvwRoutings.mSubContractedCustomerID = Convert.ToInt32(dr["SubContractedCustomerID"].ToString());
                        ObjCVarvwRoutings.mSubContractedCustomerName = Convert.ToString(dr["SubContractedCustomerName"].ToString());
                        ObjCVarvwRoutings.mCost = Convert.ToDecimal(dr["Cost"].ToString());
                        ObjCVarvwRoutings.mCostFromPayables = Convert.ToDecimal(dr["CostFromPayables"].ToString());
                        ObjCVarvwRoutings.mSale = Convert.ToDecimal(dr["Sale"].ToString());
                        ObjCVarvwRoutings.mContainersCount = Convert.ToInt32(dr["ContainersCount"].ToString());
                        ObjCVarvwRoutings.mVehiclesCount = Convert.ToInt32(dr["VehiclesCount"].ToString());
                        ObjCVarvwRoutings.mLastTruckCounter = Convert.ToInt32(dr["LastTruckCounter"].ToString());
                        ObjCVarvwRoutings.mOffloadingDate = Convert.ToDateTime(dr["OffloadingDate"].ToString());
                        ObjCVarvwRoutings.mMaxSupplierContainers = Convert.ToInt32(dr["MaxSupplierContainers"].ToString());
                        ObjCVarvwRoutings.mIsFleet = Convert.ToBoolean(dr["IsFleet"].ToString());
                        ObjCVarvwRoutings.mCommodityID = Convert.ToInt32(dr["CommodityID"].ToString());
                        ObjCVarvwRoutings.mCommodityName = Convert.ToString(dr["CommodityName"].ToString());
                        ObjCVarvwRoutings.mLoadingDate = Convert.ToDateTime(dr["LoadingDate"].ToString());
                        ObjCVarvwRoutings.mLoadingReference = Convert.ToString(dr["LoadingReference"].ToString());
                        ObjCVarvwRoutings.mUnloadingDate = Convert.ToDateTime(dr["UnloadingDate"].ToString());
                        ObjCVarvwRoutings.mUnloadingReference = Convert.ToString(dr["UnloadingReference"].ToString());
                        ObjCVarvwRoutings.mUnloadingTime = Convert.ToString(dr["UnloadingTime"].ToString());
                        ObjCVarvwRoutings.mstrLoadingDate = Convert.ToString(dr["strLoadingDate"].ToString());
                        ObjCVarvwRoutings.mQuotationRouteID = Convert.ToInt64(dr["QuotationRouteID"].ToString());
                        ObjCVarvwRoutings.mQuotationID = Convert.ToInt64(dr["QuotationID"].ToString());
                        ObjCVarvwRoutings.mQuotationRouteCode = Convert.ToString(dr["QuotationRouteCode"].ToString());
                        ObjCVarvwRoutings.mInvoiceID = Convert.ToInt64(dr["InvoiceID"].ToString());
                        ObjCVarvwRoutings.mInvoiceNumber = Convert.ToInt64(dr["InvoiceNumber"].ToString());
                        ObjCVarvwRoutings.mInvoiceTypeName = Convert.ToString(dr["InvoiceTypeName"].ToString());
                        ObjCVarvwRoutings.mInvoiceDate = Convert.ToDateTime(dr["InvoiceDate"].ToString());
                        ObjCVarvwRoutings.mOperationInvoicesCount = Convert.ToInt32(dr["OperationInvoicesCount"].ToString());
                        ObjCVarvwRoutings.mDivisionID = Convert.ToInt32(dr["DivisionID"].ToString());
                        ObjCVarvwRoutings.mDivisionName = Convert.ToString(dr["DivisionName"].ToString());
                        ObjCVarvwRoutings.mCCReleaseNo = Convert.ToString(dr["CCReleaseNo"].ToString());
                        ObjCVarvwRoutings.mCC_ClearanceTypeID = Convert.ToInt32(dr["CC_ClearanceTypeID"].ToString());
                        ObjCVarvwRoutings.mCC_ClearanceTypeName = Convert.ToString(dr["CC_ClearanceTypeName"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsID = Convert.ToInt32(dr["CC_CustomItemsID"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsCode = Convert.ToString(dr["CC_CustomItemsCode"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsTariffCode = Convert.ToString(dr["CC_CustomItemsTariffCode"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsArDescription = Convert.ToString(dr["CC_CustomItemsArDescription"].ToString());
                        ObjCVarvwRoutings.mCC_CustomItemsEnDescription = Convert.ToString(dr["CC_CustomItemsEnDescription"].ToString());
                        ObjCVarvwRoutings.mCCDropBackDelivered = Convert.ToDateTime(dr["CCDropBackDelivered"].ToString());
                        ObjCVarvwRoutings.mCCDropBackReceived = Convert.ToDateTime(dr["CCDropBackReceived"].ToString());
                        ObjCVarvwRoutings.mCCAllowTemporaryDelivered = Convert.ToDateTime(dr["CCAllowTemporaryDelivered"].ToString());
                        ObjCVarvwRoutings.mCCAllowTemporaryReceived = Convert.ToDateTime(dr["CCAllowTemporaryReceived"].ToString());
                        ObjCVarvwRoutings.mContainerTypes = Convert.ToString(dr["ContainerTypes"].ToString());
                        ObjCVarvwRoutings.mMasterBL = Convert.ToString(dr["MasterBL"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwRoutings.Add(ObjCVarvwRoutings);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }
}
