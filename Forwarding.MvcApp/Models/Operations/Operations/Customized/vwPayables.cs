//Com.CommandTimeout = 2000;
using System;
using System.Text;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;

/*This class is autogenerated by Khedrawy Code gen v.3.1*/
namespace Forwarding.MvcApp.Models.Operations.Operations.Generated
{
    [Serializable]
    public partial class CVarvwPayables
    {
        #region "variables"
        internal Boolean mIsChanges = false;
        internal Int64 mID;
        internal Int64 mOperationID;
        internal Int32 mChargeTypeID;
        internal Int32 mPOrC;
        internal Int32 mContainerTypeID;
        internal Int32 mMeasurementID;
        internal Decimal mQuantity;
        internal Decimal mCostPrice;
        internal Int32 mDirectionType;
        internal String mRepDirectionTypeShown;
        internal Int32 mTransportType;
        internal String mRepTransportTypeShown;
        internal Int32 mShipmentType;
        internal DateTime mOpenDate;
        internal Decimal mAmountWithoutVAT;
        internal Int32 mTaxTypeID;
        internal String mTaxTypeName;
        internal Decimal mTaxPercentage;
        internal Decimal mTaxAmount;
        internal Int32 mDiscountTypeID;
        internal String mDiscountTypeName;
        internal Decimal mDiscountPercentage;
        internal Decimal mDiscountAmount;
        internal Decimal mCostAmount;
        internal Decimal mPaidAmount;
        internal Decimal mRemainingAmount;
        internal String mPayableStatus;
        internal Decimal mInitialSalePrice;
        internal String mSupplierInvoiceNo;
        internal String mSupplierReceiptNo;
        internal DateTime mEntryDate;
        internal Decimal mExchangeRate;
        internal Int32 mCurrencyID;
        internal Int64 mGeneratingQRID;
        internal Boolean mIsDeleted;
        internal Boolean mIsApproved;
        internal Int32 mApprovingUserID;
        internal Int32 mCustodyID;
        internal String mCustodyName;
        internal String mNotes;
        internal Int32 mCreatorUserID;
        internal DateTime mCreationDate;
        internal Int32 mModificatorUserID;
        internal DateTime mModificationDate;
        internal Int64 mSupplierOperationPartnerID;
        internal Int64 mAccNoteID;
        internal String mAccNoteCode;
        internal String mOperationCode;
        internal Int64 mMasterOperationID;
        internal String mMasterOperationCode;
        internal String mMasterBL;
        internal Int32 mSupplierOperationPartnerTypeID;
        internal Int32 mSupplierPartnerTypeID;
        internal String mSupplierOperationPartnerTypeCode;
        internal String mSupplierOperationPartnerTypeName;
        internal Int32 mPartnerSupplierID;
        internal String mPartnerSupplierName;
        internal String mPartnerSupplierBankName;
        internal String mPartnerSupplierBankAccountNumber;
        internal String mPartnerSupplierLocalName;
        internal String mPartnerTypeCode;
        internal String mChargeTypeCode;
        internal String mChargeTypeName;
        internal Int32 mViewOrder;
        internal String mCode;
        internal String mName;
        internal Int32 mDefaultMeasurementID;
        internal Boolean mIsDefaultInOperations;
        internal Boolean mIsDefaultInQuotation;
        internal Boolean mIsOcean;
        internal Boolean mIsAir;
        internal Boolean mIsInland;
        internal Boolean mIsInactive;
        internal Boolean mIsUsedInPayable;
        internal Boolean mIsUsedInReceivable;
        internal String mMeasurementCode;
        internal String mMeasurementName;
        internal String mPOrCCode;
        internal String mPOrCName;
        internal String mContainerTypeCode;
        internal String mContainerTypeName;
        internal String mCurrencyCode;
        internal Int64 mReceivableID;
        internal Int64 mBillTo;
        internal String mBillToName;
        internal String mCreatorName;
        internal String mModificatorName;
        internal String mAccNoteBL;
        internal String mClientName;
        internal String mSalesman;
        internal String mOperationStageName;
        internal DateTime mIssueDate;
        internal Int32 mTrailerID;
        internal String mTrailerName;
        internal Int64 mOperationContainersAndPackagesID;
        internal String mContainerNumber;
        internal String mTankOrFlexiNumber;
        internal Int32 mOperatorID;
        internal Int64 mBillID;
        internal String mHouseNumber;
        internal String mCertificateNumber;
        internal Decimal mQuotationCost;
        internal Boolean mIsNeglectLimit;
        internal DateTime mPaymentDate;
        internal Int32 mSupplierSiteID;
        internal Boolean mIsPrinted;
        internal Int64 mOperationVehicleID;
        internal String mMotorNumber;
        internal String mChassisNumber;
        internal Int32 mTruckID;
        internal String mTruckNumber;
        internal Int64 mTruckingOrderID;
        internal Boolean mIsExcludeInTruckingOrderPrint;
        internal Boolean mIsOfficial;
        internal Decimal mOfficialAmountPaid;
        internal String mTruckingOrderCode;
        internal Boolean mIsOwnedByCompany;
        internal Boolean mIsTruckingOrderApproved;
        internal Int32 mClientID;
        internal Decimal mOfficialRemainingAmount;
        internal Decimal mChargeTypeCost;
        internal Int32 mPOL;
        internal String mPOLCountryName;
        internal String mPOLName;
        internal Int32 mPOD;
        internal String mPODCountryName;
        internal String mPODName;
        internal Int32 mPOLCountryID;
        internal Int32 mPODCountryID;
        internal Int32 mChargeTypeGroupID;
        internal String mChargeTypeGroupName;
        internal Boolean mIsTank;
        internal Decimal mInterTransitionalPrice;
        internal Int32 mInterServiceProviderDepartmentID;
        internal DateTime mExpectedArrival;
        internal DateTime mActualArrival;
        internal Int32 mVesselID;
        internal String mVesselName;
        #endregion

        #region "Methods"
        public Int64 ID
        {
            get { return mID; }
            set { mID = value; }
        }
        public Int64 OperationID
        {
            get { return mOperationID; }
            set { mOperationID = value; }
        }
        public Int32 ChargeTypeID
        {
            get { return mChargeTypeID; }
            set { mChargeTypeID = value; }
        }
        public Int32 POrC
        {
            get { return mPOrC; }
            set { mPOrC = value; }
        }
        public Int32 ContainerTypeID
        {
            get { return mContainerTypeID; }
            set { mContainerTypeID = value; }
        }
        public Int32 MeasurementID
        {
            get { return mMeasurementID; }
            set { mMeasurementID = value; }
        }
        public Decimal Quantity
        {
            get { return mQuantity; }
            set { mQuantity = value; }
        }
        public Decimal CostPrice
        {
            get { return mCostPrice; }
            set { mCostPrice = value; }
        }
        public Int32 DirectionType
        {
            get { return mDirectionType; }
            set { mDirectionType = value; }
        }
        public String RepDirectionTypeShown
        {
            get { return mRepDirectionTypeShown; }
            set { mRepDirectionTypeShown = value; }
        }
        public Int32 TransportType
        {
            get { return mTransportType; }
            set { mTransportType = value; }
        }
        public String RepTransportTypeShown
        {
            get { return mRepTransportTypeShown; }
            set { mRepTransportTypeShown = value; }
        }
        public Int32 ShipmentType
        {
            get { return mShipmentType; }
            set { mShipmentType = value; }
        }
        public DateTime OpenDate
        {
            get { return mOpenDate; }
            set { mOpenDate = value; }
        }
        public Decimal AmountWithoutVAT
        {
            get { return mAmountWithoutVAT; }
            set { mAmountWithoutVAT = value; }
        }
        public Int32 TaxTypeID
        {
            get { return mTaxTypeID; }
            set { mTaxTypeID = value; }
        }
        public String TaxTypeName
        {
            get { return mTaxTypeName; }
            set { mTaxTypeName = value; }
        }
        public Decimal TaxPercentage
        {
            get { return mTaxPercentage; }
            set { mTaxPercentage = value; }
        }
        public Decimal TaxAmount
        {
            get { return mTaxAmount; }
            set { mTaxAmount = value; }
        }
        public Int32 DiscountTypeID
        {
            get { return mDiscountTypeID; }
            set { mDiscountTypeID = value; }
        }
        public String DiscountTypeName
        {
            get { return mDiscountTypeName; }
            set { mDiscountTypeName = value; }
        }
        public Decimal DiscountPercentage
        {
            get { return mDiscountPercentage; }
            set { mDiscountPercentage = value; }
        }
        public Decimal DiscountAmount
        {
            get { return mDiscountAmount; }
            set { mDiscountAmount = value; }
        }
        public Decimal CostAmount
        {
            get { return mCostAmount; }
            set { mCostAmount = value; }
        }
        public Decimal PaidAmount
        {
            get { return mPaidAmount; }
            set { mPaidAmount = value; }
        }
        public Decimal RemainingAmount
        {
            get { return mRemainingAmount; }
            set { mRemainingAmount = value; }
        }
        public String PayableStatus
        {
            get { return mPayableStatus; }
            set { mPayableStatus = value; }
        }
        public Decimal InitialSalePrice
        {
            get { return mInitialSalePrice; }
            set { mInitialSalePrice = value; }
        }
        public String SupplierInvoiceNo
        {
            get { return mSupplierInvoiceNo; }
            set { mSupplierInvoiceNo = value; }
        }
        public String SupplierReceiptNo
        {
            get { return mSupplierReceiptNo; }
            set { mSupplierReceiptNo = value; }
        }
        public DateTime EntryDate
        {
            get { return mEntryDate; }
            set { mEntryDate = value; }
        }
        public Decimal ExchangeRate
        {
            get { return mExchangeRate; }
            set { mExchangeRate = value; }
        }
        public Int32 CurrencyID
        {
            get { return mCurrencyID; }
            set { mCurrencyID = value; }
        }
        public Int64 GeneratingQRID
        {
            get { return mGeneratingQRID; }
            set { mGeneratingQRID = value; }
        }
        public Boolean IsDeleted
        {
            get { return mIsDeleted; }
            set { mIsDeleted = value; }
        }
        public Boolean IsApproved
        {
            get { return mIsApproved; }
            set { mIsApproved = value; }
        }
        public Int32 ApprovingUserID
        {
            get { return mApprovingUserID; }
            set { mApprovingUserID = value; }
        }
        public Int32 CustodyID
        {
            get { return mCustodyID; }
            set { mCustodyID = value; }
        }
        public String CustodyName
        {
            get { return mCustodyName; }
            set { mCustodyName = value; }
        }
        public String Notes
        {
            get { return mNotes; }
            set { mNotes = value; }
        }
        public Int32 CreatorUserID
        {
            get { return mCreatorUserID; }
            set { mCreatorUserID = value; }
        }
        public DateTime CreationDate
        {
            get { return mCreationDate; }
            set { mCreationDate = value; }
        }
        public Int32 ModificatorUserID
        {
            get { return mModificatorUserID; }
            set { mModificatorUserID = value; }
        }
        public DateTime ModificationDate
        {
            get { return mModificationDate; }
            set { mModificationDate = value; }
        }
        public Int64 SupplierOperationPartnerID
        {
            get { return mSupplierOperationPartnerID; }
            set { mSupplierOperationPartnerID = value; }
        }
        public Int64 AccNoteID
        {
            get { return mAccNoteID; }
            set { mAccNoteID = value; }
        }
        public String AccNoteCode
        {
            get { return mAccNoteCode; }
            set { mAccNoteCode = value; }
        }
        public String OperationCode
        {
            get { return mOperationCode; }
            set { mOperationCode = value; }
        }
        public Int64 MasterOperationID
        {
            get { return mMasterOperationID; }
            set { mMasterOperationID = value; }
        }
        public String MasterOperationCode
        {
            get { return mMasterOperationCode; }
            set { mMasterOperationCode = value; }
        }
        public String MasterBL
        {
            get { return mMasterBL; }
            set { mMasterBL = value; }
        }
        public Int32 SupplierOperationPartnerTypeID
        {
            get { return mSupplierOperationPartnerTypeID; }
            set { mSupplierOperationPartnerTypeID = value; }
        }
        public Int32 SupplierPartnerTypeID
        {
            get { return mSupplierPartnerTypeID; }
            set { mSupplierPartnerTypeID = value; }
        }
        public String SupplierOperationPartnerTypeCode
        {
            get { return mSupplierOperationPartnerTypeCode; }
            set { mSupplierOperationPartnerTypeCode = value; }
        }
        public String SupplierOperationPartnerTypeName
        {
            get { return mSupplierOperationPartnerTypeName; }
            set { mSupplierOperationPartnerTypeName = value; }
        }
        public Int32 PartnerSupplierID
        {
            get { return mPartnerSupplierID; }
            set { mPartnerSupplierID = value; }
        }
        public String PartnerSupplierName
        {
            get { return mPartnerSupplierName; }
            set { mPartnerSupplierName = value; }
        }
        public String PartnerSupplierBankName
        {
            get { return mPartnerSupplierBankName; }
            set { mPartnerSupplierBankName = value; }
        }
        public String PartnerSupplierBankAccountNumber
        {
            get { return mPartnerSupplierBankAccountNumber; }
            set { mPartnerSupplierBankAccountNumber = value; }
        }
        public String PartnerSupplierLocalName
        {
            get { return mPartnerSupplierLocalName; }
            set { mPartnerSupplierLocalName = value; }
        }
        public String PartnerTypeCode
        {
            get { return mPartnerTypeCode; }
            set { mPartnerTypeCode = value; }
        }
        public String ChargeTypeCode
        {
            get { return mChargeTypeCode; }
            set { mChargeTypeCode = value; }
        }
        public String ChargeTypeName
        {
            get { return mChargeTypeName; }
            set { mChargeTypeName = value; }
        }
        public Int32 ViewOrder
        {
            get { return mViewOrder; }
            set { mViewOrder = value; }
        }
        public String Code
        {
            get { return mCode; }
            set { mCode = value; }
        }
        public String Name
        {
            get { return mName; }
            set { mName = value; }
        }
        public Int32 DefaultMeasurementID
        {
            get { return mDefaultMeasurementID; }
            set { mDefaultMeasurementID = value; }
        }
        public Boolean IsDefaultInOperations
        {
            get { return mIsDefaultInOperations; }
            set { mIsDefaultInOperations = value; }
        }
        public Boolean IsDefaultInQuotation
        {
            get { return mIsDefaultInQuotation; }
            set { mIsDefaultInQuotation = value; }
        }
        public Boolean IsOcean
        {
            get { return mIsOcean; }
            set { mIsOcean = value; }
        }
        public Boolean IsAir
        {
            get { return mIsAir; }
            set { mIsAir = value; }
        }
        public Boolean IsInland
        {
            get { return mIsInland; }
            set { mIsInland = value; }
        }
        public Boolean IsInactive
        {
            get { return mIsInactive; }
            set { mIsInactive = value; }
        }
        public Boolean IsUsedInPayable
        {
            get { return mIsUsedInPayable; }
            set { mIsUsedInPayable = value; }
        }
        public Boolean IsUsedInReceivable
        {
            get { return mIsUsedInReceivable; }
            set { mIsUsedInReceivable = value; }
        }
        public String MeasurementCode
        {
            get { return mMeasurementCode; }
            set { mMeasurementCode = value; }
        }
        public String MeasurementName
        {
            get { return mMeasurementName; }
            set { mMeasurementName = value; }
        }
        public String POrCCode
        {
            get { return mPOrCCode; }
            set { mPOrCCode = value; }
        }
        public String POrCName
        {
            get { return mPOrCName; }
            set { mPOrCName = value; }
        }
        public String ContainerTypeCode
        {
            get { return mContainerTypeCode; }
            set { mContainerTypeCode = value; }
        }
        public String ContainerTypeName
        {
            get { return mContainerTypeName; }
            set { mContainerTypeName = value; }
        }
        public String CurrencyCode
        {
            get { return mCurrencyCode; }
            set { mCurrencyCode = value; }
        }
        public Int64 ReceivableID
        {
            get { return mReceivableID; }
            set { mReceivableID = value; }
        }
        public Int64 BillTo
        {
            get { return mBillTo; }
            set { mBillTo = value; }
        }
        public String BillToName
        {
            get { return mBillToName; }
            set { mBillToName = value; }
        }
        public String CreatorName
        {
            get { return mCreatorName; }
            set { mCreatorName = value; }
        }
        public String ModificatorName
        {
            get { return mModificatorName; }
            set { mModificatorName = value; }
        }
        public String AccNoteBL
        {
            get { return mAccNoteBL; }
            set { mAccNoteBL = value; }
        }
        public String ClientName
        {
            get { return mClientName; }
            set { mClientName = value; }
        }
        public String Salesman
        {
            get { return mSalesman; }
            set { mSalesman = value; }
        }
        public String OperationStageName
        {
            get { return mOperationStageName; }
            set { mOperationStageName = value; }
        }
        public DateTime IssueDate
        {
            get { return mIssueDate; }
            set { mIssueDate = value; }
        }
        public Int32 TrailerID
        {
            get { return mTrailerID; }
            set { mTrailerID = value; }
        }
        public String TrailerName
        {
            get { return mTrailerName; }
            set { mTrailerName = value; }
        }
        public Int64 OperationContainersAndPackagesID
        {
            get { return mOperationContainersAndPackagesID; }
            set { mOperationContainersAndPackagesID = value; }
        }
        public String ContainerNumber
        {
            get { return mContainerNumber; }
            set { mContainerNumber = value; }
        }
        public String TankOrFlexiNumber
        {
            get { return mTankOrFlexiNumber; }
            set { mTankOrFlexiNumber = value; }
        }
        public Int32 OperatorID
        {
            get { return mOperatorID; }
            set { mOperatorID = value; }
        }
        public Int64 BillID
        {
            get { return mBillID; }
            set { mBillID = value; }
        }
        public String HouseNumber
        {
            get { return mHouseNumber; }
            set { mHouseNumber = value; }
        }
        public String CertificateNumber
        {
            get { return mCertificateNumber; }
            set { mCertificateNumber = value; }
        }
        public Decimal QuotationCost
        {
            get { return mQuotationCost; }
            set { mQuotationCost = value; }
        }
        public Boolean IsNeglectLimit
        {
            get { return mIsNeglectLimit; }
            set { mIsNeglectLimit = value; }
        }
        public DateTime PaymentDate
        {
            get { return mPaymentDate; }
            set { mPaymentDate = value; }
        }
        public Int32 SupplierSiteID
        {
            get { return mSupplierSiteID; }
            set { mSupplierSiteID = value; }
        }
        public Boolean IsPrinted
        {
            get { return mIsPrinted; }
            set { mIsPrinted = value; }
        }
        public Int64 OperationVehicleID
        {
            get { return mOperationVehicleID; }
            set { mOperationVehicleID = value; }
        }
        public String MotorNumber
        {
            get { return mMotorNumber; }
            set { mMotorNumber = value; }
        }
        public String ChassisNumber
        {
            get { return mChassisNumber; }
            set { mChassisNumber = value; }
        }
        public Int32 TruckID
        {
            get { return mTruckID; }
            set { mTruckID = value; }
        }
        public String TruckNumber
        {
            get { return mTruckNumber; }
            set { mTruckNumber = value; }
        }
        public Int64 TruckingOrderID
        {
            get { return mTruckingOrderID; }
            set { mTruckingOrderID = value; }
        }
        public Boolean IsExcludeInTruckingOrderPrint
        {
            get { return mIsExcludeInTruckingOrderPrint; }
            set { mIsExcludeInTruckingOrderPrint = value; }
        }
        public Boolean IsOfficial
        {
            get { return mIsOfficial; }
            set { mIsOfficial = value; }
        }
        public Decimal OfficialAmountPaid
        {
            get { return mOfficialAmountPaid; }
            set { mOfficialAmountPaid = value; }
        }
        public String TruckingOrderCode
        {
            get { return mTruckingOrderCode; }
            set { mTruckingOrderCode = value; }
        }
        public Boolean IsOwnedByCompany
        {
            get { return mIsOwnedByCompany; }
            set { mIsOwnedByCompany = value; }
        }
        public Boolean IsTruckingOrderApproved
        {
            get { return mIsTruckingOrderApproved; }
            set { mIsTruckingOrderApproved = value; }
        }
        public Int32 ClientID
        {
            get { return mClientID; }
            set { mClientID = value; }
        }
        public Decimal OfficialRemainingAmount
        {
            get { return mOfficialRemainingAmount; }
            set { mOfficialRemainingAmount = value; }
        }
        public Decimal ChargeTypeCost
        {
            get { return mChargeTypeCost; }
            set { mChargeTypeCost = value; }
        }
        public Int32 POL
        {
            get { return mPOL; }
            set { mPOL = value; }
        }
        public String POLCountryName
        {
            get { return mPOLCountryName; }
            set { mPOLCountryName = value; }
        }
        public String POLName
        {
            get { return mPOLName; }
            set { mPOLName = value; }
        }
        public Int32 POD
        {
            get { return mPOD; }
            set { mPOD = value; }
        }
        public String PODCountryName
        {
            get { return mPODCountryName; }
            set { mPODCountryName = value; }
        }
        public String PODName
        {
            get { return mPODName; }
            set { mPODName = value; }
        }
        public Int32 POLCountryID
        {
            get { return mPOLCountryID; }
            set { mPOLCountryID = value; }
        }
        public Int32 PODCountryID
        {
            get { return mPODCountryID; }
            set { mPODCountryID = value; }
        }
        public Int32 ChargeTypeGroupID
        {
            get { return mChargeTypeGroupID; }
            set { mChargeTypeGroupID = value; }
        }
        public String ChargeTypeGroupName
        {
            get { return mChargeTypeGroupName; }
            set { mChargeTypeGroupName = value; }
        }
        public Boolean IsTank
        {
            get { return mIsTank; }
            set { mIsTank = value; }
        }
        public Decimal InterTransitionalPrice
        {
            get { return mInterTransitionalPrice; }
            set { mInterTransitionalPrice = value; }
        }
        public Int32 InterServiceProviderDepartmentID
        {
            get { return mInterServiceProviderDepartmentID; }
            set { mInterServiceProviderDepartmentID = value; }
        }
        public DateTime ExpectedArrival
        {
            get { return mExpectedArrival; }
            set { mExpectedArrival = value; }
        }
        public DateTime ActualArrival
        {
            get { return mActualArrival; }
            set { mActualArrival = value; }
        }
        public Int32 VesselID
        {
            get { return mVesselID; }
            set { mVesselID = value; }
        }
        public String VesselName
        {
            get { return mVesselName; }
            set { mVesselName = value; }
        }
        #endregion
    }

    public partial class CvwPayables
    {
        #region "variables"
        /*If "App.Config" isnot exist add it to your Application
		Add this code after <Configuration> tag
		-------------------------------------------------------
		<appsettings>
		<add key="ConnectionString" value="............"/>
		</appsettings>
		-------------------------------------------------------
		where ".........." is connection string to database server*/
        private SqlTransaction tr;
        public List<CVarvwPayables> lstCVarvwPayables = new List<CVarvwPayables>();
        #endregion

        #region "Select Methods"
        public Exception GetList(string WhereClause)
        {
            return DataFill(WhereClause, true);
        }
        public Exception GetListPaging(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotalRecords)
        {
            return DataFill(PageSize, PageNumber, WhereClause, OrderBy, out TotalRecords);
        }
        private Exception DataFill(string Param, Boolean IsList)
        {
            Exception Exp = null;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwPayables.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                if (IsList == true)
                {
                    Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                    Com.CommandText = "[dbo].GetListvwPayables";
                    Com.Parameters[0].Value = Param;
                }
                Com.Transaction = tr;
                Com.Connection = Con;
                Com.CommandTimeout = 2000;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwPayables ObjCVarvwPayables = new CVarvwPayables();
                        ObjCVarvwPayables.mID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwPayables.mOperationID = Convert.ToInt64(dr["OperationID"].ToString());
                        ObjCVarvwPayables.mChargeTypeID = Convert.ToInt32(dr["ChargeTypeID"].ToString());
                        ObjCVarvwPayables.mPOrC = Convert.ToInt32(dr["POrC"].ToString());
                        ObjCVarvwPayables.mContainerTypeID = Convert.ToInt32(dr["ContainerTypeID"].ToString());
                        ObjCVarvwPayables.mMeasurementID = Convert.ToInt32(dr["MeasurementID"].ToString());
                        ObjCVarvwPayables.mQuantity = Convert.ToDecimal(dr["Quantity"].ToString());
                        ObjCVarvwPayables.mCostPrice = Convert.ToDecimal(dr["CostPrice"].ToString());
                        ObjCVarvwPayables.mDirectionType = Convert.ToInt32(dr["DirectionType"].ToString());
                        ObjCVarvwPayables.mRepDirectionTypeShown = Convert.ToString(dr["RepDirectionTypeShown"].ToString());
                        ObjCVarvwPayables.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwPayables.mRepTransportTypeShown = Convert.ToString(dr["RepTransportTypeShown"].ToString());
                        ObjCVarvwPayables.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwPayables.mOpenDate = Convert.ToDateTime(dr["OpenDate"].ToString());
                        ObjCVarvwPayables.mAmountWithoutVAT = Convert.ToDecimal(dr["AmountWithoutVAT"].ToString());
                        ObjCVarvwPayables.mTaxTypeID = Convert.ToInt32(dr["TaxTypeID"].ToString());
                        ObjCVarvwPayables.mTaxTypeName = Convert.ToString(dr["TaxTypeName"].ToString());
                        ObjCVarvwPayables.mTaxPercentage = Convert.ToDecimal(dr["TaxPercentage"].ToString());
                        ObjCVarvwPayables.mTaxAmount = Convert.ToDecimal(dr["TaxAmount"].ToString());
                        ObjCVarvwPayables.mDiscountTypeID = Convert.ToInt32(dr["DiscountTypeID"].ToString());
                        ObjCVarvwPayables.mDiscountTypeName = Convert.ToString(dr["DiscountTypeName"].ToString());
                        ObjCVarvwPayables.mDiscountPercentage = Convert.ToDecimal(dr["DiscountPercentage"].ToString());
                        ObjCVarvwPayables.mDiscountAmount = Convert.ToDecimal(dr["DiscountAmount"].ToString());
                        ObjCVarvwPayables.mCostAmount = Convert.ToDecimal(dr["CostAmount"].ToString());
                        ObjCVarvwPayables.mPaidAmount = Convert.ToDecimal(dr["PaidAmount"].ToString());
                        ObjCVarvwPayables.mRemainingAmount = Convert.ToDecimal(dr["RemainingAmount"].ToString());
                        ObjCVarvwPayables.mPayableStatus = Convert.ToString(dr["PayableStatus"].ToString());
                        ObjCVarvwPayables.mInitialSalePrice = Convert.ToDecimal(dr["InitialSalePrice"].ToString());
                        ObjCVarvwPayables.mSupplierInvoiceNo = Convert.ToString(dr["SupplierInvoiceNo"].ToString());
                        ObjCVarvwPayables.mSupplierReceiptNo = Convert.ToString(dr["SupplierReceiptNo"].ToString());
                        ObjCVarvwPayables.mEntryDate = Convert.ToDateTime(dr["EntryDate"].ToString());
                        ObjCVarvwPayables.mExchangeRate = Convert.ToDecimal(dr["ExchangeRate"].ToString());
                        ObjCVarvwPayables.mCurrencyID = Convert.ToInt32(dr["CurrencyID"].ToString());
                        ObjCVarvwPayables.mGeneratingQRID = Convert.ToInt64(dr["GeneratingQRID"].ToString());
                        ObjCVarvwPayables.mIsDeleted = Convert.ToBoolean(dr["IsDeleted"].ToString());
                        ObjCVarvwPayables.mIsApproved = Convert.ToBoolean(dr["IsApproved"].ToString());
                        ObjCVarvwPayables.mApprovingUserID = Convert.ToInt32(dr["ApprovingUserID"].ToString());
                        ObjCVarvwPayables.mCustodyID = Convert.ToInt32(dr["CustodyID"].ToString());
                        ObjCVarvwPayables.mCustodyName = Convert.ToString(dr["CustodyName"].ToString());
                        ObjCVarvwPayables.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwPayables.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwPayables.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwPayables.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwPayables.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarvwPayables.mSupplierOperationPartnerID = Convert.ToInt64(dr["SupplierOperationPartnerID"].ToString());
                        ObjCVarvwPayables.mAccNoteID = Convert.ToInt64(dr["AccNoteID"].ToString());
                        ObjCVarvwPayables.mAccNoteCode = Convert.ToString(dr["AccNoteCode"].ToString());
                        ObjCVarvwPayables.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwPayables.mMasterOperationID = Convert.ToInt64(dr["MasterOperationID"].ToString());
                        ObjCVarvwPayables.mMasterOperationCode = Convert.ToString(dr["MasterOperationCode"].ToString());
                        ObjCVarvwPayables.mMasterBL = Convert.ToString(dr["MasterBL"].ToString());
                        ObjCVarvwPayables.mSupplierOperationPartnerTypeID = Convert.ToInt32(dr["SupplierOperationPartnerTypeID"].ToString());
                        ObjCVarvwPayables.mSupplierPartnerTypeID = Convert.ToInt32(dr["SupplierPartnerTypeID"].ToString());
                        ObjCVarvwPayables.mSupplierOperationPartnerTypeCode = Convert.ToString(dr["SupplierOperationPartnerTypeCode"].ToString());
                        ObjCVarvwPayables.mSupplierOperationPartnerTypeName = Convert.ToString(dr["SupplierOperationPartnerTypeName"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierID = Convert.ToInt32(dr["PartnerSupplierID"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierName = Convert.ToString(dr["PartnerSupplierName"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierBankName = Convert.ToString(dr["PartnerSupplierBankName"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierBankAccountNumber = Convert.ToString(dr["PartnerSupplierBankAccountNumber"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierLocalName = Convert.ToString(dr["PartnerSupplierLocalName"].ToString());
                        ObjCVarvwPayables.mPartnerTypeCode = Convert.ToString(dr["PartnerTypeCode"].ToString());
                        ObjCVarvwPayables.mChargeTypeCode = Convert.ToString(dr["ChargeTypeCode"].ToString());
                        ObjCVarvwPayables.mChargeTypeName = Convert.ToString(dr["ChargeTypeName"].ToString());
                        ObjCVarvwPayables.mViewOrder = Convert.ToInt32(dr["ViewOrder"].ToString());
                        ObjCVarvwPayables.mCode = Convert.ToString(dr["Code"].ToString());
                        ObjCVarvwPayables.mName = Convert.ToString(dr["Name"].ToString());
                        ObjCVarvwPayables.mDefaultMeasurementID = Convert.ToInt32(dr["DefaultMeasurementID"].ToString());
                        ObjCVarvwPayables.mIsDefaultInOperations = Convert.ToBoolean(dr["IsDefaultInOperations"].ToString());
                        ObjCVarvwPayables.mIsDefaultInQuotation = Convert.ToBoolean(dr["IsDefaultInQuotation"].ToString());
                        ObjCVarvwPayables.mIsOcean = Convert.ToBoolean(dr["IsOcean"].ToString());
                        ObjCVarvwPayables.mIsAir = Convert.ToBoolean(dr["IsAir"].ToString());
                        ObjCVarvwPayables.mIsInland = Convert.ToBoolean(dr["IsInland"].ToString());
                        ObjCVarvwPayables.mIsInactive = Convert.ToBoolean(dr["IsInactive"].ToString());
                        ObjCVarvwPayables.mIsUsedInPayable = Convert.ToBoolean(dr["IsUsedInPayable"].ToString());
                        ObjCVarvwPayables.mIsUsedInReceivable = Convert.ToBoolean(dr["IsUsedInReceivable"].ToString());
                        ObjCVarvwPayables.mMeasurementCode = Convert.ToString(dr["MeasurementCode"].ToString());
                        ObjCVarvwPayables.mMeasurementName = Convert.ToString(dr["MeasurementName"].ToString());
                        ObjCVarvwPayables.mPOrCCode = Convert.ToString(dr["POrCCode"].ToString());
                        ObjCVarvwPayables.mPOrCName = Convert.ToString(dr["POrCName"].ToString());
                        ObjCVarvwPayables.mContainerTypeCode = Convert.ToString(dr["ContainerTypeCode"].ToString());
                        ObjCVarvwPayables.mContainerTypeName = Convert.ToString(dr["ContainerTypeName"].ToString());
                        ObjCVarvwPayables.mCurrencyCode = Convert.ToString(dr["CurrencyCode"].ToString());
                        ObjCVarvwPayables.mReceivableID = Convert.ToInt64(dr["ReceivableID"].ToString());
                        ObjCVarvwPayables.mBillTo = Convert.ToInt64(dr["BillTo"].ToString());
                        ObjCVarvwPayables.mBillToName = Convert.ToString(dr["BillToName"].ToString());
                        ObjCVarvwPayables.mCreatorName = Convert.ToString(dr["CreatorName"].ToString());
                        ObjCVarvwPayables.mModificatorName = Convert.ToString(dr["ModificatorName"].ToString());
                        ObjCVarvwPayables.mAccNoteBL = Convert.ToString(dr["AccNoteBL"].ToString());
                        ObjCVarvwPayables.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwPayables.mSalesman = Convert.ToString(dr["Salesman"].ToString());
                        ObjCVarvwPayables.mOperationStageName = Convert.ToString(dr["OperationStageName"].ToString());
                        ObjCVarvwPayables.mIssueDate = Convert.ToDateTime(dr["IssueDate"].ToString());
                        ObjCVarvwPayables.mTrailerID = Convert.ToInt32(dr["TrailerID"].ToString());
                        ObjCVarvwPayables.mTrailerName = Convert.ToString(dr["TrailerName"].ToString());
                        ObjCVarvwPayables.mOperationContainersAndPackagesID = Convert.ToInt64(dr["OperationContainersAndPackagesID"].ToString());
                        ObjCVarvwPayables.mContainerNumber = Convert.ToString(dr["ContainerNumber"].ToString());
                        ObjCVarvwPayables.mTankOrFlexiNumber = Convert.ToString(dr["TankOrFlexiNumber"].ToString());
                        ObjCVarvwPayables.mOperatorID = Convert.ToInt32(dr["OperatorID"].ToString());
                        ObjCVarvwPayables.mBillID = Convert.ToInt64(dr["BillID"].ToString());
                        ObjCVarvwPayables.mHouseNumber = Convert.ToString(dr["HouseNumber"].ToString());
                        ObjCVarvwPayables.mCertificateNumber = Convert.ToString(dr["CertificateNumber"].ToString());
                        ObjCVarvwPayables.mQuotationCost = Convert.ToDecimal(dr["QuotationCost"].ToString());
                        ObjCVarvwPayables.mIsNeglectLimit = Convert.ToBoolean(dr["IsNeglectLimit"].ToString());
                        ObjCVarvwPayables.mPaymentDate = Convert.ToDateTime(dr["PaymentDate"].ToString());
                        ObjCVarvwPayables.mSupplierSiteID = Convert.ToInt32(dr["SupplierSiteID"].ToString());
                        ObjCVarvwPayables.mIsPrinted = Convert.ToBoolean(dr["IsPrinted"].ToString());
                        ObjCVarvwPayables.mOperationVehicleID = Convert.ToInt64(dr["OperationVehicleID"].ToString());
                        ObjCVarvwPayables.mMotorNumber = Convert.ToString(dr["MotorNumber"].ToString());
                        ObjCVarvwPayables.mChassisNumber = Convert.ToString(dr["ChassisNumber"].ToString());
                        ObjCVarvwPayables.mTruckID = Convert.ToInt32(dr["TruckID"].ToString());
                        ObjCVarvwPayables.mTruckNumber = Convert.ToString(dr["TruckNumber"].ToString());
                        ObjCVarvwPayables.mTruckingOrderID = Convert.ToInt64(dr["TruckingOrderID"].ToString());
                        ObjCVarvwPayables.mIsExcludeInTruckingOrderPrint = Convert.ToBoolean(dr["IsExcludeInTruckingOrderPrint"].ToString());
                        ObjCVarvwPayables.mIsOfficial = Convert.ToBoolean(dr["IsOfficial"].ToString());
                        ObjCVarvwPayables.mOfficialAmountPaid = Convert.ToDecimal(dr["OfficialAmountPaid"].ToString());
                        ObjCVarvwPayables.mTruckingOrderCode = Convert.ToString(dr["TruckingOrderCode"].ToString());
                        ObjCVarvwPayables.mIsOwnedByCompany = Convert.ToBoolean(dr["IsOwnedByCompany"].ToString());
                        ObjCVarvwPayables.mIsTruckingOrderApproved = Convert.ToBoolean(dr["IsTruckingOrderApproved"].ToString());
                        ObjCVarvwPayables.mClientID = Convert.ToInt32(dr["ClientID"].ToString());
                        ObjCVarvwPayables.mOfficialRemainingAmount = Convert.ToDecimal(dr["OfficialRemainingAmount"].ToString());
                        ObjCVarvwPayables.mChargeTypeCost = Convert.ToDecimal(dr["ChargeTypeCost"].ToString());
                        ObjCVarvwPayables.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwPayables.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwPayables.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwPayables.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwPayables.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwPayables.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwPayables.mPOLCountryID = Convert.ToInt32(dr["POLCountryID"].ToString());
                        ObjCVarvwPayables.mPODCountryID = Convert.ToInt32(dr["PODCountryID"].ToString());
                        ObjCVarvwPayables.mChargeTypeGroupID = Convert.ToInt32(dr["ChargeTypeGroupID"].ToString());
                        ObjCVarvwPayables.mChargeTypeGroupName = Convert.ToString(dr["ChargeTypeGroupName"].ToString());
                        ObjCVarvwPayables.mIsTank = Convert.ToBoolean(dr["IsTank"].ToString());
                        ObjCVarvwPayables.mInterTransitionalPrice = Convert.ToDecimal(dr["InterTransitionalPrice"].ToString());
                        ObjCVarvwPayables.mInterServiceProviderDepartmentID = Convert.ToInt32(dr["InterServiceProviderDepartmentID"].ToString());
                        ObjCVarvwPayables.mExpectedArrival = Convert.ToDateTime(dr["ExpectedArrival"].ToString());
                        ObjCVarvwPayables.mActualArrival = Convert.ToDateTime(dr["ActualArrival"].ToString());
                        ObjCVarvwPayables.mVesselID = Convert.ToInt32(dr["VesselID"].ToString());
                        ObjCVarvwPayables.mVesselName = Convert.ToString(dr["VesselName"].ToString());
                        lstCVarvwPayables.Add(ObjCVarvwPayables);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        private Exception DataFill(Int32 PageSize, Int32 PageNumber, string WhereClause, string OrderBy, out Int32 TotRecs)
        {
            Exception Exp = null;
            TotRecs = 0;
            SqlConnection Con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ToString());
            SqlCommand Com;
            SqlDataReader dr;
            lstCVarvwPayables.Clear();

            try
            {
                Con.Open();
                tr = Con.BeginTransaction(IsolationLevel.ReadCommitted);
                Com = new SqlCommand();
                Com.CommandType = CommandType.StoredProcedure;
                Com.Parameters.Add(new SqlParameter("@PageSize", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@PageNumber", SqlDbType.Int));
                Com.Parameters.Add(new SqlParameter("@WhereClause", SqlDbType.NVarChar));
                Com.Parameters.Add(new SqlParameter("@OrderBy", SqlDbType.VarChar));
                Com.CommandText = "[dbo].GetListPagingvwPayables";
                Com.Parameters[0].Value = PageSize;
                Com.Parameters[1].Value = PageNumber;
                Com.Parameters[2].Value = WhereClause;
                Com.Parameters[3].Value = OrderBy;
                Com.Transaction = tr;
                Com.Connection = Con;
                Com.CommandTimeout = 2000;
                dr = Com.ExecuteReader();
                try
                {
                    while (dr.Read())
                    {
                        /*Start DataReader*/
                        CVarvwPayables ObjCVarvwPayables = new CVarvwPayables();
                        ObjCVarvwPayables.mID = Convert.ToInt64(dr["ID"].ToString());
                        ObjCVarvwPayables.mOperationID = Convert.ToInt64(dr["OperationID"].ToString());
                        ObjCVarvwPayables.mChargeTypeID = Convert.ToInt32(dr["ChargeTypeID"].ToString());
                        ObjCVarvwPayables.mPOrC = Convert.ToInt32(dr["POrC"].ToString());
                        ObjCVarvwPayables.mContainerTypeID = Convert.ToInt32(dr["ContainerTypeID"].ToString());
                        ObjCVarvwPayables.mMeasurementID = Convert.ToInt32(dr["MeasurementID"].ToString());
                        ObjCVarvwPayables.mQuantity = Convert.ToDecimal(dr["Quantity"].ToString());
                        ObjCVarvwPayables.mCostPrice = Convert.ToDecimal(dr["CostPrice"].ToString());
                        ObjCVarvwPayables.mDirectionType = Convert.ToInt32(dr["DirectionType"].ToString());
                        ObjCVarvwPayables.mRepDirectionTypeShown = Convert.ToString(dr["RepDirectionTypeShown"].ToString());
                        ObjCVarvwPayables.mTransportType = Convert.ToInt32(dr["TransportType"].ToString());
                        ObjCVarvwPayables.mRepTransportTypeShown = Convert.ToString(dr["RepTransportTypeShown"].ToString());
                        ObjCVarvwPayables.mShipmentType = Convert.ToInt32(dr["ShipmentType"].ToString());
                        ObjCVarvwPayables.mOpenDate = Convert.ToDateTime(dr["OpenDate"].ToString());
                        ObjCVarvwPayables.mAmountWithoutVAT = Convert.ToDecimal(dr["AmountWithoutVAT"].ToString());
                        ObjCVarvwPayables.mTaxTypeID = Convert.ToInt32(dr["TaxTypeID"].ToString());
                        ObjCVarvwPayables.mTaxTypeName = Convert.ToString(dr["TaxTypeName"].ToString());
                        ObjCVarvwPayables.mTaxPercentage = Convert.ToDecimal(dr["TaxPercentage"].ToString());
                        ObjCVarvwPayables.mTaxAmount = Convert.ToDecimal(dr["TaxAmount"].ToString());
                        ObjCVarvwPayables.mDiscountTypeID = Convert.ToInt32(dr["DiscountTypeID"].ToString());
                        ObjCVarvwPayables.mDiscountTypeName = Convert.ToString(dr["DiscountTypeName"].ToString());
                        ObjCVarvwPayables.mDiscountPercentage = Convert.ToDecimal(dr["DiscountPercentage"].ToString());
                        ObjCVarvwPayables.mDiscountAmount = Convert.ToDecimal(dr["DiscountAmount"].ToString());
                        ObjCVarvwPayables.mCostAmount = Convert.ToDecimal(dr["CostAmount"].ToString());
                        ObjCVarvwPayables.mPaidAmount = Convert.ToDecimal(dr["PaidAmount"].ToString());
                        ObjCVarvwPayables.mRemainingAmount = Convert.ToDecimal(dr["RemainingAmount"].ToString());
                        ObjCVarvwPayables.mPayableStatus = Convert.ToString(dr["PayableStatus"].ToString());
                        ObjCVarvwPayables.mInitialSalePrice = Convert.ToDecimal(dr["InitialSalePrice"].ToString());
                        ObjCVarvwPayables.mSupplierInvoiceNo = Convert.ToString(dr["SupplierInvoiceNo"].ToString());
                        ObjCVarvwPayables.mSupplierReceiptNo = Convert.ToString(dr["SupplierReceiptNo"].ToString());
                        ObjCVarvwPayables.mEntryDate = Convert.ToDateTime(dr["EntryDate"].ToString());
                        ObjCVarvwPayables.mExchangeRate = Convert.ToDecimal(dr["ExchangeRate"].ToString());
                        ObjCVarvwPayables.mCurrencyID = Convert.ToInt32(dr["CurrencyID"].ToString());
                        ObjCVarvwPayables.mGeneratingQRID = Convert.ToInt64(dr["GeneratingQRID"].ToString());
                        ObjCVarvwPayables.mIsDeleted = Convert.ToBoolean(dr["IsDeleted"].ToString());
                        ObjCVarvwPayables.mIsApproved = Convert.ToBoolean(dr["IsApproved"].ToString());
                        ObjCVarvwPayables.mApprovingUserID = Convert.ToInt32(dr["ApprovingUserID"].ToString());
                        ObjCVarvwPayables.mCustodyID = Convert.ToInt32(dr["CustodyID"].ToString());
                        ObjCVarvwPayables.mCustodyName = Convert.ToString(dr["CustodyName"].ToString());
                        ObjCVarvwPayables.mNotes = Convert.ToString(dr["Notes"].ToString());
                        ObjCVarvwPayables.mCreatorUserID = Convert.ToInt32(dr["CreatorUserID"].ToString());
                        ObjCVarvwPayables.mCreationDate = Convert.ToDateTime(dr["CreationDate"].ToString());
                        ObjCVarvwPayables.mModificatorUserID = Convert.ToInt32(dr["ModificatorUserID"].ToString());
                        ObjCVarvwPayables.mModificationDate = Convert.ToDateTime(dr["ModificationDate"].ToString());
                        ObjCVarvwPayables.mSupplierOperationPartnerID = Convert.ToInt64(dr["SupplierOperationPartnerID"].ToString());
                        ObjCVarvwPayables.mAccNoteID = Convert.ToInt64(dr["AccNoteID"].ToString());
                        ObjCVarvwPayables.mAccNoteCode = Convert.ToString(dr["AccNoteCode"].ToString());
                        ObjCVarvwPayables.mOperationCode = Convert.ToString(dr["OperationCode"].ToString());
                        ObjCVarvwPayables.mMasterOperationID = Convert.ToInt64(dr["MasterOperationID"].ToString());
                        ObjCVarvwPayables.mMasterOperationCode = Convert.ToString(dr["MasterOperationCode"].ToString());
                        ObjCVarvwPayables.mMasterBL = Convert.ToString(dr["MasterBL"].ToString());
                        ObjCVarvwPayables.mSupplierOperationPartnerTypeID = Convert.ToInt32(dr["SupplierOperationPartnerTypeID"].ToString());
                        ObjCVarvwPayables.mSupplierPartnerTypeID = Convert.ToInt32(dr["SupplierPartnerTypeID"].ToString());
                        ObjCVarvwPayables.mSupplierOperationPartnerTypeCode = Convert.ToString(dr["SupplierOperationPartnerTypeCode"].ToString());
                        ObjCVarvwPayables.mSupplierOperationPartnerTypeName = Convert.ToString(dr["SupplierOperationPartnerTypeName"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierID = Convert.ToInt32(dr["PartnerSupplierID"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierName = Convert.ToString(dr["PartnerSupplierName"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierBankName = Convert.ToString(dr["PartnerSupplierBankName"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierBankAccountNumber = Convert.ToString(dr["PartnerSupplierBankAccountNumber"].ToString());
                        ObjCVarvwPayables.mPartnerSupplierLocalName = Convert.ToString(dr["PartnerSupplierLocalName"].ToString());
                        ObjCVarvwPayables.mPartnerTypeCode = Convert.ToString(dr["PartnerTypeCode"].ToString());
                        ObjCVarvwPayables.mChargeTypeCode = Convert.ToString(dr["ChargeTypeCode"].ToString());
                        ObjCVarvwPayables.mChargeTypeName = Convert.ToString(dr["ChargeTypeName"].ToString());
                        ObjCVarvwPayables.mViewOrder = Convert.ToInt32(dr["ViewOrder"].ToString());
                        ObjCVarvwPayables.mCode = Convert.ToString(dr["Code"].ToString());
                        ObjCVarvwPayables.mName = Convert.ToString(dr["Name"].ToString());
                        ObjCVarvwPayables.mDefaultMeasurementID = Convert.ToInt32(dr["DefaultMeasurementID"].ToString());
                        ObjCVarvwPayables.mIsDefaultInOperations = Convert.ToBoolean(dr["IsDefaultInOperations"].ToString());
                        ObjCVarvwPayables.mIsDefaultInQuotation = Convert.ToBoolean(dr["IsDefaultInQuotation"].ToString());
                        ObjCVarvwPayables.mIsOcean = Convert.ToBoolean(dr["IsOcean"].ToString());
                        ObjCVarvwPayables.mIsAir = Convert.ToBoolean(dr["IsAir"].ToString());
                        ObjCVarvwPayables.mIsInland = Convert.ToBoolean(dr["IsInland"].ToString());
                        ObjCVarvwPayables.mIsInactive = Convert.ToBoolean(dr["IsInactive"].ToString());
                        ObjCVarvwPayables.mIsUsedInPayable = Convert.ToBoolean(dr["IsUsedInPayable"].ToString());
                        ObjCVarvwPayables.mIsUsedInReceivable = Convert.ToBoolean(dr["IsUsedInReceivable"].ToString());
                        ObjCVarvwPayables.mMeasurementCode = Convert.ToString(dr["MeasurementCode"].ToString());
                        ObjCVarvwPayables.mMeasurementName = Convert.ToString(dr["MeasurementName"].ToString());
                        ObjCVarvwPayables.mPOrCCode = Convert.ToString(dr["POrCCode"].ToString());
                        ObjCVarvwPayables.mPOrCName = Convert.ToString(dr["POrCName"].ToString());
                        ObjCVarvwPayables.mContainerTypeCode = Convert.ToString(dr["ContainerTypeCode"].ToString());
                        ObjCVarvwPayables.mContainerTypeName = Convert.ToString(dr["ContainerTypeName"].ToString());
                        ObjCVarvwPayables.mCurrencyCode = Convert.ToString(dr["CurrencyCode"].ToString());
                        ObjCVarvwPayables.mReceivableID = Convert.ToInt64(dr["ReceivableID"].ToString());
                        ObjCVarvwPayables.mBillTo = Convert.ToInt64(dr["BillTo"].ToString());
                        ObjCVarvwPayables.mBillToName = Convert.ToString(dr["BillToName"].ToString());
                        ObjCVarvwPayables.mCreatorName = Convert.ToString(dr["CreatorName"].ToString());
                        ObjCVarvwPayables.mModificatorName = Convert.ToString(dr["ModificatorName"].ToString());
                        ObjCVarvwPayables.mAccNoteBL = Convert.ToString(dr["AccNoteBL"].ToString());
                        ObjCVarvwPayables.mClientName = Convert.ToString(dr["ClientName"].ToString());
                        ObjCVarvwPayables.mSalesman = Convert.ToString(dr["Salesman"].ToString());
                        ObjCVarvwPayables.mOperationStageName = Convert.ToString(dr["OperationStageName"].ToString());
                        ObjCVarvwPayables.mIssueDate = Convert.ToDateTime(dr["IssueDate"].ToString());
                        ObjCVarvwPayables.mTrailerID = Convert.ToInt32(dr["TrailerID"].ToString());
                        ObjCVarvwPayables.mTrailerName = Convert.ToString(dr["TrailerName"].ToString());
                        ObjCVarvwPayables.mOperationContainersAndPackagesID = Convert.ToInt64(dr["OperationContainersAndPackagesID"].ToString());
                        ObjCVarvwPayables.mContainerNumber = Convert.ToString(dr["ContainerNumber"].ToString());
                        ObjCVarvwPayables.mTankOrFlexiNumber = Convert.ToString(dr["TankOrFlexiNumber"].ToString());
                        ObjCVarvwPayables.mOperatorID = Convert.ToInt32(dr["OperatorID"].ToString());
                        ObjCVarvwPayables.mBillID = Convert.ToInt64(dr["BillID"].ToString());
                        ObjCVarvwPayables.mHouseNumber = Convert.ToString(dr["HouseNumber"].ToString());
                        ObjCVarvwPayables.mCertificateNumber = Convert.ToString(dr["CertificateNumber"].ToString());
                        ObjCVarvwPayables.mQuotationCost = Convert.ToDecimal(dr["QuotationCost"].ToString());
                        ObjCVarvwPayables.mIsNeglectLimit = Convert.ToBoolean(dr["IsNeglectLimit"].ToString());
                        ObjCVarvwPayables.mPaymentDate = Convert.ToDateTime(dr["PaymentDate"].ToString());
                        ObjCVarvwPayables.mSupplierSiteID = Convert.ToInt32(dr["SupplierSiteID"].ToString());
                        ObjCVarvwPayables.mIsPrinted = Convert.ToBoolean(dr["IsPrinted"].ToString());
                        ObjCVarvwPayables.mOperationVehicleID = Convert.ToInt64(dr["OperationVehicleID"].ToString());
                        ObjCVarvwPayables.mMotorNumber = Convert.ToString(dr["MotorNumber"].ToString());
                        ObjCVarvwPayables.mChassisNumber = Convert.ToString(dr["ChassisNumber"].ToString());
                        ObjCVarvwPayables.mTruckID = Convert.ToInt32(dr["TruckID"].ToString());
                        ObjCVarvwPayables.mTruckNumber = Convert.ToString(dr["TruckNumber"].ToString());
                        ObjCVarvwPayables.mTruckingOrderID = Convert.ToInt64(dr["TruckingOrderID"].ToString());
                        ObjCVarvwPayables.mIsExcludeInTruckingOrderPrint = Convert.ToBoolean(dr["IsExcludeInTruckingOrderPrint"].ToString());
                        ObjCVarvwPayables.mIsOfficial = Convert.ToBoolean(dr["IsOfficial"].ToString());
                        ObjCVarvwPayables.mOfficialAmountPaid = Convert.ToDecimal(dr["OfficialAmountPaid"].ToString());
                        ObjCVarvwPayables.mTruckingOrderCode = Convert.ToString(dr["TruckingOrderCode"].ToString());
                        ObjCVarvwPayables.mIsOwnedByCompany = Convert.ToBoolean(dr["IsOwnedByCompany"].ToString());
                        ObjCVarvwPayables.mIsTruckingOrderApproved = Convert.ToBoolean(dr["IsTruckingOrderApproved"].ToString());
                        ObjCVarvwPayables.mClientID = Convert.ToInt32(dr["ClientID"].ToString());
                        ObjCVarvwPayables.mOfficialRemainingAmount = Convert.ToDecimal(dr["OfficialRemainingAmount"].ToString());
                        ObjCVarvwPayables.mChargeTypeCost = Convert.ToDecimal(dr["ChargeTypeCost"].ToString());
                        ObjCVarvwPayables.mPOL = Convert.ToInt32(dr["POL"].ToString());
                        ObjCVarvwPayables.mPOLCountryName = Convert.ToString(dr["POLCountryName"].ToString());
                        ObjCVarvwPayables.mPOLName = Convert.ToString(dr["POLName"].ToString());
                        ObjCVarvwPayables.mPOD = Convert.ToInt32(dr["POD"].ToString());
                        ObjCVarvwPayables.mPODCountryName = Convert.ToString(dr["PODCountryName"].ToString());
                        ObjCVarvwPayables.mPODName = Convert.ToString(dr["PODName"].ToString());
                        ObjCVarvwPayables.mPOLCountryID = Convert.ToInt32(dr["POLCountryID"].ToString());
                        ObjCVarvwPayables.mPODCountryID = Convert.ToInt32(dr["PODCountryID"].ToString());
                        ObjCVarvwPayables.mChargeTypeGroupID = Convert.ToInt32(dr["ChargeTypeGroupID"].ToString());
                        ObjCVarvwPayables.mChargeTypeGroupName = Convert.ToString(dr["ChargeTypeGroupName"].ToString());
                        ObjCVarvwPayables.mIsTank = Convert.ToBoolean(dr["IsTank"].ToString());
                        ObjCVarvwPayables.mInterTransitionalPrice = Convert.ToDecimal(dr["InterTransitionalPrice"].ToString());
                        ObjCVarvwPayables.mInterServiceProviderDepartmentID = Convert.ToInt32(dr["InterServiceProviderDepartmentID"].ToString());
                        ObjCVarvwPayables.mExpectedArrival = Convert.ToDateTime(dr["ExpectedArrival"].ToString());
                        ObjCVarvwPayables.mActualArrival = Convert.ToDateTime(dr["ActualArrival"].ToString());
                        ObjCVarvwPayables.mVesselID = Convert.ToInt32(dr["VesselID"].ToString());
                        ObjCVarvwPayables.mVesselName = Convert.ToString(dr["VesselName"].ToString());
                        TotRecs = Convert.ToInt32(dr["TotalRecords"].ToString());
                        lstCVarvwPayables.Add(ObjCVarvwPayables);
                    }
                }
                catch (Exception ex)
                {
                    Exp = ex;
                }
                finally
                {
                    if (dr != null)
                    {
                        dr.Close();
                        dr.Dispose();
                    }
                }
                tr.Commit();
            }
            catch (Exception ex)
            {
                Exp = ex;
            }
            finally
            {
                Con.Close();
                Con.Dispose();
            }
            return Exp;
        }

        #endregion
    }
}
